{"version":3,"file":"geov-yasgui-data-validation.entry.esm.js","sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-data-validation/geov-yasgui-data-validation.css?tag=geov-yasgui-data-validation&encapsulation=shadow","node_modules/@geovistory/design-system-web/dist/collection/components/geov-yasgui-data-validation/geov-yasgui-data-validation.js"],"sourcesContent":["div,\np {\n  color: var(--ion-color-danger);\n}\n","import { Host, h } from \"@stencil/core\";\n/**\n * The component validates data and emits the validation result (valid/invalid).\n *\n * It has two required inputs: `data` (the input data to be validated) and 'expectedKeys' (an array of expected keys containing the validation rules).\n *\n * The component emits a custom event named \"validationCompleted\" with a boolean value:\n *   - true if the validation passes,\n *   - false if there are validation errors.\n *\n * In case of invalid data, it displays understandable warnings/error messages.\n */\nexport class GeovYasguiDataValidation {\n  constructor() {\n    this.requiredMismatch = new Set();\n    this.datatypeMismatch = new Set();\n    this.dataIsNotValid = {};\n    this.data = undefined;\n    this.expectedKeys = undefined;\n  }\n  componentWillLoad() {\n    this.validateData();\n  }\n  validateData() {\n    this.requiredMismatch.clear();\n    this.datatypeMismatch.clear();\n    this.dataIsNotValid = {};\n    this.expectedKeys.forEach(expectedKey => {\n      // we iterate over rows\n      this.data.forEach(row => {\n        var _a;\n        // check if required key is available in this row\n        if (expectedKey.required && row[expectedKey.name] === undefined) {\n          this.requiredMismatch.add(expectedKey.name);\n        }\n        // iterate over cells in row\n        for (const bindingKey in row) {\n          if (Object.prototype.hasOwnProperty.call(row, bindingKey)) {\n            // get the cell\n            const cell = row[bindingKey];\n            // if there is a validation defined for this binding key...\n            if (expectedKey.name === bindingKey) {\n              // ...check datatype\n              if (expectedKey.datatype && ((_a = cell === null || cell === void 0 ? void 0 : cell.datatype) !== null && _a !== void 0 ? _a : 'string') !== expectedKey.datatype) {\n                this.datatypeMismatch.add(expectedKey.name);\n              }\n              // ...check custom validator\n              if ((expectedKey === null || expectedKey === void 0 ? void 0 : expectedKey.customValidator) && typeof expectedKey.customValidator === 'function') {\n                const customValidationError = expectedKey.customValidator(cell);\n                if (customValidationError)\n                  this.dataIsNotValid[expectedKey.name] = customValidationError;\n              }\n            }\n          }\n        }\n      });\n    });\n    // Emit the validationCompleted event with the validation results\n    const isValid = this.requiredMismatch.size === 0 && this.datatypeMismatch.size === 0 && Object.keys(this.dataIsNotValid).length === 0;\n    this.validationCompleted.emit(isValid);\n  }\n  render() {\n    return (h(Host, null, Array.from(this.requiredMismatch).map(key => (h(\"p\", null, \"The variable ?\", key, \" must not return empty values. Currently it is either not bound or it returns empty records.\"))), Array.from(this.datatypeMismatch).map(key => {\n      var _a;\n      return (h(\"p\", null, \"The variable ?\", key, \" must be of datatype \", (_a = this.expectedKeys.find(e => e.name === key)) === null || _a === void 0 ? void 0 :\n        _a.datatype, \". Some or all records do not match that data type.\"));\n    }), Object.keys(this.dataIsNotValid).map(key => (h(\"div\", null, \"Validation errors for variable ?\", key, \":\", h(\"ul\", null, Array.from(this.dataIsNotValid[key]).map(message => (h(\"li\", null, message)))))))));\n  }\n  static get is() { return \"geov-yasgui-data-validation\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-data-validation.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-yasgui-data-validation.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"data\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Parser.Binding[]\",\n          \"resolved\": \"Binding[]\",\n          \"references\": {\n            \"Parser\": {\n              \"location\": \"import\",\n              \"path\": \"@triply/yasr\",\n              \"id\": \"\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        }\n      },\n      \"expectedKeys\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ExpectedKey[]\",\n          \"resolved\": \"ExpectedKey[]\",\n          \"references\": {\n            \"ExpectedKey\": {\n              \"location\": \"local\",\n              \"path\": \"/Users/admin/Gorg/design-system/packages/design-system-web/src/components/geov-yasgui-data-validation/geov-yasgui-data-validation.tsx\",\n              \"id\": \"src/components/geov-yasgui-data-validation/geov-yasgui-data-validation.tsx::ExpectedKey\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        }\n      }\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"validationCompleted\",\n        \"name\": \"validationCompleted\",\n        \"bubbles\": true,\n        \"cancelable\": true,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        }\n      }];\n  }\n}\n//# sourceMappingURL=geov-yasgui-data-validation.js.map\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}