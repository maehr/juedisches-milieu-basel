{"version":3,"file":"geov-explorer.entry.esm.js","sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/getTextFilter.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/ClassFilterFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/EntityListFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/lib/FullCountFetcher.js","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/geov-explorer.css?tag=geov-explorer","node_modules/@geovistory/design-system-web/dist/collection/components/geov-explorer/geov-explorer.js"],"sourcesContent":["/**\n * Transforms a string into a jena-lucene search string\n * @param s search string entered by user\n * @returns search string usable for lucene text search\n */\nexport const getTextFilter = (s) => s\n  .trim()\n  .replace('*', ' ')\n  .split(' ')\n  .map(word => {\n  return '*' + word + '*';\n})\n  .join(' AND '); // will form like this : *Girard* AND *GrÃ©goire*\n//# sourceMappingURL=getTextFilter.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString) => `# classes\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT ?class ?label ?count\nWHERE {\n  {\n    SELECT  ?class (count(distinct ?entityUri) as ?count)\n    WHERE {\n      ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n \t   ?entityUri a ?class .\n    }\n    GROUP BY ?class\n    ORDER by DESC(?count)\n  }\n  ?class rdfs:label ?label\n}\nHAVING(?label != \"\")\n`;\nexport class ClassFilterFetcher {\n  async fetch(sparqlEndpoint, searchString) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b;\n      // process and return the data in case of success\n      const x = {\n        items: (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b.map(b => ({ classLabel: b.label.value, classUri: b.class.value, instanceCount: Number(b.count.value) })),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=ClassFilterFetcher.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString, classUris, limit, offset) => {\n  return `# entities\n  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n  PREFIX text: <http://jena.apache.org/text#>\n  SELECT ?entityUri ?entityLabel ?classUri ?classLabel\n  {\n    {\n    SELECT DISTINCT ?entityUri  ?entityLabel ?classUri ?classLabel {\n        {\n          SELECT DISTINCT ?entityUri ?entityLabel ?classUri\n          {\n              {\n                    SELECT ?entityUri  ?entityLabel\n                    {\n                        ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n\n                        ${!(classUris === null || classUris === void 0 ? void 0 : classUris.length)\n    ? `\n                        {\n                          {\n                            SELECT DISTINCT  ?classWithInstances\n                            WHERE {\n                              ?entityUri a ?classWithInstances .\n                            }\n                            GROUP BY ?classWithInstances\n                          }\n                        }\n                        {?entityUri a ?classWithInstances .}\n                        `\n    : ``}\n\n                        ${classUris.map(x => `{?entityUri a <${x}> .}`).join('\\nUNION\\n')}\n                        OPTIONAL {?entityUri rdfs:label ?entityLabel .}\n\n                  }\n                  LIMIT ${limit}\n                  OFFSET ${offset}\n              }\n              ?entityUri a ?classUri .\n          }\n        }\n        OPTIONAL { ?classUri rdfs:label ?classLabel .}\n      }\n      HAVING (?classLabel!=\"\")\n    }\n  }\n`;\n};\nexport class EntityListFetcher {\n  async fetch(sparqlEndpoint, searchString, classUris, limit, offset) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString, classUris, limit, offset));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b;\n      // process and return the data in case of success\n      const x = {\n        items: (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b.map(b => ({ classLabel: b.classLabel.value, entityLabel: b.entityLabel.value, entityUri: b.entityUri.value, classUri: b.classUri.value })),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=EntityListFetcher.js.map\n","import { sparqlJson } from \"../../../lib/sparqlJson\";\nimport { getTextFilter } from \"./getTextFilter\";\nexport const getQuery = (searchString, classUris) => {\n  return `# count\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX ontome: <https://ontome.net/ontology/>\nPREFIX text: <http://jena.apache.org/text#>\n\nSELECT (count(distinct ?entityUri) as ?count)\nWHERE {\n  ${searchString ? `(?entityUri) text:query ('${getTextFilter(searchString)}') . ` : ``}\n\n  ${!(classUris === null || classUris === void 0 ? void 0 : classUris.length)\n    ? `\n          {\n            {\n              SELECT DISTINCT  ?classWithInstances\n              WHERE {\n                 ?entityUri a ?classWithInstances .\n              }\n              GROUP BY ?classWithInstances\n            }\n          }\n          {?entityUri a ?classWithInstances .}\n          `\n    : `${classUris.map(x => `{?entityUri a <${x}> .}`).join('\\nUNION\\n')}`}\n}\n`;\n};\nexport class FullCountFetcher {\n  async fetch(sparqlEndpoint, searchString, classUris) {\n    this.promiseWithCancel = sparqlJson(sparqlEndpoint, getQuery(searchString, classUris));\n    return this.promiseWithCancel\n      .then(res => {\n      var _a, _b, _c;\n      // process and return the data in case of success\n      const x = {\n        count: Number((_c = (_b = (_a = res === null || res === void 0 ? void 0 : res.results) === null || _a === void 0 ? void 0 : _a.bindings) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.count.value),\n        loading: false,\n      };\n      return x;\n    })\n      .catch(_ => {\n      // process and return the data in case of error\n      const x = {\n        error: true,\n        loading: false,\n      };\n      return x;\n    });\n  }\n}\n//# sourceMappingURL=FullCountFetcher.js.map\n",":host {\n  display: block;\n}\n\n.entity-count-col {\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n}\n\n.entity-count-label {\n  height: 1rem;\n  padding-inline-start: calc(var(--ion-safe-area-left, 0px) + 20px);\n}\n\n.entity-count-sm {\n  margin-top: 2px;\n  margin-bottom: 1rem;\n  display: block;\n}\n\nion-searchbar {\n  padding-bottom: 0;\n}\n\n.paginator-container {\n  margin-top: 1rem;\n  align-items: center;\n}\n\n.paginator {\n  margin-left: auto;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { getSSRData } from \"../../lib/ssr/getSSRData\";\nimport { setSSRData } from \"../../lib/ssr/setSSRData\";\nimport { setSSRId } from \"../../lib/ssr/setSSRId\";\nimport { ClassFilterFetcher } from \"./lib/ClassFilterFetcher\";\nimport { EntityListFetcher } from \"./lib/EntityListFetcher\";\nimport { FullCountFetcher } from \"./lib/FullCountFetcher\";\n/**\n * This component is a UI to explore Geovistory entities exposed on a Sparql endpoint.\n *\n * Features:\n * - Filter by class\n * - Filter by search stirng\n */\nexport class GeovExplorer {\n  set data(d) {\n    this.entityList = d === null || d === void 0 ? void 0 : d.entityList;\n    this.classSelect = d === null || d === void 0 ? void 0 : d.classSelect;\n    this.fullCount = d === null || d === void 0 ? void 0 : d.fullCount;\n    this.__data = d;\n  }\n  get data() {\n    return this.__data;\n  }\n  set offset(val) {\n    this._offset = val;\n    this.fetchEntityListData();\n  }\n  get offset() {\n    return this._offset;\n  }\n  set searchString(val) {\n    this._searchString = val;\n    this.offset = 0;\n    this.fetchClassSelectData();\n    this.fetchEntityListData();\n    this.fetchFullCountData();\n  }\n  get searchString() {\n    return this._searchString;\n  }\n  set selectedClass(val) {\n    var _a;\n    if (((_a = this._selectedClass) === null || _a === void 0 ? void 0 : _a.classUri) !== (val === null || val === void 0 ? void 0 : val.classUri)) {\n      this._selectedClass = val;\n      this._offset = 0;\n      this.fetchEntityListData();\n      this.fetchFullCountData();\n    }\n  }\n  get selectedClass() {\n    return this._selectedClass;\n  }\n  /**\n   * called once when component is ready. good for data fetching.\n   * if `componentWillLoad()` returns a promise, stencil hydrate\n   * awaits this promise for server side rendering. See:\n   * https://stenciljs.com/docs/static-site-generation-basics\n   */\n  componentWillLoad() {\n    this._searchString = this.initSearchString;\n    // try to get data from ssr\n    this.data = getSSRData(this._ssrId);\n    // if no data found, fetchData\n    if (!this.data) {\n      // fetch data via http\n      const promise = this.fetchData()\n        .then(d => {\n        this.data = d;\n        setSSRData(this._ssrId, d);\n        return d;\n      })\n        .catch(d => {\n        this.data = d;\n        return d;\n      });\n      if (this.fetchBeforeRender)\n        return promise; // <- await this promise!\n    }\n  }\n  constructor() {\n    this.limit = 10;\n    this._ssrId = undefined;\n    this.sparqlEndpoint = undefined;\n    this.fetchBeforeRender = false;\n    this.initSearchString = undefined;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.preferredItems = undefined;\n    this.classUriPrefix = undefined;\n    this.entityList = undefined;\n    this.classSelect = undefined;\n    this.fullCount = undefined;\n    this._offset = 0;\n    // set id for server side rendering of dynamic data\n    setSSRId(this);\n  }\n  /**\n   * Do the sparql request(s)\n   * @returns a Promise with the data for this component\n   */\n  async fetchData() {\n    return Promise.all([await this.fetchClassSelectData(), this.fetchEntityListData(), this.fetchFullCountData()]).then(([classSelect, entityList, fullCount]) => {\n      return { classSelect, entityList, fullCount, loading: false };\n    });\n  }\n  async fetchClassSelectData() {\n    this.classSelect = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchClassSelect)\n      this.fetchClassSelect.promiseWithCancel.cancel();\n    this.fetchClassSelect = new ClassFilterFetcher();\n    this.classSelect = await this.fetchClassSelect.fetch(this.sparqlEndpoint, this.searchString);\n    // unset ongoing fetch\n    this.fetchClassSelect = undefined;\n    return this.classSelect;\n  }\n  async fetchEntityListData() {\n    this.entityList = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchEntityList)\n      this.fetchEntityList.promiseWithCancel.cancel();\n    this.fetchEntityList = new EntityListFetcher();\n    this.entityList = await this.fetchEntityList.fetch(this.sparqlEndpoint, this.searchString, this.selectedClass ? [this.selectedClass.classUri] : [], this.limit, this.offset);\n    // unset ongoing fetch\n    this.fetchEntityList = undefined;\n    return this.entityList;\n  }\n  async fetchFullCountData() {\n    this.fullCount = { loading: true };\n    // if there is an ongoing fetch, cancel it\n    if (this.fetchFullCount)\n      this.fetchFullCount.promiseWithCancel.cancel();\n    this.fetchFullCount = new FullCountFetcher();\n    this.fullCount = await this.fetchFullCount.fetch(this.sparqlEndpoint, this.searchString, this.selectedClass ? [this.selectedClass.classUri] : []);\n    // unset ongoing fetch\n    this.fetchFullCount = undefined;\n    return this.fullCount;\n  }\n  render() {\n    var _a, _b, _c, _d, _e;\n    return (h(Host, null, h(\"ion-grid\", null, h(\"ion-row\", null, h(\"ion-col\", { sizeMd: \"0\", sizeLg: \"6\", sizeXl: \"3\", class: \"entity-count-col ion-hide-lg-down\" }), h(\"ion-col\", { sizeMd: \"12\", sizeLg: \"6\", sizeXl: \"9\" }, h(\"ion-searchbar\", { value: this.searchString, debounce: 300, onIonChange: e => {\n        this.searchString = e.detail.value;\n      } }), h(\"geov-class-select-popup\", { class: \"ion-hide-lg-up\", onSelectionChanged: e => {\n        this.selectedClass = e.detail.value;\n      }, ref: el => {\n        var _a;\n        el.initValue = this.selectedClass;\n        el.items = (_a = this.classSelect) === null || _a === void 0 ? void 0 : _a.items;\n      } }), h(\"ion-note\", { class: \"entity-count-sm entity-count-label\" }, ((_a = this.fullCount) === null || _a === void 0 ? void 0 : _a.loading) ? h(\"ion-skeleton-text\", { animated: true, style: { width: '40px' } }) : h(\"span\", null, (_b = this.fullCount) === null || _b === void 0 ? void 0 :\n      _b.count, \" Entities\"), ' '))), h(\"ion-row\", null, h(\"ion-col\", { sizeMd: \"0\", sizeLg: \"6\", sizeXl: \"3\", class: \"ion-hide-lg-down\" }, h(\"geov-class-radio-group\", { onSelectionChanged: e => {\n        this.selectedClass = e.detail.value;\n      }, ref: el => {\n        var _a, _b;\n        el.initValue = this.selectedClass;\n        el.preferredItems = this.preferredItems;\n        if (this.classUriPrefix)\n          el.uriPrefix = this.classUriPrefix;\n        el.items = (_a = this.classSelect) === null || _a === void 0 ? void 0 : _a.items;\n        el.loading = (_b = this.classSelect) === null || _b === void 0 ? void 0 : _b.loading;\n      } })), h(\"ion-col\", { sizeMd: \"12\", sizeLg: \"6\", sizeXl: \"9\" }, h(\"geov-entity-list\", { defaultPageSize: this.limit, uriRegex: this.uriRegex, uriReplace: this.uriReplace, ref: el => {\n        var _a, _b;\n        el.items = (_a = this.entityList) === null || _a === void 0 ? void 0 : _a.items;\n        el.loading = (_b = this.entityList) === null || _b === void 0 ? void 0 : _b.loading;\n      } }), h(\"ion-item\", { class: \"paginator-container\", lines: \"none\" }, ((_c = this.fullCount) === null || _c === void 0 ? void 0 : _c.count) && !((_d = this.fullCount) === null || _d === void 0 ? void 0 : _d.loading) && (h(\"geov-paginator\", { class: \"paginator\", onPageChanged: e => {\n        console.log('onPageChanged');\n        this.offset = e.detail.pageSize * e.detail.pageIndex;\n      }, pageSize: this.limit, length: (_e = this.fullCount) === null || _e === void 0 ? void 0 : _e.count })))))), h(\"slot\", null)));\n  }\n  static get is() { return \"geov-explorer\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-explorer.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-explorer.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"_ssrId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"_ssrId is short for server side rendering id and\\nidentifies this component and the fetched data\\nrespectively. Set this only if you want to\\nenable this component to fetch serve side\"\n        },\n        \"attribute\": \"_ssr-id\",\n        \"reflect\": true\n      },\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If true, the component will not render before the\\ninitial data is fetched\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"initSearchString\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"initialize the component with a given search string\"\n        },\n        \"attribute\": \"init-search-string\",\n        \"reflect\": false\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"preferredItems\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string[]\",\n          \"resolved\": \"string[]\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"preferredItems\\nList of preferred items. If set, these items will be\\nshown first in the list of items.\\n\\nExample: [\\\"c523\\\", \\\"c50\\\"]\"\n        }\n      },\n      \"classUriPrefix\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"type\",\n              \"text\": \"{string}\"\n            }],\n          \"text\": \"classUriPrefix\\nOptional prefix for the class uris.\\nExample: \\\"http://geovistory.org/resource/\\\"\\nDefault: \\\"http://geovistory.org/resource/\\\"\"\n        },\n        \"attribute\": \"class-uri-prefix\",\n        \"reflect\": false\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"entityList\": {},\n      \"classSelect\": {},\n      \"fullCount\": {},\n      \"_offset\": {}\n    };\n  }\n}\n//# sourceMappingURL=geov-explorer.js.map\n"],"names":["getQuery"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}