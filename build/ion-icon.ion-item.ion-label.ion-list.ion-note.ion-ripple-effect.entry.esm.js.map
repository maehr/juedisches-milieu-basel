{"version":3,"file":"ion-icon.ion-item.ion-label.ion-list.ion-note.ion-ripple-effect.entry.esm.js","sources":["node_modules/ionicons/dist/collection/components/icon/utils.js","node_modules/ionicons/dist/collection/components/icon/validate.js","node_modules/ionicons/dist/collection/components/icon/request.js","node_modules/ionicons/dist/collection/components/icon/icon.css?tag=ion-icon&encapsulation=shadow","node_modules/ionicons/dist/collection/components/icon/icon.js","node_modules/@ionic/core/dist/collection/components/item/item.ios.css?tag=ion-item&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.md.css?tag=ion-item&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/item/item.js","node_modules/@ionic/core/dist/collection/components/label/label.ios.css?tag=ion-label&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/label/label.md.css?tag=ion-label&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/label/label.js","node_modules/@ionic/core/dist/collection/components/list/list.ios.css?tag=ion-list&mode=ios","node_modules/@ionic/core/dist/collection/components/list/list.md.css?tag=ion-list&mode=md","node_modules/@ionic/core/dist/collection/components/list/list.js","node_modules/@ionic/core/dist/collection/components/note/note.ios.css?tag=ion-note&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/note/note.md.css?tag=ion-note&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/note/note.js","node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.css?tag=ion-ripple-effect&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/ripple-effect/ripple-effect.js"],"sourcesContent":["import { getAssetPath } from \"@stencil/core\";\nlet CACHED_MAP;\nexport const getIconMap = () => {\n  if (typeof window === 'undefined') {\n    return new Map();\n  }\n  else {\n    if (!CACHED_MAP) {\n      const win = window;\n      win.Ionicons = win.Ionicons || {};\n      CACHED_MAP = win.Ionicons.map = win.Ionicons.map || new Map();\n    }\n    return CACHED_MAP;\n  }\n};\nexport const addIcons = (icons) => {\n  Object.keys(icons).forEach(name => {\n    addToIconMap(name, icons[name]);\n    /**\n     * Developers can also pass in the SVG object directly\n     * and Ionicons can map the object to a kebab case name.\n     * Example: addIcons({ addCircleOutline });\n     * This will create an \"addCircleOutline\" entry and\n     * an \"add-circle-outline\" entry.\n     * Usage: <ion-icon name=\"add-circle-outline\"></ion-icon>\n     * Using name=\"addCircleOutline\" is valid too, but the\n     * kebab case naming is preferred.\n     */\n    const toKebabCase = name.replace(/([a-z0-9]|(?=[A-Z]))([A-Z0-9])/g, \"$1-$2\").toLowerCase();\n    if (name !== toKebabCase) {\n      addToIconMap(toKebabCase, icons[name]);\n    }\n  });\n};\nconst addToIconMap = (name, data) => {\n  const map = getIconMap();\n  const existingIcon = map.get(name);\n  if (existingIcon === undefined) {\n    map.set(name, data);\n    /**\n     * Importing and defining the same icon reference\n     * multiple times should not yield a warning.\n     */\n  }\n  else if (existingIcon !== data) {\n    console.warn(`[Ionicons Warning]: Multiple icons were mapped to name \"${name}\". Ensure that multiple icons are not mapped to the same icon name.`);\n  }\n};\nexport const getUrl = (i) => {\n  let url = getSrc(i.src);\n  if (url) {\n    return url;\n  }\n  url = getName(i.name, i.icon, i.mode, i.ios, i.md);\n  if (url) {\n    return getNamedUrl(url, i);\n  }\n  if (i.icon) {\n    url = getSrc(i.icon);\n    if (url) {\n      return url;\n    }\n    url = getSrc(i.icon[i.mode]);\n    if (url) {\n      return url;\n    }\n  }\n  return null;\n};\nconst getNamedUrl = (iconName, iconEl) => {\n  const url = getIconMap().get(iconName);\n  if (url) {\n    return url;\n  }\n  try {\n    return getAssetPath(`svg/${iconName}.svg`);\n  }\n  catch (e) {\n    /**\n     * In the custom elements build version of ionicons, referencing an icon\n     * by name will throw an invalid URL error because the asset path is not defined.\n     * This catches that error and logs something that is more developer-friendly.\n     * We also include a reference to the ion-icon element so developers can\n     * figure out which instance of ion-icon needs to be updated.\n     */\n    console.warn(`[Ionicons Warning]: Could not load icon with name \"${iconName}\". Ensure that the icon is registered using addIcons or that the icon SVG data is passed directly to the icon component.`, iconEl);\n  }\n};\nexport const getName = (iconName, icon, mode, ios, md) => {\n  // default to \"md\" if somehow the mode wasn't set\n  mode = (mode && toLower(mode)) === 'ios' ? 'ios' : 'md';\n  // if an icon was passed in using the ios or md attributes\n  // set the iconName to whatever was passed in\n  if (ios && mode === 'ios') {\n    iconName = toLower(ios);\n  }\n  else if (md && mode === 'md') {\n    iconName = toLower(md);\n  }\n  else {\n    if (!iconName && icon && !isSrc(icon)) {\n      iconName = icon;\n    }\n    if (isStr(iconName)) {\n      iconName = toLower(iconName);\n    }\n  }\n  if (!isStr(iconName) || iconName.trim() === '') {\n    return null;\n  }\n  // only allow alpha characters and dash\n  const invalidChars = iconName.replace(/[a-z]|-|\\d/gi, '');\n  if (invalidChars !== '') {\n    return null;\n  }\n  return iconName;\n};\nexport const getSrc = (src) => {\n  if (isStr(src)) {\n    src = src.trim();\n    if (isSrc(src)) {\n      return src;\n    }\n  }\n  return null;\n};\nexport const isSrc = (str) => str.length > 0 && /(\\/|\\.)/.test(str);\nexport const isStr = (val) => typeof val === 'string';\nexport const toLower = (val) => val.toLowerCase();\n/**\n * Elements inside of web components sometimes need to inherit global attributes\n * set on the host. For example, the inner input in `ion-input` should inherit\n * the `title` attribute that developers set directly on `ion-input`. This\n * helper function should be called in componentWillLoad and assigned to a variable\n * that is later used in the render function.\n *\n * This does not need to be reactive as changing attributes on the host element\n * does not trigger a re-render.\n */\nexport const inheritAttributes = (el, attributes = []) => {\n  const attributeObject = {};\n  attributes.forEach(attr => {\n    if (el.hasAttribute(attr)) {\n      const value = el.getAttribute(attr);\n      if (value !== null) {\n        attributeObject[attr] = el.getAttribute(attr);\n      }\n      el.removeAttribute(attr);\n    }\n  });\n  return attributeObject;\n};\n/**\n * Returns `true` if the document or host element\n * has a `dir` set to `rtl`. The host value will always\n * take priority over the root document value.\n */\nexport const isRTL = (hostEl) => {\n  if (hostEl) {\n    if (hostEl.dir !== '') {\n      return hostEl.dir.toLowerCase() === 'rtl';\n    }\n  }\n  return (document === null || document === void 0 ? void 0 : document.dir.toLowerCase()) === 'rtl';\n};\n","import { isStr } from \"./utils\";\nexport const validateContent = (svgContent) => {\n  const div = document.createElement('div');\n  div.innerHTML = svgContent;\n  // setup this way to ensure it works on our buddy IE\n  for (let i = div.childNodes.length - 1; i >= 0; i--) {\n    if (div.childNodes[i].nodeName.toLowerCase() !== 'svg') {\n      div.removeChild(div.childNodes[i]);\n    }\n  }\n  // must only have 1 root element\n  const svgElm = div.firstElementChild;\n  if (svgElm && svgElm.nodeName.toLowerCase() === 'svg') {\n    const svgClass = svgElm.getAttribute('class') || '';\n    svgElm.setAttribute('class', (svgClass + ' s-ion-icon').trim());\n    // root element must be an svg\n    // lets double check we've got valid elements\n    // do not allow scripts\n    if (isValid(svgElm)) {\n      return div.innerHTML;\n    }\n  }\n  return '';\n};\nexport const isValid = (elm) => {\n  if (elm.nodeType === 1) {\n    if (elm.nodeName.toLowerCase() === 'script') {\n      return false;\n    }\n    for (let i = 0; i < elm.attributes.length; i++) {\n      const name = elm.attributes[i].name;\n      if (isStr(name) && name.toLowerCase().indexOf('on') === 0) {\n        return false;\n      }\n    }\n    for (let i = 0; i < elm.childNodes.length; i++) {\n      if (!isValid(elm.childNodes[i])) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nexport const isSvgDataUrl = (url) => url.startsWith('data:image/svg+xml');\nexport const isEncodedDataUrl = (url) => url.indexOf(';utf8,') !== -1;\n","import { isEncodedDataUrl, isSvgDataUrl, validateContent } from \"./validate\";\nexport const ioniconContent = new Map();\nconst requests = new Map();\nlet parser;\nexport const getSvgContent = (url, sanitize) => {\n  // see if we already have a request for this url\n  let req = requests.get(url);\n  if (!req) {\n    if (typeof fetch !== 'undefined' && typeof document !== 'undefined') {\n      /**\n       * If the url is a data url of an svg, then try to parse it\n       * with the DOMParser. This works with content security policies enabled.\n       */\n      if (isSvgDataUrl(url) && isEncodedDataUrl(url)) {\n        if (!parser) {\n          /**\n           * Create an instance of the DOM parser. This creates a single\n           * parser instance for the entire app, which is more efficient.\n           */\n          parser = new DOMParser();\n        }\n        const doc = parser.parseFromString(url, 'text/html');\n        const svg = doc.querySelector('svg');\n        if (svg) {\n          ioniconContent.set(url, svg.outerHTML);\n        }\n        return Promise.resolve();\n      }\n      else {\n        // we don't already have a request\n        req = fetch(url).then((rsp) => {\n          if (rsp.ok) {\n            return rsp.text().then((svgContent) => {\n              if (svgContent && sanitize !== false) {\n                svgContent = validateContent(svgContent);\n              }\n              ioniconContent.set(url, svgContent || '');\n            });\n          }\n          ioniconContent.set(url, '');\n        });\n        // cache for the same requests\n        requests.set(url, req);\n      }\n    }\n    else {\n      // set to empty for ssr scenarios and resolve promise\n      ioniconContent.set(url, '');\n      return Promise.resolve();\n    }\n  }\n  return req;\n};\n",":host {\n  display: inline-block;\n\n  width: 1em;\n  height: 1em;\n\n  contain: strict;\n\n  fill: currentColor;\n\n  box-sizing: content-box !important;\n\n}\n\n:host .ionicon {\n  stroke: currentColor;\n}\n\n.ionicon-fill-none {\n  fill: none;\n}\n\n.ionicon-stroke-width {\n  stroke-width: 32px;\n  stroke-width: var(--ionicon-stroke-width, 32px);\n}\n\n.icon-inner,\n.ionicon,\nsvg {\n  display: block;\n\n  height: 100%;\n  width: 100%;\n}\n\n/* Icon RTL\n * -----------------------------------------------------------\n */\n\n/**\n * Safari <16.4 incorrectly reports\n * that it supports :dir(rtl) when it does not.\n * This @supports statement lets us target\n * WebKit browsers to apply the RTL fallback.\n * -webkit-named-image only exists on WebKit.\n * For WebKit browsers that do support :dir(rtl)\n * (i.e. Safari >= 16.4) then the :dir(rtl)\n * code farther down on the page will take\n * effect and override this fallback.\n */\n@supports (background: -webkit-named-image(i)) {\n  :host(.icon-rtl) .icon-inner {\n    transform: scaleX(-1);\n  }\n}\n\n/**\n * Fallback for browsers that support\n * neither :host-context nor :dir.\n * The icon will not react to dir\n * changes, but it will at least\n * respect the dir on component load.\n */\n@supports not selector(:dir(rtl)) and selector(:host-context([dir='rtl'])) {\n  :host(.icon-rtl) .icon-inner {\n    transform: scaleX(-1);\n  }\n}\n\n/* :host-context is supported in chromium; :dir is supported in safari & firefox */\n:host(.flip-rtl):host-context([dir='rtl']) .icon-inner {\n  transform: scaleX(-1);\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.flip-rtl:dir(rtl)) .icon-inner {\n    transform: scaleX(-1);\n  }\n  /**\n   * This is needed for WebKit otherwise the fallback\n   * will always cause the icon to be flipped if the document\n   * loads in RTL.\n   */\n  :host(.flip-rtl:dir(ltr)) .icon-inner {\n    transform: scaleX(1);\n  }\n}\n\n/* Icon Sizes\n * -----------------------------------------------------------\n */\n\n:host(.icon-small) {\n  font-size: 1.125rem !important;\n}\n\n:host(.icon-large) {\n  font-size: 2rem !important;\n}\n\n/* Icon Colors\n * -----------------------------------------------------------\n */\n\n:host(.ion-color) {\n  color: var(--ion-color-base) !important;\n}\n\n:host(.ion-color-primary) {\n  --ion-color-base: var(--ion-color-primary, #3880ff);\n}\n\n:host(.ion-color-secondary) {\n  --ion-color-base: var(--ion-color-secondary, #0cd1e8);\n}\n\n:host(.ion-color-tertiary) {\n  --ion-color-base: var(--ion-color-tertiary, #f4a942);\n}\n\n:host(.ion-color-success) {\n  --ion-color-base: var(--ion-color-success, #10dc60);\n}\n\n:host(.ion-color-warning) {\n  --ion-color-base: var(--ion-color-warning, #ffce00);\n}\n\n:host(.ion-color-danger) {\n  --ion-color-base: var(--ion-color-danger, #f14141);\n}\n\n:host(.ion-color-light) {\n  --ion-color-base: var(--ion-color-light, #f4f5f8);\n}\n\n:host(.ion-color-medium) {\n  --ion-color-base: var(--ion-color-medium, #989aa2);\n}\n\n:host(.ion-color-dark) {\n  --ion-color-base: var(--ion-color-dark, #222428);\n}\n","import { Build, Host, h } from \"@stencil/core\";\nimport { getSvgContent, ioniconContent } from \"./request\";\nimport { getName, getUrl, inheritAttributes, isRTL } from \"./utils\";\nexport class Icon {\n  constructor() {\n    this.iconName = null;\n    this.inheritedAttributes = {};\n    this.didLoadIcon = false;\n    this.svgContent = undefined;\n    this.isVisible = false;\n    this.mode = getIonMode();\n    this.color = undefined;\n    this.ios = undefined;\n    this.md = undefined;\n    this.flipRtl = undefined;\n    this.name = undefined;\n    this.src = undefined;\n    this.icon = undefined;\n    this.size = undefined;\n    this.lazy = false;\n    this.sanitize = true;\n  }\n  componentWillLoad() {\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n  }\n  connectedCallback() {\n    // purposely do not return the promise here because loading\n    // the svg file should not hold up loading the app\n    // only load the svg if it's visible\n    this.waitUntilVisible(this.el, '50px', () => {\n      this.isVisible = true;\n      this.loadIcon();\n    });\n  }\n  componentDidLoad() {\n    /**\n     * Addresses an Angular issue where property values are assigned after the 'connectedCallback' but prior to the registration of watchers.\n     * This enhancement ensures the loading of an icon when the component has finished rendering and the icon has yet to apply the SVG data.\n     * This modification pertains to the usage of Angular's binding syntax:\n     * `<ion-icon [name]=\"myIconName\"></ion-icon>`\n     */\n    if (!this.didLoadIcon) {\n      this.loadIcon();\n    }\n  }\n  disconnectedCallback() {\n    if (this.io) {\n      this.io.disconnect();\n      this.io = undefined;\n    }\n  }\n  waitUntilVisible(el, rootMargin, cb) {\n    if (Build.isBrowser && this.lazy && typeof window !== 'undefined' && window.IntersectionObserver) {\n      const io = (this.io = new window.IntersectionObserver((data) => {\n        if (data[0].isIntersecting) {\n          io.disconnect();\n          this.io = undefined;\n          cb();\n        }\n      }, { rootMargin }));\n      io.observe(el);\n    }\n    else {\n      // browser doesn't support IntersectionObserver\n      // so just fallback to always show it\n      cb();\n    }\n  }\n  loadIcon() {\n    if (Build.isBrowser && this.isVisible) {\n      const url = getUrl(this);\n      if (url) {\n        if (ioniconContent.has(url)) {\n          // sync if it's already loaded\n          this.svgContent = ioniconContent.get(url);\n        }\n        else {\n          // async if it hasn't been loaded\n          getSvgContent(url, this.sanitize).then(() => (this.svgContent = ioniconContent.get(url)));\n        }\n        this.didLoadIcon = true;\n      }\n    }\n    this.iconName = getName(this.name, this.icon, this.mode, this.ios, this.md);\n  }\n  render() {\n    const { flipRtl, iconName, inheritedAttributes, el } = this;\n    const mode = this.mode || 'md';\n    // we have designated that arrows & chevrons should automatically flip (unless flip-rtl is set to false) because \"back\" is left in ltr and right in rtl, and \"forward\" is the opposite\n    const shouldAutoFlip = iconName\n      ? (iconName.includes('arrow') || iconName.includes('chevron')) && flipRtl !== false\n      : false;\n    // if shouldBeFlippable is true, the icon should change direction when `dir` changes\n    const shouldBeFlippable = flipRtl || shouldAutoFlip;\n    return (h(Host, Object.assign({ role: \"img\", class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(this.color)), { [`icon-${this.size}`]: !!this.size, 'flip-rtl': shouldBeFlippable, 'icon-rtl': shouldBeFlippable && isRTL(el) }) }, inheritedAttributes), Build.isBrowser && this.svgContent ? (h(\"div\", { class: \"icon-inner\", innerHTML: this.svgContent })) : (h(\"div\", { class: \"icon-inner\" }))));\n  }\n  static get is() { return \"ion-icon\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"icon.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"svg\"]; }\n  static get properties() {\n    return {\n      \"mode\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The mode determines which platform styles to use.\"\n        },\n        \"attribute\": \"mode\",\n        \"reflect\": false,\n        \"defaultValue\": \"getIonMode()\"\n      },\n      \"color\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The color to use for the background of the item.\"\n        },\n        \"attribute\": \"color\",\n        \"reflect\": false\n      },\n      \"ios\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `ios` mode.\"\n        },\n        \"attribute\": \"ios\",\n        \"reflect\": false\n      },\n      \"md\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use on `md` mode.\"\n        },\n        \"attribute\": \"md\",\n        \"reflect\": false\n      },\n      \"flipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies whether the icon should horizontally flip when `dir` is `\\\"rtl\\\"`.\"\n        },\n        \"attribute\": \"flip-rtl\",\n        \"reflect\": false\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies which icon to use from the built-in set of icons.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"src\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the exact `src` of an SVG file to use.\"\n        },\n        \"attribute\": \"src\",\n        \"reflect\": false\n      },\n      \"icon\": {\n        \"type\": \"any\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"any\",\n          \"resolved\": \"any\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"A combination of both `name` and `src`. If a `src` url is detected\\nit will set the `src` property. Otherwise it assumes it's a built-in named\\nSVG and set the `name` property.\"\n        },\n        \"attribute\": \"icon\",\n        \"reflect\": false\n      },\n      \"size\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string | undefined\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The size of the icon.\\nAvailable options are: `\\\"small\\\"` and `\\\"large\\\"`.\"\n        },\n        \"attribute\": \"size\",\n        \"reflect\": false\n      },\n      \"lazy\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"If enabled, ion-icon will be loaded lazily when it's visible in the viewport.\\nDefault, `false`.\"\n        },\n        \"attribute\": \"lazy\",\n        \"reflect\": false,\n        \"defaultValue\": \"false\"\n      },\n      \"sanitize\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"true\"\n            }],\n          \"text\": \"When set to `false`, SVG content that is HTTP fetched will not be checked\\nif the response SVG content has any `<script>` elements, or any attributes\\nthat start with `on`, such as `onclick`.\"\n        },\n        \"attribute\": \"sanitize\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"svgContent\": {},\n      \"isVisible\": {}\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"name\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"src\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"icon\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"ios\",\n        \"methodName\": \"loadIcon\"\n      }, {\n        \"propName\": \"md\",\n        \"methodName\": \"loadIcon\"\n      }];\n  }\n}\nconst getIonMode = () => (Build.isBrowser && typeof document !== 'undefined' && document.documentElement.getAttribute('mode')) || 'md';\nconst createColorClasses = (color) => {\n  return color\n    ? {\n      'ion-color': true,\n      [`ion-color-${color}`]: true,\n    }\n    : null;\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   * @prop --highlight-height: The height of the highlight on the item. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-focused: The color of the highlight on the item when focused. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-valid: The color of the highlight on the item when valid. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-invalid: The color of the highlight on the item when invalid. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --show-full-highlight: 0;\n  --show-inset-highlight: 0;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-native,\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-has-interactive-control) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-bottom {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  /* stylelint-disable */\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--inner-padding-end) + var(--ion-safe-area-right, 0px));\n  /* stylelint-enable */\n  display: flex;\n  justify-content: space-between;\n}\n:host-context([dir=rtl]) .item-bottom {\n  padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n}\n\n[dir=rtl] .item-bottom {\n  padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-bottom:dir(rtl) {\n    padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n.item-highlight,\n.item-inner-highlight {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  border-radius: inherit;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: scaleX(0);\n  transition: transform 200ms, border-bottom-width 200ms;\n  z-index: 2;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n\n:host(.item-interactive.ion-focused),\n:host(.item-interactive.item-has-focus),\n:host(.item-interactive.ion-touched.ion-invalid) {\n  --full-highlight-height: calc(var(--highlight-height) * var(--show-full-highlight));\n  --inset-highlight-height: calc(var(--highlight-height) * var(--show-inset-highlight));\n}\n\n:host(.ion-focused) .item-highlight,\n:host(.ion-focused) .item-inner-highlight,\n:host(.item-has-focus) .item-highlight,\n:host(.item-has-focus) .item-inner-highlight {\n  transform: scaleX(1);\n  border-style: var(--border-style);\n  border-color: var(--highlight-background);\n}\n\n:host(.ion-focused) .item-highlight,\n:host(.item-has-focus) .item-highlight {\n  border-width: var(--full-highlight-height);\n  opacity: var(--show-full-highlight);\n}\n\n:host(.ion-focused) .item-inner-highlight,\n:host(.item-has-focus) .item-inner-highlight {\n  border-bottom-width: var(--inset-highlight-height);\n  opacity: var(--show-inset-highlight);\n}\n\n:host(.ion-focused.item-fill-solid) .item-highlight,\n:host(.item-has-focus.item-fill-solid) .item-highlight {\n  border-width: calc(var(--full-highlight-height) - 1px);\n}\n\n:host(.ion-focused) .item-inner-highlight,\n:host(.ion-focused:not(.item-fill-outline)) .item-highlight,\n:host(.item-has-focus) .item-inner-highlight,\n:host(.item-has-focus:not(.item-fill-outline)) .item-highlight {\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n\n:host(.item-interactive.ion-focused),\n:host(.item-interactive.item-has-focus) {\n  --highlight-background: var(--highlight-color-focused);\n}\n\n:host(.item-interactive.ion-valid) {\n  --highlight-background: var(--highlight-color-valid);\n}\n\n:host(.item-interactive.ion-invalid) {\n  --highlight-background: var(--highlight-color-invalid);\n}\n\n:host(.item-interactive.ion-invalid) ::slotted([slot=helper]) {\n  display: none;\n}\n\n::slotted([slot=error]) {\n  display: none;\n  color: var(--highlight-color-invalid);\n}\n\n:host(.item-interactive.ion-invalid) ::slotted([slot=error]) {\n  display: block;\n}\n\n:host(:not(.item-label)) ::slotted(ion-select.legacy-select) {\n  --padding-start: 0;\n  max-width: none;\n}\n\n:host(.item-label-stacked) ::slotted(ion-select.legacy-select),\n:host(.item-label-floating) ::slotted(ion-select.legacy-select) {\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  --padding-start: 0;\n  align-self: stretch;\n  width: 100%;\n  max-width: 100%;\n}\n\n:host(:not(.item-label)) ::slotted(ion-datetime) {\n  --padding-start: 0;\n}\n\n:host(.item-label-stacked) ::slotted(ion-datetime),\n:host(.item-label-floating) ::slotted(ion-datetime) {\n  --padding-start: 0;\n  width: 100%;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio),\n:host(.item-multiple-inputs) ::slotted(ion-select.legacy-select) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.item-fill-solid) ::slotted([slot=start]),\n:host(.item-fill-solid) ::slotted([slot=end]),\n:host(.item-fill-outline) ::slotted([slot=start]),\n:host(.item-fill-outline) ::slotted([slot=end]) {\n  align-self: center;\n}\n\n::slotted([slot=helper]),\n::slotted([slot=error]),\n.item-counter {\n  padding-top: 5px;\n  font-size: 0.75rem;\n  z-index: 1;\n}\n\n.item-counter {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  color: var(--ion-color-step-550, #737373);\n  white-space: nowrap;\n  padding-inline-start: 16px;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .item-highlight,\n  .item-inner-highlight {\n    transition: none;\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 44px;\n  --transition: background-color 200ms linear, opacity 200ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0px 0px 0.55px 0px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  /**\n   * The active/focus states need\n   * to be the opposite of the background color\n   * so there is enough contrast. The background\n   * defaults to var(--ion-background-color), so we\n   * default to var(--ion-text-color) which will give us\n   * the opposite color.\n   * i.e. if var(--ion-background-color) is #000\n   * then var(--ion-text-color) will be #fff.\n   */\n  --background-activated: var(--ion-text-color, #000);\n  --background-focused: var(--ion-text-color, #000);\n  --background-hover: currentColor;\n  --background-activated-opacity: .12;\n  --background-focused-opacity: .15;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  --highlight-height: 0px;\n  --highlight-color-focused: var(--ion-color-primary, #3880ff);\n  --highlight-color-valid: var(--ion-color-success, #2dd36f);\n  --highlight-color-invalid: var(--ion-color-danger, #eb445a);\n  --bottom-padding-start: 0px;\n  font-size: 1rem;\n}\n\n:host(.ion-activated) {\n  --transition: none;\n}\n\n:host(.ion-color.ion-focused) .item-native::after {\n  background: #000;\n  opacity: 0.15;\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: #000;\n  opacity: 0.12;\n}\n\n:host(.item-interactive) {\n  --show-full-highlight: 0;\n  --show-inset-highlight: 1;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0px 0px 0.55px 0px;\n  --show-full-highlight: 1;\n  --show-inset-highlight: 0;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0px 0px 0.55px 0px;\n  --show-full-highlight: 0;\n  --show-inset-highlight: 1;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0px;\n  --show-full-highlight: 0;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0px;\n  --show-inset-highlight: 0;\n}\n\n.item-highlight,\n.item-inner-highlight {\n  transition: none;\n}\n\n:host(.item-has-focus) .item-inner-highlight,\n:host(.item-has-focus) .item-highlight {\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 2px;\n  margin-bottom: 2px;\n}\n\n::slotted(ion-icon[slot=start]),\n::slotted(ion-icon[slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n::slotted(.button-small) {\n  --padding-top: 1px;\n  --padding-bottom: 1px;\n  --padding-start: .5em;\n  --padding-end: .5em;\n  min-height: 24px;\n  font-size: 0.8125rem;\n}\n\n::slotted(ion-avatar) {\n  width: 36px;\n  height: 36px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 8px;\n  margin-inline-start: 8px;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n:host(.item-radio) ::slotted(ion-label),\n:host(.item-toggle) ::slotted(ion-label) {\n  -webkit-margin-start: 0px;\n  margin-inline-start: 0px;\n}\n\n::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 68px;\n}\n\n:host(.item-label-stacked) ::slotted(ion-select.legacy-select),\n:host(.item-label-floating) ::slotted(ion-select.legacy-select) {\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  --padding-start: 0px;\n}\n\n:host(.item-label-fixed) ::slotted(ion-select.legacy-select),\n:host(.item-label-fixed) ::slotted(ion-datetime) {\n  --padding-start: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the item\n   * @prop --background-activated: Background of the item when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --background-activated-opacity: Opacity of the item background when pressed\n   * @prop --background-focused: Background of the item when focused with the tab key\n   * @prop --background-focused-opacity: Opacity of the item background when focused with the tab key\n   * @prop --background-hover: Background of the item on hover\n   * @prop --background-hover-opacity: Opacity of the background of the item on hover\n   *\n   * @prop --border-color: Color of the item border\n   * @prop --border-radius: Radius of the item border\n   * @prop --border-style: Style of the item border\n   * @prop --border-width: Width of the item border\n   *\n   * @prop --color: Color of the item\n   * @prop --color-activated: Color of the item when pressed\n   * @prop --color-focused: Color of the item when focused with the tab key\n   * @prop --color-hover: Color of the item on hover\n   *\n   * @prop --detail-icon-color: Color of the item detail icon\n   * @prop --detail-icon-opacity: Opacity of the item detail icon\n   * @prop --detail-icon-font-size: Font size of the item detail icon\n   *\n   * @prop --inner-border-width: Width of the item inner border\n   * @prop --inner-box-shadow: Box shadow of the item inner\n   * @prop --inner-padding-top: Top padding of the item inner\n   * @prop --inner-padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner\n   * @prop --inner-padding-bottom: Bottom padding of the item inner\n   * @prop --inner-padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner\n   *\n   * @prop --min-height: Minimum height of the item\n   *\n   * @prop --padding-bottom: Bottom padding of the item\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item\n   * @prop --padding-top: Top padding of the item\n   *\n   * @prop --transition: Transition of the item\n   *\n   * @prop --ripple-color: Color of the item ripple effect\n   *\n   * @prop --highlight-height: The height of the highlight on the item. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-focused: The color of the highlight on the item when focused. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-valid: The color of the highlight on the item when valid. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   * @prop --highlight-color-invalid: The color of the highlight on the item when invalid. Only applies to inputs and textareas using the legacy form syntax. DEPRECATED: Highlights can be styled on `ion-input` or `ion-textarea` when using the modern form syntax.\n   */\n  --border-radius: 0px;\n  --border-width: 0px;\n  --border-style: solid;\n  --padding-top: 0px;\n  --padding-bottom: 0px;\n  --padding-end: 0px;\n  --padding-start: 0px;\n  --inner-border-width: 0px;\n  --inner-padding-top: 0px;\n  --inner-padding-bottom: 0px;\n  --inner-padding-start: 0px;\n  --inner-padding-end: 0px;\n  --inner-box-shadow: none;\n  --show-full-highlight: 0;\n  --show-inset-highlight: 0;\n  --detail-icon-color: initial;\n  --detail-icon-font-size: 1.25em;\n  --detail-icon-opacity: 0.25;\n  --color-activated: var(--color);\n  --color-focused: var(--color);\n  --color-hover: var(--color);\n  --ripple-color: currentColor;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: block;\n  position: relative;\n  align-items: center;\n  justify-content: space-between;\n  outline: none;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  text-align: initial;\n  text-decoration: none;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-native {\n  background: var(--ion-color-base);\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-native,\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) .item-inner {\n  border-color: var(--ion-color-shade);\n}\n\n:host(.ion-activated) .item-native {\n  color: var(--color-activated);\n}\n:host(.ion-activated) .item-native::after {\n  background: var(--background-activated);\n  opacity: var(--background-activated-opacity);\n}\n\n:host(.ion-color.ion-activated) .item-native {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-focused) .item-native {\n  color: var(--color-focused);\n}\n:host(.ion-focused) .item-native::after {\n  background: var(--background-focused);\n  opacity: var(--background-focused-opacity);\n}\n\n:host(.ion-color.ion-focused) .item-native {\n  color: var(--ion-color-contrast);\n}\n:host(.ion-color.ion-focused) .item-native::after {\n  background: var(--ion-color-contrast);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--color-hover);\n  }\n  :host(.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--background-hover);\n    opacity: var(--background-hover-opacity);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native {\n    color: var(--ion-color-contrast);\n  }\n  :host(.ion-color.ion-activatable:not(.ion-focused):hover) .item-native::after {\n    background: var(--ion-color-contrast);\n  }\n}\n:host(.item-has-interactive-control) {\n  cursor: pointer;\n}\n\n:host(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  pointer-events: none;\n}\n\n:host(.item-disabled) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.item-native {\n  border-radius: var(--border-radius);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  /* stylelint-disable */\n  padding-right: var(--padding-end);\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  align-items: inherit;\n  justify-content: inherit;\n  width: 100%;\n  min-height: var(--min-height);\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  outline: none;\n  background: var(--background);\n  overflow: inherit;\n  z-index: 1;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n[dir=rtl] .item-native {\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  padding-left: var(--padding-end);\n}\n\n@supports selector(:dir(rtl)) {\n  .item-native:dir(rtl) {\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n    padding-left: var(--padding-end);\n  }\n}\n\n.item-native::-moz-focus-inner {\n  border: 0;\n}\n\n.item-native::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n  transition: var(--transition);\n  z-index: -1;\n}\n\nbutton, a {\n  cursor: pointer;\n  user-select: none;\n  -webkit-user-drag: none;\n}\n\n.item-inner {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: var(--inner-padding-top);\n  padding-bottom: var(--inner-padding-bottom);\n  /* stylelint-disable */\n  padding-right: calc(var(--ion-safe-area-right, 0px) + var(--inner-padding-end));\n  padding-left: var(--inner-padding-start);\n  /* stylelint-enable */\n  display: flex;\n  position: relative;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  min-height: inherit;\n  border-width: var(--inner-border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  box-shadow: var(--inner-box-shadow);\n  overflow: inherit;\n  box-sizing: border-box;\n}\n:host-context([dir=rtl]) .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n[dir=rtl] .item-inner {\n  padding-right: var(--inner-padding-start);\n  padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-inner:dir(rtl) {\n    padding-right: var(--inner-padding-start);\n    padding-left: calc(var(--ion-safe-area-left, 0px) + var(--inner-padding-end));\n  }\n}\n\n.item-bottom {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  /* stylelint-disable */\n  padding-left: calc(var(--padding-start) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--inner-padding-end) + var(--ion-safe-area-right, 0px));\n  /* stylelint-enable */\n  display: flex;\n  justify-content: space-between;\n}\n:host-context([dir=rtl]) .item-bottom {\n  padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n}\n\n[dir=rtl] .item-bottom {\n  padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n  padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n}\n\n@supports selector(:dir(rtl)) {\n  .item-bottom:dir(rtl) {\n    padding-left: calc(var(--inner-padding-end) + var(--ion-safe-area-left, 0px));\n    padding-right: calc(var(--padding-start) + var(--ion-safe-area-right, 0px));\n  }\n}\n\n.item-detail-icon {\n  /**\n   * IonItem applies its own end padding. However,\n   * all IonIcons have the same bounding box meaning\n   * there may be white space for narrow icons. As\n   * a result, the white space gives the appearance\n   * that there is too much end margin. We move the default\n   * chevron icon over to account for this extra whitespace.\n   */\n  -webkit-margin-start: calc(var(--inner-padding-end) / 2);\n  margin-inline-start: calc(var(--inner-padding-end) / 2);\n  -webkit-margin-end: -6px;\n  margin-inline-end: -6px;\n  color: var(--detail-icon-color);\n  font-size: var(--detail-icon-font-size);\n  opacity: var(--detail-icon-opacity);\n}\n\n::slotted(ion-icon) {\n  font-size: 1.6em;\n}\n\n::slotted(ion-button) {\n  --margin-top: 0;\n  --margin-bottom: 0;\n  --margin-start: 0;\n  --margin-end: 0;\n  z-index: 1;\n}\n\n::slotted(ion-label:not([slot=end])) {\n  flex: 1;\n  width: min-content;\n  /**\n   * We allow labels in the default\n   * slot to grow. However, we do not\n   * want them to grow indefinitely.\n   */\n  max-width: 100%;\n}\n\n:host(.item-input) {\n  align-items: center;\n}\n\n.input-wrapper {\n  display: flex;\n  flex: 1;\n  flex-direction: inherit;\n  align-items: inherit;\n  align-self: stretch;\n  text-overflow: ellipsis;\n  overflow: inherit;\n  box-sizing: border-box;\n}\n\n:host(.item-label-stacked),\n:host(.item-label-floating) {\n  align-items: start;\n}\n\n:host(.item-label-stacked) .input-wrapper,\n:host(.item-label-floating) .input-wrapper {\n  flex: 1;\n  flex-direction: column;\n}\n\n.item-highlight,\n.item-inner-highlight {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  border-radius: inherit;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  transform: scaleX(0);\n  transition: transform 200ms, border-bottom-width 200ms;\n  z-index: 2;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n\n:host(.item-interactive.ion-focused),\n:host(.item-interactive.item-has-focus),\n:host(.item-interactive.ion-touched.ion-invalid) {\n  --full-highlight-height: calc(var(--highlight-height) * var(--show-full-highlight));\n  --inset-highlight-height: calc(var(--highlight-height) * var(--show-inset-highlight));\n}\n\n:host(.ion-focused) .item-highlight,\n:host(.ion-focused) .item-inner-highlight,\n:host(.item-has-focus) .item-highlight,\n:host(.item-has-focus) .item-inner-highlight {\n  transform: scaleX(1);\n  border-style: var(--border-style);\n  border-color: var(--highlight-background);\n}\n\n:host(.ion-focused) .item-highlight,\n:host(.item-has-focus) .item-highlight {\n  border-width: var(--full-highlight-height);\n  opacity: var(--show-full-highlight);\n}\n\n:host(.ion-focused) .item-inner-highlight,\n:host(.item-has-focus) .item-inner-highlight {\n  border-bottom-width: var(--inset-highlight-height);\n  opacity: var(--show-inset-highlight);\n}\n\n:host(.ion-focused.item-fill-solid) .item-highlight,\n:host(.item-has-focus.item-fill-solid) .item-highlight {\n  border-width: calc(var(--full-highlight-height) - 1px);\n}\n\n:host(.ion-focused) .item-inner-highlight,\n:host(.ion-focused:not(.item-fill-outline)) .item-highlight,\n:host(.item-has-focus) .item-inner-highlight,\n:host(.item-has-focus:not(.item-fill-outline)) .item-highlight {\n  border-top: none;\n  border-right: none;\n  border-left: none;\n}\n\n:host(.item-interactive.ion-focused),\n:host(.item-interactive.item-has-focus) {\n  --highlight-background: var(--highlight-color-focused);\n}\n\n:host(.item-interactive.ion-valid) {\n  --highlight-background: var(--highlight-color-valid);\n}\n\n:host(.item-interactive.ion-invalid) {\n  --highlight-background: var(--highlight-color-invalid);\n}\n\n:host(.item-interactive.ion-invalid) ::slotted([slot=helper]) {\n  display: none;\n}\n\n::slotted([slot=error]) {\n  display: none;\n  color: var(--highlight-color-invalid);\n}\n\n:host(.item-interactive.ion-invalid) ::slotted([slot=error]) {\n  display: block;\n}\n\n:host(:not(.item-label)) ::slotted(ion-select.legacy-select) {\n  --padding-start: 0;\n  max-width: none;\n}\n\n:host(.item-label-stacked) ::slotted(ion-select.legacy-select),\n:host(.item-label-floating) ::slotted(ion-select.legacy-select) {\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  --padding-start: 0;\n  align-self: stretch;\n  width: 100%;\n  max-width: 100%;\n}\n\n:host(:not(.item-label)) ::slotted(ion-datetime) {\n  --padding-start: 0;\n}\n\n:host(.item-label-stacked) ::slotted(ion-datetime),\n:host(.item-label-floating) ::slotted(ion-datetime) {\n  --padding-start: 0;\n  width: 100%;\n}\n\n:host(.item-multiple-inputs) ::slotted(ion-checkbox),\n:host(.item-multiple-inputs) ::slotted(ion-datetime),\n:host(.item-multiple-inputs) ::slotted(ion-radio),\n:host(.item-multiple-inputs) ::slotted(ion-select.legacy-select) {\n  position: relative;\n}\n\n:host(.item-textarea) {\n  align-items: stretch;\n}\n\n::slotted(ion-reorder[slot]) {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-ripple-effect {\n  color: var(--ripple-color);\n}\n\n:host(.item-fill-solid) ::slotted([slot=start]),\n:host(.item-fill-solid) ::slotted([slot=end]),\n:host(.item-fill-outline) ::slotted([slot=start]),\n:host(.item-fill-outline) ::slotted([slot=end]) {\n  align-self: center;\n}\n\n::slotted([slot=helper]),\n::slotted([slot=error]),\n.item-counter {\n  padding-top: 5px;\n  font-size: 0.75rem;\n  z-index: 1;\n}\n\n.item-counter {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  color: var(--ion-color-step-550, #737373);\n  white-space: nowrap;\n  padding-inline-start: 16px;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .item-highlight,\n  .item-inner-highlight {\n    transition: none;\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --min-height: 48px;\n  --background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --background-activated: transparent;\n  --background-focused: currentColor;\n  --background-hover: currentColor;\n  --background-activated-opacity: 0;\n  --background-focused-opacity: .12;\n  --background-hover-opacity: .04;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));\n  --color: var(--ion-item-color, var(--ion-text-color, #000));\n  --transition: opacity 15ms linear, background-color 15ms linear;\n  --padding-start: 16px;\n  --inner-padding-end: 16px;\n  --inner-border-width: 0 0 1px 0;\n  --highlight-height: 1px;\n  --highlight-color-focused: var(--ion-color-primary, #3880ff);\n  --highlight-color-valid: var(--ion-color-success, #2dd36f);\n  --highlight-color-invalid: var(--ion-color-danger, #eb445a);\n  font-size: 1rem;\n  font-weight: normal;\n  text-transform: none;\n}\n\n:host(.item-fill-outline) {\n  --highlight-height: 2px;\n}\n\n:host(.item-fill-none.item-interactive.ion-focus) .item-highlight,\n:host(.item-fill-none.item-interactive.item-has-focus) .item-highlight,\n:host(.item-fill-none.item-interactive.ion-touched.ion-invalid) .item-highlight {\n  transform: scaleX(1);\n  border-width: 0 0 var(--full-highlight-height) 0;\n  border-style: var(--border-style);\n  border-color: var(--highlight-background);\n}\n\n:host(.item-fill-none.item-interactive.ion-focus) .item-native,\n:host(.item-fill-none.item-interactive.item-has-focus) .item-native,\n:host(.item-fill-none.item-interactive.ion-touched.ion-invalid) .item-native {\n  border-bottom-color: var(--highlight-background);\n}\n\n:host(.item-fill-outline.item-interactive.ion-focus) .item-highlight,\n:host(.item-fill-outline.item-interactive.item-has-focus) .item-highlight {\n  transform: scaleX(1);\n}\n\n:host(.item-fill-outline.item-interactive.ion-focus) .item-highlight,\n:host(.item-fill-outline.item-interactive.item-has-focus) .item-highlight,\n:host(.item-fill-outline.item-interactive.ion-touched.ion-invalid) .item-highlight {\n  border-width: var(--full-highlight-height);\n  border-style: var(--border-style);\n  border-color: var(--highlight-background);\n}\n\n:host(.item-fill-outline.item-interactive.ion-touched.ion-invalid) .item-native {\n  border-color: var(--highlight-background);\n}\n\n:host(.item-fill-solid.item-interactive.ion-focus) .item-highlight,\n:host(.item-fill-solid.item-interactive.item-has-focus) .item-highlight,\n:host(.item-fill-solid.item-interactive.ion-touched.ion-invalid) .item-highlight {\n  transform: scaleX(1);\n  border-width: 0 0 var(--full-highlight-height) 0;\n  border-style: var(--border-style);\n  border-color: var(--highlight-background);\n}\n\n:host(.item-fill-solid.item-interactive.ion-focus) .item-native,\n:host(.item-fill-solid.item-interactive.item-has-focus) .item-native,\n:host(.item-fill-solid.item-interactive.ion-touched.ion-invalid) .item-native {\n  border-bottom-color: var(--highlight-background);\n}\n\n:host(.ion-color.ion-activated) .item-native::after {\n  background: transparent;\n}\n\n:host(.item-has-focus) .item-native {\n  caret-color: var(--highlight-background);\n}\n\n:host(.item-interactive) {\n  --border-width: 0 0 1px 0;\n  --inner-border-width: 0;\n  --show-full-highlight: 1;\n  --show-inset-highlight: 0;\n}\n\n:host(.item-lines-full) {\n  --border-width: 0 0 1px 0;\n  --show-full-highlight: 1;\n  --show-inset-highlight: 0;\n}\n\n:host(.item-lines-inset) {\n  --inner-border-width: 0 0 1px 0;\n  --show-full-highlight: 0;\n  --show-inset-highlight: 1;\n}\n\n:host(.item-lines-inset),\n:host(.item-lines-none) {\n  --border-width: 0;\n  --show-full-highlight: 0;\n}\n\n:host(.item-lines-full),\n:host(.item-lines-none) {\n  --inner-border-width: 0;\n  --show-inset-highlight: 0;\n}\n\n/**\n * When `fill=\"outline\"`, reposition the highlight element to cover everything but the `.item-bottom`\n */\n:host(.item-fill-outline) .item-highlight {\n  --position-offset: calc(-1 * var(--border-width));\n  top: var(--position-offset);\n  width: calc(100% + 2 * var(--border-width));\n  height: calc(100% + 2 * var(--border-width));\n  transition: none;\n}\n@supports (inset-inline-start: 0) {\n  :host(.item-fill-outline) .item-highlight {\n    inset-inline-start: var(--position-offset);\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.item-fill-outline) .item-highlight {\n    left: var(--position-offset);\n  }\n  :host-context([dir=rtl]):host(.item-fill-outline) .item-highlight, :host-context([dir=rtl]).item-fill-outline .item-highlight {\n    left: unset;\n    right: unset;\n    right: var(--position-offset);\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.item-fill-outline:dir(rtl)) .item-highlight {\n      left: unset;\n      right: unset;\n      right: var(--position-offset);\n    }\n  }\n}\n\n:host(.item-fill-outline.ion-focused) .item-native,\n:host(.item-fill-outline.item-has-focus) .item-native {\n  border-color: transparent;\n}\n\n:host(.item-multi-line) ::slotted([slot=start]),\n:host(.item-multi-line) ::slotted([slot=end]) {\n  margin-top: 16px;\n  margin-bottom: 16px;\n  align-self: flex-start;\n}\n\n::slotted([slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted([slot=end]) {\n  -webkit-margin-start: 32px;\n  margin-inline-start: 32px;\n}\n\n:host(.item-fill-solid) ::slotted([slot=start]),\n:host(.item-fill-solid) ::slotted([slot=end]),\n:host(.item-fill-outline) ::slotted([slot=start]),\n:host(.item-fill-outline) ::slotted([slot=end]) {\n  align-self: center;\n}\n\n::slotted(ion-icon) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n  font-size: 1.5em;\n}\n\n:host(.ion-color:not(.item-fill-solid):not(.item-fill-outline)) ::slotted(ion-icon) {\n  color: var(--ion-color-contrast);\n}\n\n::slotted(ion-icon[slot]) {\n  margin-top: 12px;\n  margin-bottom: 12px;\n}\n\n::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n}\n\n::slotted(ion-icon[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n:host(.item-fill-solid) ::slotted(ion-icon[slot=start]),\n:host(.item-fill-outline) ::slotted(ion-icon[slot=start]) {\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n}\n\n::slotted(ion-toggle[slot=start]),\n::slotted(ion-toggle[slot=end]) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n::slotted(ion-note) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  align-self: flex-start;\n  font-size: 0.6875rem;\n}\n\n::slotted(ion-note[slot]:not([slot=helper]):not([slot=error])) {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 18px;\n  padding-bottom: 10px;\n}\n\n::slotted(ion-note[slot=start]) {\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n}\n\n::slotted(ion-note[slot=end]) {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n}\n\n::slotted(ion-avatar) {\n  width: 40px;\n  height: 40px;\n}\n\n::slotted(ion-thumbnail) {\n  --size: 56px;\n}\n\n::slotted(ion-avatar),\n::slotted(ion-thumbnail) {\n  margin-top: 8px;\n  margin-bottom: 8px;\n}\n\n::slotted(ion-avatar[slot=start]),\n::slotted(ion-thumbnail[slot=start]) {\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n::slotted(ion-avatar[slot=end]),\n::slotted(ion-thumbnail[slot=end]) {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n}\n\n::slotted(ion-label) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.item-label-stacked) ::slotted([slot=end]),\n:host(.item-label-floating) ::slotted([slot=end]) {\n  margin-top: 7px;\n  margin-bottom: 7px;\n}\n\n:host(.item-label-fixed) ::slotted(ion-select.legacy-select),\n:host(.item-label-fixed) ::slotted(ion-datetime) {\n  --padding-start: 8px;\n}\n\n:host(.item-toggle) ::slotted(ion-label),\n:host(.item-radio) ::slotted(ion-label) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n}\n\n::slotted(.button-small) {\n  --padding-top: 2px;\n  --padding-bottom: 2px;\n  --padding-start: .6em;\n  --padding-end: .6em;\n  min-height: 25px;\n  font-size: 0.75rem;\n}\n\n:host(.item-label-floating),\n:host(.item-label-stacked) {\n  --min-height: 55px;\n}\n\n:host(.item-label-stacked) ::slotted(ion-select.legacy-select),\n:host(.item-label-floating) ::slotted(ion-select.legacy-select) {\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  --padding-start: 0;\n}\n\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-stacked),\n:host(.ion-focused:not(.ion-color)) ::slotted(.label-floating),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-stacked),\n:host(.item-has-focus:not(.ion-color)) ::slotted(.label-floating) {\n  color: var(--ion-color-primary, #3880ff);\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-contrast);\n}\n\n:host(.item-label-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.item-fill-solid.ion-color),\n:host(.item-fill-outline.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.item-fill-solid) {\n  --background: var(--ion-color-step-50, #f2f2f2);\n  --background-hover: var(--ion-color-step-100, #e6e6e6);\n  --background-focused: var(--ion-color-step-150, #d9d9d9);\n  --border-width: 0 0 1px 0;\n  --inner-border-width: 0;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n:host-context([dir=rtl]):host(.item-fill-solid), :host-context([dir=rtl]).item-fill-solid {\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.item-fill-solid:dir(rtl)) {\n    border-top-left-radius: 4px;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n}\n\n:host(.item-fill-solid) .item-native {\n  --border-color: var(--ion-color-step-500, gray);\n}\n\n:host(.item-fill-solid.ion-focused) .item-native,\n:host(.item-fill-solid.item-has-focus) .item-native {\n  --background: var(--background-focused);\n}\n\n:host(.item-fill-solid.item-shape-round) {\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n:host-context([dir=rtl]):host(.item-fill-solid.item-shape-round), :host-context([dir=rtl]).item-fill-solid.item-shape-round {\n  border-top-left-radius: 16px;\n  border-top-right-radius: 16px;\n  border-bottom-right-radius: 0;\n  border-bottom-left-radius: 0;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.item-fill-solid.item-shape-round:dir(rtl)) {\n    border-top-left-radius: 16px;\n    border-top-right-radius: 16px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n}\n\n@media (any-hover: hover) {\n  :host(.item-fill-solid:hover) .item-native {\n    --background: var(--background-hover);\n    --border-color: var(--ion-color-step-750, #404040);\n  }\n}\n:host(.item-fill-outline) {\n  --ripple-color: transparent;\n  --background-focused: transparent;\n  --background-hover: transparent;\n  --border-color: var(--ion-color-step-500, gray);\n  --border-width: 1px;\n  border: none;\n  overflow: visible;\n}\n\n:host(.item-fill-outline) .item-native {\n  --native-padding-left: 16px;\n  border-radius: 4px;\n}\n\n:host(.item-fill-outline.item-shape-round) .item-native {\n  --inner-padding-start: 16px;\n  border-radius: 28px;\n}\n\n:host(.item-fill-outline.item-shape-round) .item-bottom {\n  -webkit-padding-start: 32px;\n  padding-inline-start: 32px;\n}\n\n:host(.item-fill-outline.item-label-floating.ion-focused) .item-native ::slotted(ion-input:not(:first-child)),\n:host(.item-fill-outline.item-label-floating.ion-focused) .item-native ::slotted(ion-textarea:not(:first-child)),\n:host(.item-fill-outline.item-label-floating.item-has-focus) .item-native ::slotted(ion-input:not(:first-child)),\n:host(.item-fill-outline.item-label-floating.item-has-focus) .item-native ::slotted(ion-textarea:not(:first-child)),\n:host(.item-fill-outline.item-label-floating.item-has-value) .item-native ::slotted(ion-input:not(:first-child)),\n:host(.item-fill-outline.item-label-floating.item-has-value) .item-native ::slotted(ion-textarea:not(:first-child)) {\n  transform: translateY(-14px);\n}\n\n@media (any-hover: hover) {\n  :host(.item-fill-outline:hover) .item-native {\n    --border-color: var(--ion-color-step-750, #404040);\n  }\n}\n.item-counter {\n  letter-spacing: 0.0333333333em;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { inheritAttributes, raf } from \"../../utils/helpers\";\nimport { printIonError, printIonWarning } from \"../../utils/logging/index\";\nimport { createColorClasses, hostContext, openURL } from \"../../utils/theme\";\nimport { chevronForward } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - Content is placed between the named slots if provided without a slot.\n * @slot start - Content is placed to the left of the item text in LTR, and to the right in RTL.\n * @slot end - Content is placed to the right of the item text in LTR, and to the left in RTL.\n * @slot helper - Content is placed under the item and displayed when no error is detected. **DEPRECATED** Use the \"helperText\" property on ion-input or ion-textarea instead.\n * @slot error - Content is placed under the item and displayed when an error is detected. **DEPRECATED** Use the \"errorText\" property on ion-input or ion-textarea instead.\n *\n * @part native - The native HTML button, anchor or div element that wraps all child elements.\n * @part detail-icon - The chevron icon for the item. Only applies when `detail=\"true\"`.\n */\nexport class Item {\n    constructor() {\n        this.labelColorStyles = {};\n        this.itemStyles = new Map();\n        this.inheritedAriaAttributes = {};\n        this.multipleInputs = false;\n        this.focusable = true;\n        this.color = undefined;\n        this.button = false;\n        this.detail = undefined;\n        this.detailIcon = chevronForward;\n        this.disabled = false;\n        this.download = undefined;\n        this.fill = undefined;\n        this.shape = undefined;\n        this.href = undefined;\n        this.rel = undefined;\n        this.lines = undefined;\n        this.counter = false;\n        this.routerAnimation = undefined;\n        this.routerDirection = 'forward';\n        this.target = undefined;\n        this.type = 'button';\n        this.counterFormatter = undefined;\n        this.counterString = undefined;\n    }\n    buttonChanged() {\n        // Update the focusable option when the button option is changed\n        this.focusable = this.isFocusable();\n    }\n    counterFormatterChanged() {\n        this.updateCounterOutput(this.getFirstInput());\n    }\n    handleIonInput(ev) {\n        if (this.counter && ev.target === this.getFirstInput()) {\n            this.updateCounterOutput(ev.target);\n        }\n    }\n    labelColorChanged(ev) {\n        const { color } = this;\n        // There will be a conflict with item color if\n        // we apply the label color to item, so we ignore\n        // the label color if the user sets a color on item\n        if (color === undefined) {\n            this.labelColorStyles = ev.detail;\n        }\n    }\n    itemStyle(ev) {\n        ev.stopPropagation();\n        const tagName = ev.target.tagName;\n        const updatedStyles = ev.detail;\n        const newStyles = {};\n        const childStyles = this.itemStyles.get(tagName) || {};\n        let hasStyleChange = false;\n        Object.keys(updatedStyles).forEach((key) => {\n            if (updatedStyles[key]) {\n                const itemKey = `item-${key}`;\n                if (!childStyles[itemKey]) {\n                    hasStyleChange = true;\n                }\n                newStyles[itemKey] = true;\n            }\n        });\n        if (!hasStyleChange && Object.keys(newStyles).length !== Object.keys(childStyles).length) {\n            hasStyleChange = true;\n        }\n        if (hasStyleChange) {\n            this.itemStyles.set(tagName, newStyles);\n            forceUpdate(this);\n        }\n    }\n    connectedCallback() {\n        if (this.counter) {\n            this.updateCounterOutput(this.getFirstInput());\n        }\n        this.hasStartEl();\n    }\n    componentWillLoad() {\n        this.inheritedAriaAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    componentDidLoad() {\n        const { el, counter, counterFormatter, fill, shape } = this;\n        const hasHelperSlot = el.querySelector('[slot=\"helper\"]') !== null;\n        if (hasHelperSlot) {\n            printIonWarning('The \"helper\" slot has been deprecated in favor of using the \"helperText\" property on ion-input or ion-textarea.', el);\n        }\n        const hasErrorSlot = el.querySelector('[slot=\"error\"]') !== null;\n        if (hasErrorSlot) {\n            printIonWarning('The \"error\" slot has been deprecated in favor of using the \"errorText\" property on ion-input or ion-textarea.', el);\n        }\n        if (counter === true) {\n            printIonWarning('The \"counter\" property has been deprecated in favor of using the \"counter\" property on ion-input or ion-textarea.', el);\n        }\n        if (counterFormatter !== undefined) {\n            printIonWarning('The \"counterFormatter\" property has been deprecated in favor of using the \"counterFormatter\" property on ion-input or ion-textarea.', el);\n        }\n        if (fill !== undefined) {\n            printIonWarning('The \"fill\" property has been deprecated in favor of using the \"fill\" property on ion-input or ion-textarea.', el);\n        }\n        if (shape !== undefined) {\n            printIonWarning('The \"shape\" property has been deprecated in favor of using the \"shape\" property on ion-input or ion-textarea.', el);\n        }\n        raf(() => {\n            this.setMultipleInputs();\n            this.focusable = this.isFocusable();\n        });\n    }\n    // If the item contains multiple clickable elements and/or inputs, then the item\n    // should not have a clickable input cover over the entire item to prevent\n    // interfering with their individual click events\n    setMultipleInputs() {\n        // The following elements have a clickable cover that is relative to the entire item\n        const covers = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        // The following elements can accept focus alongside the previous elements\n        // therefore if these elements are also a child of item, we don't want the\n        // input cover on top of those interfering with their clicks\n        const inputs = this.el.querySelectorAll('ion-input, ion-range, ion-searchbar, ion-segment, ion-textarea, ion-toggle');\n        // The following elements should also stay clickable when an input with cover is present\n        const clickables = this.el.querySelectorAll('ion-anchor, ion-button, a, button');\n        // Check for multiple inputs to change the position of the input cover to relative\n        // for all of the covered inputs above\n        this.multipleInputs =\n            covers.length + inputs.length > 1 ||\n                covers.length + clickables.length > 1 ||\n                (covers.length > 0 && this.isClickable());\n    }\n    // If the item contains an input including a checkbox, datetime, select, or radio\n    // then the item will have a clickable input cover that covers the item\n    // that should get the hover, focused and activated states UNLESS it has multiple\n    // inputs, then those need to individually get each click\n    hasCover() {\n        const inputs = this.el.querySelectorAll('ion-checkbox, ion-datetime, ion-select, ion-radio');\n        return inputs.length === 1 && !this.multipleInputs;\n    }\n    // If the item has an href or button property it will render a native\n    // anchor or button that is clickable\n    isClickable() {\n        return this.href !== undefined || this.button;\n    }\n    canActivate() {\n        return this.isClickable() || this.hasCover();\n    }\n    isFocusable() {\n        const focusableChild = this.el.querySelector('.ion-focusable');\n        return this.canActivate() || focusableChild !== null;\n    }\n    getFirstInput() {\n        const inputs = this.el.querySelectorAll('ion-input, ion-textarea');\n        return inputs[0];\n    }\n    updateCounterOutput(inputEl) {\n        var _a, _b;\n        const { counter, counterFormatter, defaultCounterFormatter } = this;\n        if (counter && !this.multipleInputs && (inputEl === null || inputEl === void 0 ? void 0 : inputEl.maxlength) !== undefined) {\n            const length = (_b = (_a = inputEl === null || inputEl === void 0 ? void 0 : inputEl.value) === null || _a === void 0 ? void 0 : _a.toString().length) !== null && _b !== void 0 ? _b : 0;\n            if (counterFormatter === undefined) {\n                this.counterString = defaultCounterFormatter(length, inputEl.maxlength);\n            }\n            else {\n                try {\n                    this.counterString = counterFormatter(length, inputEl.maxlength);\n                }\n                catch (e) {\n                    printIonError('Exception in provided `counterFormatter`.', e);\n                    // Fallback to the default counter formatter when an exception happens\n                    this.counterString = defaultCounterFormatter(length, inputEl.maxlength);\n                }\n            }\n        }\n    }\n    defaultCounterFormatter(length, maxlength) {\n        return `${length} / ${maxlength}`;\n    }\n    hasStartEl() {\n        const startEl = this.el.querySelector('[slot=\"start\"]');\n        if (startEl !== null) {\n            this.el.classList.add('item-has-start-slot');\n        }\n    }\n    getFirstInteractive() {\n        const controls = this.el.querySelectorAll('ion-toggle:not([disabled]), ion-checkbox:not([disabled]), ion-radio:not([disabled]), ion-select:not([disabled])');\n        return controls[0];\n    }\n    render() {\n        const { counterString, detail, detailIcon, download, fill, labelColorStyles, lines, disabled, href, rel, shape, target, routerAnimation, routerDirection, inheritedAriaAttributes, multipleInputs, } = this;\n        const childStyles = {};\n        const mode = getIonMode(this);\n        const clickable = this.isClickable();\n        const canActivate = this.canActivate();\n        const TagType = clickable ? (href === undefined ? 'button' : 'a') : 'div';\n        const attrs = TagType === 'button'\n            ? { type: this.type }\n            : {\n                download,\n                href,\n                rel,\n                target,\n            };\n        let clickFn = {};\n        const firstInteractive = this.getFirstInteractive();\n        // Only set onClick if the item is clickable to prevent screen\n        // readers from reading all items as clickable\n        if (clickable || (firstInteractive !== undefined && !multipleInputs)) {\n            clickFn = {\n                onClick: (ev) => {\n                    if (clickable) {\n                        openURL(href, ev, routerDirection, routerAnimation);\n                    }\n                    if (firstInteractive !== undefined && !multipleInputs) {\n                        const path = ev.composedPath();\n                        const target = path[0];\n                        if (ev.isTrusted) {\n                            /**\n                             * Dispatches a click event to the first interactive element,\n                             * when it is the result of a user clicking on the item.\n                             *\n                             * We check if the click target is in the shadow root,\n                             * which means the user clicked on the .item-native or\n                             * .item-inner padding.\n                             */\n                            const clickedWithinShadowRoot = this.el.shadowRoot.contains(target);\n                            if (clickedWithinShadowRoot) {\n                                firstInteractive.click();\n                            }\n                        }\n                    }\n                },\n            };\n        }\n        const showDetail = detail !== undefined ? detail : mode === 'ios' && clickable;\n        this.itemStyles.forEach((value) => {\n            Object.assign(childStyles, value);\n        });\n        const ariaDisabled = disabled || childStyles['item-interactive-disabled'] ? 'true' : null;\n        const fillValue = fill || 'none';\n        const inList = hostContext('ion-list', this.el) && !hostContext('ion-radio-group', this.el);\n        return (h(Host, { key: '077c9ab04985292f79c30691151d2778a26285fb', \"aria-disabled\": ariaDisabled, class: Object.assign(Object.assign(Object.assign({}, childStyles), labelColorStyles), createColorClasses(this.color, {\n                item: true,\n                [mode]: true,\n                'item-lines-default': lines === undefined,\n                [`item-lines-${lines}`]: lines !== undefined,\n                [`item-fill-${fillValue}`]: true,\n                [`item-shape-${shape}`]: shape !== undefined,\n                'item-has-interactive-control': firstInteractive !== undefined,\n                'item-disabled': disabled,\n                'in-list': inList,\n                'item-multiple-inputs': this.multipleInputs,\n                'ion-activatable': canActivate,\n                'ion-focusable': this.focusable,\n                'item-rtl': document.dir === 'rtl',\n            })), role: inList ? 'listitem' : null }, h(TagType, Object.assign({ key: '08bb75c85d0584e9fb7f461e9e06b9b651ef3515' }, attrs, inheritedAriaAttributes, { class: \"item-native\", part: \"native\", disabled: disabled }, clickFn), h(\"slot\", { key: '3f742b07c4a58eadedf675be4878a3e00070750e', name: \"start\" }), h(\"div\", { key: '0160b8963434f3107856a2df2fb96f1abb4fdbfe', class: \"item-inner\" }, h(\"div\", { key: '9439b21474443341f06a651d7c44aef90bd4c591', class: \"input-wrapper\" }, h(\"slot\", { key: '8034e1337a6c950b7725bc9aa46d55de980827bf' })), h(\"slot\", { key: '690de6d3dd3a238ab7a2d3dfea69daa6647e5134', name: \"end\" }), showDetail && (h(\"ion-icon\", { key: '6f386abbde5897fca7aabc850645986e16315213', icon: detailIcon, lazy: false, class: \"item-detail-icon\", part: \"detail-icon\", \"aria-hidden\": \"true\", \"flip-rtl\": detailIcon === chevronForward })), h(\"div\", { key: '4bb8444a5097c032d79f2083f60429b9057e3a5c', class: \"item-inner-highlight\" })), canActivate && mode === 'md' && h(\"ion-ripple-effect\", { key: '31c319e2335efbb92d7dea110a66f347764f2b44' }), h(\"div\", { key: '0fc128b44582af7c8b542c9e346ef88e40fea148', class: \"item-highlight\" })), h(\"div\", { key: '7b84c0a74d148a7fa6af449b6bd06bb45530edf5', class: \"item-bottom\" }, h(\"slot\", { key: '97563a615efd81b21014c41a25989c71ba3ae2cd', name: \"error\" }), h(\"slot\", { key: 'd84a4bb21ed3f13af82f78104ffb06d2b079738e', name: \"helper\" }), counterString && h(\"ion-note\", { key: '34eaa7798c50d2f88afca0dcb1278df05a1800e6', class: \"item-counter\" }, counterString))));\n    }\n    static get is() { return \"ion-item\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"item.ios.scss\"],\n            \"md\": [\"item.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"item.ios.css\"],\n            \"md\": [\"item.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"button\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a button tag will be rendered and the item will be tappable.\"\n                },\n                \"attribute\": \"button\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"detail\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, a detail arrow will appear on the item. Defaults to `false` unless the `mode`\\nis `ios` and an `href` or `button` property is present.\"\n                },\n                \"attribute\": \"detail\",\n                \"reflect\": false\n            },\n            \"detailIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The icon to use when `detail` is set to `true`.\"\n                },\n                \"attribute\": \"detail-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"chevronForward\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the item.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"download\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute instructs browsers to download a URL instead of navigating to\\nit, so the user will be prompted to save it as a local file. If the attribute\\nhas a value, it is used as the pre-filled file name in the Save prompt\\n(the user can still change the file name if they want).\"\n                },\n                \"attribute\": \"download\",\n                \"reflect\": false\n            },\n            \"fill\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'outline' | 'solid'\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"solid\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use the `fill` property on `ion-input` or `ion-textarea` instead.\"\n                        }],\n                    \"text\": \"The fill for the item. If `\\\"solid\\\"` the item will have a background. If\\n`\\\"outline\\\"` the item will be transparent with a border. Only available in `md` mode.\"\n                },\n                \"attribute\": \"fill\",\n                \"reflect\": false\n            },\n            \"shape\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'round'\",\n                    \"resolved\": \"\\\"round\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The shape of the item. If \\\"round\\\" it will have increased\\nborder radius.\"\n                },\n                \"attribute\": \"shape\",\n                \"reflect\": false\n            },\n            \"href\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Contains a URL or a URL fragment that the hyperlink points to.\\nIf this property is set, an anchor tag will be rendered.\"\n                },\n                \"attribute\": \"href\",\n                \"reflect\": false\n            },\n            \"rel\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies the relationship of the target object to the link object.\\nThe value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).\"\n                },\n                \"attribute\": \"rel\",\n                \"reflect\": false\n            },\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on the item.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            },\n            \"counter\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use the `counter` property on `ion-input` or `ion-textarea` instead.\"\n                        }],\n                    \"text\": \"If `true`, a character counter will display the ratio of characters used and the total character limit. Only applies when the `maxlength` property is set on the inner `ion-input` or `ion-textarea`.\"\n                },\n                \"attribute\": \"counter\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"routerAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder | undefined\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition animation when navigating to\\nanother page using `href`.\"\n                }\n            },\n            \"routerDirection\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"RouterDirection\",\n                    \"resolved\": \"\\\"back\\\" | \\\"forward\\\" | \\\"root\\\"\",\n                    \"references\": {\n                        \"RouterDirection\": {\n                            \"location\": \"import\",\n                            \"path\": \"../router/utils/interface\",\n                            \"id\": \"src/components/router/utils/interface.ts::RouterDirection\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"When using a router, it specifies the transition direction when navigating to\\nanother page using `href`.\"\n                },\n                \"attribute\": \"router-direction\",\n                \"reflect\": false,\n                \"defaultValue\": \"'forward'\"\n            },\n            \"target\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Specifies where to display the linked URL.\\nOnly applies when an `href` is provided.\\nSpecial keywords: `\\\"_blank\\\"`, `\\\"_self\\\"`, `\\\"_parent\\\"`, `\\\"_top\\\"`.\"\n                },\n                \"attribute\": \"target\",\n                \"reflect\": false\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'submit' | 'reset' | 'button'\",\n                    \"resolved\": \"\\\"button\\\" | \\\"reset\\\" | \\\"submit\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The type of the button. Only used when an `onclick` or `button` property is present.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'button'\"\n            },\n            \"counterFormatter\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"CounterFormatter\",\n                    \"resolved\": \"((inputLength: number, maxLength: number) => string) | undefined\",\n                    \"references\": {\n                        \"CounterFormatter\": {\n                            \"location\": \"import\",\n                            \"path\": \"./item-interface\",\n                            \"id\": \"src/components/item/item-interface.ts::CounterFormatter\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"deprecated\",\n                            \"text\": \"Use the `counterFormatter` property on `ion-input` or `ion-textarea` instead.\"\n                        }],\n                    \"text\": \"A callback used to format the counter text.\\nBy default the counter text is set to \\\"itemLength / maxLength\\\".\"\n                }\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"multipleInputs\": {},\n            \"focusable\": {},\n            \"counterString\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"button\",\n                \"methodName\": \"buttonChanged\"\n            }, {\n                \"propName\": \"counterFormatter\",\n                \"methodName\": \"counterFormatterChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"ionInput\",\n                \"method\": \"handleIonInput\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionColor\",\n                \"method\": \"labelColorChanged\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }, {\n                \"name\": \"ionStyle\",\n                \"method\": \"itemStyle\",\n                \"target\": undefined,\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host-context(.item) {\n  /**\n   * @prop --color: Color of the label. This property is only available when using `ion-label` inside of an `ion-item`.\n   */\n  --color: initial;\n  display: block;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n}\n\n:host-context(.item-legacy) {\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-text-nowrap) {\n  overflow: hidden;\n}\n\n:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n:host-context(.item-input) {\n  flex: initial;\n  max-width: 200px;\n  pointer-events: none;\n}\n\n:host-context(.item-textarea) {\n  align-self: baseline;\n}\n\n:host-context(.item-skeleton-text) {\n  overflow: hidden;\n}\n\n:host(.label-fixed) {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-bottom: 0;\n  align-self: stretch;\n  width: auto;\n  max-width: 100%;\n}\n\n:host(.label-no-animate.label-floating) {\n  transition: none;\n}\n\n::slotted(*) h1,\n::slotted(*) h2,\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.ion-text-wrap) {\n  font-size: 0.875rem;\n  line-height: 1.5;\n}\n\n:host(.label-stacked) {\n  margin-bottom: 4px;\n  font-size: 0.875rem;\n}\n\n:host(.label-floating) {\n  margin-bottom: 0;\n  transform: translate(0, 29px);\n  transform-origin: left top;\n  transition: transform 150ms ease-in-out;\n}\n:host-context([dir=rtl]):host(.label-floating), :host-context([dir=rtl]).label-floating {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.label-floating:dir(rtl)) {\n    transform-origin: right top;\n  }\n}\n\n:host-context(.item-textarea).label-floating {\n  transform: translate(0, 28px);\n}\n\n:host-context(.item-has-focus).label-floating,\n:host-context(.item-has-placeholder:not(.item-input)).label-floating,\n:host-context(.item-has-value).label-floating {\n  transform: scale(0.82);\n}\n\n::slotted(*) h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 3px;\n  margin-bottom: 2px;\n  font-size: 1.375rem;\n  font-weight: normal;\n}\n\n::slotted(*) h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.0625rem;\n  font-weight: normal;\n}\n\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 3px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(*) p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  line-height: normal;\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n::slotted(p) {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.4);\n}\n\n:host(.in-item-color)::slotted(p) {\n  color: inherit;\n}\n\n::slotted(*) h2:last-child,\n::slotted(*) h3:last-child,\n::slotted(*) h4:last-child,\n::slotted(*) h5:last-child,\n::slotted(*) h6:last-child,\n::slotted(*) p:last-child {\n  margin-bottom: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host-context(.item) {\n  /**\n   * @prop --color: Color of the label. This property is only available when using `ion-label` inside of an `ion-item`.\n   */\n  --color: initial;\n  display: block;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  font-size: inherit;\n  text-overflow: ellipsis;\n  box-sizing: border-box;\n}\n\n:host-context(.item-legacy) {\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host(.ion-text-nowrap) {\n  overflow: hidden;\n}\n\n:host-context(.item-interactive-disabled:not(.item-multiple-inputs)) {\n  cursor: default;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n:host-context(.item-input) {\n  flex: initial;\n  max-width: 200px;\n  pointer-events: none;\n}\n\n:host-context(.item-textarea) {\n  align-self: baseline;\n}\n\n:host-context(.item-skeleton-text) {\n  overflow: hidden;\n}\n\n:host(.label-fixed) {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-bottom: 0;\n  align-self: stretch;\n  width: auto;\n  max-width: 100%;\n}\n\n:host(.label-no-animate.label-floating) {\n  transition: none;\n}\n\n::slotted(*) h1,\n::slotted(*) h2,\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.ion-text-wrap) {\n  line-height: 1.5;\n}\n\n/**\n * When translating the label, we need to use translateY\n * instead of translate3d due to a WebKit bug: https://bugs.webkit.org/show_bug.cgi?id=215731\n */\n:host(.label-stacked),\n:host(.label-floating) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  /* stylelint-disable property-disallowed-list */\n  transform-origin: top left;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.label-stacked.label-rtl),\n:host(.label-floating.label-rtl) {\n  /* stylelint-disable property-disallowed-list */\n  transform-origin: top right;\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host(.label-stacked) {\n  transform: translateY(50%) scale(0.75);\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n:host(.label-floating) {\n  transform: translateY(96%);\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n:host-context(.ion-focused).label-floating,\n:host-context(.item-has-focus).label-floating,\n:host-context(.item-has-placeholder:not(.item-input)).label-floating,\n:host-context(.item-has-value).label-floating {\n  transform: translateY(50%) scale(0.75);\n}\n\n/**\n * When translating the label inside of an ion-item with `fill=\"outline\"`,\n * add pseudo-elements to imitate fieldset-like padding without shifting the label\n */\n:host-context(.item-fill-outline.ion-focused).label-floating,\n:host-context(.item-fill-outline.item-has-focus).label-floating,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input)).label-floating,\n:host-context(.item-fill-outline.item-has-value).label-floating {\n  transform: translateY(-6px) scale(0.75);\n  position: relative;\n  max-width: min-content;\n  background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n  overflow: visible;\n  z-index: 3;\n}\n:host-context(.item-fill-outline.ion-focused).label-floating::before, :host-context(.item-fill-outline.ion-focused).label-floating::after,\n:host-context(.item-fill-outline.item-has-focus).label-floating::before,\n:host-context(.item-fill-outline.item-has-focus).label-floating::after,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input)).label-floating::before,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input)).label-floating::after,\n:host-context(.item-fill-outline.item-has-value).label-floating::before,\n:host-context(.item-fill-outline.item-has-value).label-floating::after {\n  position: absolute;\n  width: 4px;\n  height: 100%;\n  background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n  content: \"\";\n}\n:host-context(.item-fill-outline.ion-focused).label-floating::before,\n:host-context(.item-fill-outline.item-has-focus).label-floating::before,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input)).label-floating::before,\n:host-context(.item-fill-outline.item-has-value).label-floating::before {\n  /* stylelint-disable property-disallowed-list */\n  left: calc(-1 * 4px);\n  /* stylelint-enable property-disallowed-list */\n}\n:host-context(.item-fill-outline.ion-focused).label-floating::after,\n:host-context(.item-fill-outline.item-has-focus).label-floating::after,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input)).label-floating::after,\n:host-context(.item-fill-outline.item-has-value).label-floating::after {\n  /* stylelint-disable property-disallowed-list */\n  right: calc(-1 * 4px);\n  /* stylelint-enable property-disallowed-list */\n}\n\n:host-context(.item-fill-outline.ion-focused.item-has-start-slot).label-floating,\n:host-context(.item-fill-outline.item-has-focus.item-has-start-slot).label-floating,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input).item-has-start-slot).label-floating,\n:host-context(.item-fill-outline.item-has-value.item-has-start-slot).label-floating {\n  transform: translateX(-32px) translateY(-6px) scale(0.75);\n}\n\n:host-context(.item-fill-outline.ion-focused.item-has-start-slot).label-floating.label-rtl,\n:host-context(.item-fill-outline.item-has-focus.item-has-start-slot).label-floating.label-rtl,\n:host-context(.item-fill-outline.item-has-placeholder:not(.item-input).item-has-start-slot).label-floating.label-rtl,\n:host-context(.item-fill-outline.item-has-value.item-has-start-slot).label-floating.label-rtl {\n  transform: translateX(calc(-1 * -32px)) translateY(-6px) scale(0.75);\n}\n\n:host-context(.ion-focused).label-stacked:not(.ion-color),\n:host-context(.ion-focused).label-floating:not(.ion-color),\n:host-context(.item-has-focus).label-stacked:not(.ion-color),\n:host-context(.item-has-focus).label-floating:not(.ion-color) {\n  color: var(--ion-color-primary, #3880ff);\n}\n\n:host-context(.ion-focused.ion-color).label-stacked:not(.ion-color),\n:host-context(.ion-focused.ion-color).label-floating:not(.ion-color),\n:host-context(.item-has-focus.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-has-focus.ion-color).label-floating:not(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host-context(.item-fill-solid.ion-focused.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-fill-solid.ion-focused.ion-color).label-floating:not(.ion-color),\n:host-context(.item-fill-outline.ion-focused.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-fill-outline.ion-focused.ion-color).label-floating:not(.ion-color),\n:host-context(.item-fill-solid.item-has-focus.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-fill-solid.item-has-focus.ion-color).label-floating:not(.ion-color),\n:host-context(.item-fill-outline.item-has-focus.ion-color).label-stacked:not(.ion-color),\n:host-context(.item-fill-outline.item-has-focus.ion-color).label-floating:not(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host-context(.ion-invalid.ion-touched).label-stacked:not(.ion-color),\n:host-context(.ion-invalid.ion-touched).label-floating:not(.ion-color) {\n  color: var(--highlight-color-invalid);\n}\n\n::slotted(*) h1 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 1.5rem;\n  font-weight: normal;\n}\n\n::slotted(*) h2 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 1rem;\n  font-weight: normal;\n}\n\n::slotted(*) h3,\n::slotted(*) h4,\n::slotted(*) h5,\n::slotted(*) h6 {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 2px;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  font-weight: normal;\n  line-height: normal;\n}\n\n::slotted(*) p {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 2px;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  text-overflow: inherit;\n  overflow: inherit;\n}\n\n::slotted(p) {\n  color: var(--ion-color-step-600, #666666);\n}\n\n:host(.in-item-color)::slotted(p) {\n  color: inherit;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Label {\n    constructor() {\n        this.inRange = false;\n        this.color = undefined;\n        this.position = undefined;\n        this.noAnimate = false;\n    }\n    componentWillLoad() {\n        this.inRange = !!this.el.closest('ion-range');\n        this.noAnimate = this.position === 'floating';\n        this.emitStyle();\n        this.emitColor();\n    }\n    componentDidLoad() {\n        if (this.noAnimate) {\n            setTimeout(() => {\n                this.noAnimate = false;\n            }, 1000);\n        }\n    }\n    colorChanged() {\n        this.emitColor();\n    }\n    positionChanged() {\n        this.emitStyle();\n    }\n    emitColor() {\n        const { color } = this;\n        this.ionColor.emit({\n            'item-label-color': color !== undefined,\n            [`ion-color-${color}`]: color !== undefined,\n        });\n    }\n    emitStyle() {\n        const { inRange, position } = this;\n        // If the label is inside of a range we don't want\n        // to override the classes added by the label that\n        // is a direct child of the item\n        if (!inRange) {\n            this.ionStyle.emit({\n                label: true,\n                [`label-${position}`]: position !== undefined,\n            });\n        }\n    }\n    render() {\n        const position = this.position;\n        const mode = getIonMode(this);\n        return (h(Host, { key: '72ad4ba5c1137ae0130e421346668e436ea53bf8', class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item-color': hostContext('ion-item.ion-color', this.el),\n                [`label-${position}`]: position !== undefined,\n                [`label-no-animate`]: this.noAnimate,\n                'label-rtl': document.dir === 'rtl',\n            }) }));\n    }\n    static get is() { return \"ion-label\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"label.ios.scss\"],\n            \"md\": [\"label.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"label.ios.css\"],\n            \"md\": [\"label.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"position\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'fixed' | 'stacked' | 'floating'\",\n                    \"resolved\": \"\\\"fixed\\\" | \\\"floating\\\" | \\\"stacked\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The position determines where and how the label behaves inside an item.\"\n                },\n                \"attribute\": \"position\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"noAnimate\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionColor\",\n                \"name\": \"ionColor\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the color changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"color\",\n                \"methodName\": \"colorChanged\"\n            }, {\n                \"propName\": \"position\",\n                \"methodName\": \"positionChanged\"\n            }];\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: block;\n  contain: content;\n  list-style-type: none;\n}\n\nion-list.list-inset {\n  transform: translateZ(0);\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.list-ios {\n  background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\n.list-ios.list-inset {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 10px;\n}\n\n/**\n * These selectors ensure the last item in the list\n * has the correct border.\n * We need to consider the following scenarios:\n 1. The only item in a list.\n 2. The last item in a list as long as it is not the only item.\n 3. The item in the last item-sliding in a list.\n * Note that we do not select ion-item:last-of-type\n * because that will cause the borders to disappear on\n * items in an item-sliding when the item is the last\n * element in the item-sliding container.\n */\n.list-ios.list-inset ion-item:only-child,\n.list-ios.list-inset ion-item:not(:only-of-type):last-of-type,\n.list-ios.list-inset ion-item-sliding:last-of-type ion-item {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n.list-ios.list-inset + ion-list.list-inset {\n  margin-top: 0;\n}\n\n.list-ios-lines-none .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0px;\n}\n\n.list-ios-lines-full .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0 0 0.55px 0;\n}\n\n.list-ios-lines-inset .item-lines-default {\n  --inner-border-width: 0 0 0.55px 0;\n  --border-width: 0px;\n}\n\nion-card .list-ios {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: block;\n  contain: content;\n  list-style-type: none;\n}\n\nion-list.list-inset {\n  transform: translateZ(0);\n  overflow: hidden;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.list-md {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  background: var(--ion-item-background, var(--ion-background-color, #fff));\n}\n\n@supports (inset-inline-start: 0) {\n  .list-md > .input:last-child::after {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .list-md > .input:last-child::after {\n    left: 0;\n  }\n  :host-context([dir=rtl]) .list-md > .input:last-child::after {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  [dir=rtl] .list-md > .input:last-child::after {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    .list-md > .input:last-child::after:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n\n.list-md.list-inset {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  border-radius: 2px;\n}\n\n/**\n * These selectors ensure the last item in the list\n * has the correct border.\n * We need to consider the following scenarios:\n 1. The last item in a list as long as it is not the only item.\n 2. The item in the last item-sliding in a list.\n * Note that we do not select \"ion-item-sliding ion-item:last-of-type\"\n * because that will cause the borders to disappear on\n * items in an item-sliding when the item is the last\n * element in the item-sliding container.\n */\n.list-md.list-inset ion-item:not(:only-of-type):last-of-type,\n.list-md.list-inset ion-item-sliding:last-of-type ion-item {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n/**\n * We target :only-child instead of :only-of-type\n * otherwise borders will disappear on items inside of\n * ion-item-sliding because the item will be the only\n * one of its type inside of the ion-item-sliding group.\n */\n.list-md.list-inset ion-item:only-child {\n  --border-width: 0;\n  --inner-border-width: 0;\n}\n\n.list-md.list-inset + ion-list.list-inset {\n  margin-top: 0;\n}\n\n.list-md-lines-none .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0px;\n}\n\n.list-md-lines-full .item-lines-default {\n  --inner-border-width: 0px;\n  --border-width: 0 0 1px 0;\n}\n\n.list-md-lines-inset .item-lines-default {\n  --inner-border-width: 0 0 1px 0;\n  --border-width: 0px;\n}\n\nion-card .list-md {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class List {\n    constructor() {\n        this.lines = undefined;\n        this.inset = false;\n    }\n    /**\n     * If `ion-item-sliding` are used inside the list, this method closes\n     * any open sliding item.\n     *\n     * Returns `true` if an actual `ion-item-sliding` is closed.\n     */\n    async closeSlidingItems() {\n        const item = this.el.querySelector('ion-item-sliding');\n        if (item === null || item === void 0 ? void 0 : item.closeOpened) {\n            return item.closeOpened();\n        }\n        return false;\n    }\n    render() {\n        const mode = getIonMode(this);\n        const { lines, inset } = this;\n        return (h(Host, { key: '3df401155114c7a39c81f201bf8a181d07e8d4c8', role: \"list\", class: {\n                [mode]: true,\n                // Used internally for styling\n                [`list-${mode}`]: true,\n                'list-inset': inset,\n                [`list-lines-${lines}`]: lines !== undefined,\n                [`list-${mode}-lines-${lines}`]: lines !== undefined,\n            } }));\n    }\n    static get is() { return \"ion-list\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"list.ios.scss\"],\n            \"md\": [\"list.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"list.ios.css\"],\n            \"md\": [\"list.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"lines\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'full' | 'inset' | 'none'\",\n                    \"resolved\": \"\\\"full\\\" | \\\"inset\\\" | \\\"none\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How the bottom border should be displayed on all items.\"\n                },\n                \"attribute\": \"lines\",\n                \"reflect\": false\n            },\n            \"inset\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the list will have margin around it and rounded corners.\"\n                },\n                \"attribute\": \"inset\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"closeSlidingItems\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"If `ion-item-sliding` are used inside the list, this method closes\\nany open sliding item.\\n\\nReturns `true` if an actual `ion-item-sliding` is closed.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the note\n   */\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host {\n  --color: var(--ion-color-step-350, #a6a6a6);\n  font-size: max(14px, 1rem);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the note\n   */\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\n:host {\n  --color: var(--ion-color-step-600, #666666);\n  font-size: 0.875rem;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Note {\n    constructor() {\n        this.color = undefined;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '79a17a318ec6e8326c9741b4a9bb4598acdc225e', class: createColorClasses(this.color, {\n                [mode]: true,\n            }) }, h(\"slot\", { key: '5adeaccfabb4bee7b84ea5c5de804bd255b29255' })));\n    }\n    static get is() { return \"ion-note\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"note.ios.scss\"],\n            \"md\": [\"note.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"note.ios.css\"],\n            \"md\": [\"note.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            }\n        };\n    }\n}\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  contain: strict;\n  pointer-events: none;\n}\n\n:host(.unbounded) {\n  contain: layout size style;\n}\n\n.ripple-effect {\n  border-radius: 50%;\n  position: absolute;\n  background-color: currentColor;\n  color: inherit;\n  contain: strict;\n  opacity: 0;\n  animation: 225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;\n  will-change: transform, opacity;\n  pointer-events: none;\n}\n\n.fade-out {\n  transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  animation: 150ms fadeOutAnimation forwards;\n}\n\n@keyframes rippleAnimation {\n  from {\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n    transform: scale(1);\n  }\n  to {\n    transform: translate(var(--translate-end)) scale(var(--final-scale, 1));\n  }\n}\n@keyframes fadeInAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0;\n  }\n  to {\n    opacity: 0.16;\n  }\n}\n@keyframes fadeOutAnimation {\n  from {\n    animation-timing-function: linear;\n    opacity: 0.16;\n  }\n  to {\n    opacity: 0;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask, writeTask } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class RippleEffect {\n    constructor() {\n        this.type = 'bounded';\n    }\n    /**\n     * Adds the ripple effect to the parent element.\n     *\n     * @param x The horizontal coordinate of where the ripple should start.\n     * @param y The vertical coordinate of where the ripple should start.\n     */\n    async addRipple(x, y) {\n        return new Promise((resolve) => {\n            readTask(() => {\n                const rect = this.el.getBoundingClientRect();\n                const width = rect.width;\n                const height = rect.height;\n                const hypotenuse = Math.sqrt(width * width + height * height);\n                const maxDim = Math.max(height, width);\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\n                const finalScale = maxRadius / initialSize;\n                let posX = x - rect.left;\n                let posY = y - rect.top;\n                if (this.unbounded) {\n                    posX = width * 0.5;\n                    posY = height * 0.5;\n                }\n                const styleX = posX - initialSize * 0.5;\n                const styleY = posY - initialSize * 0.5;\n                const moveX = width * 0.5 - posX;\n                const moveY = height * 0.5 - posY;\n                writeTask(() => {\n                    const div = document.createElement('div');\n                    div.classList.add('ripple-effect');\n                    const style = div.style;\n                    style.top = styleY + 'px';\n                    style.left = styleX + 'px';\n                    style.width = style.height = initialSize + 'px';\n                    style.setProperty('--final-scale', `${finalScale}`);\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\n                    const container = this.el.shadowRoot || this.el;\n                    container.appendChild(div);\n                    setTimeout(() => {\n                        resolve(() => {\n                            removeRipple(div);\n                        });\n                    }, 225 + 100);\n                });\n            });\n        });\n    }\n    get unbounded() {\n        return this.type === 'unbounded';\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'f1129019a6d556b008c754aeb79618c69baea9f8', role: \"presentation\", class: {\n                [mode]: true,\n                unbounded: this.unbounded,\n            } }));\n    }\n    static get is() { return \"ion-ripple-effect\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"ripple-effect.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"ripple-effect.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'bounded' | 'unbounded'\",\n                    \"resolved\": \"\\\"bounded\\\" | \\\"unbounded\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Sets the type of ripple-effect:\\n\\n- `bounded`: the ripple effect expands from the user's click position\\n- `unbounded`: the ripple effect expands from the center of the button and overflows the container.\\n\\nNOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\\nwhile surfaces for unbounded ripples should have it set to visible.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'bounded'\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"addRipple\": {\n                \"complexType\": {\n                    \"signature\": \"(x: number, y: number) => Promise<() => void>\",\n                    \"parameters\": [{\n                            \"name\": \"x\",\n                            \"type\": \"number\",\n                            \"docs\": \"The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"y\",\n                            \"type\": \"number\",\n                            \"docs\": \"The vertical coordinate of where the ripple should start.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<() => void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Adds the ripple effect to the parent element.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"x The horizontal coordinate of where the ripple should start.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"y The vertical coordinate of where the ripple should start.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nconst removeRipple = (ripple) => {\n    ripple.classList.add('fade-out');\n    setTimeout(() => {\n        ripple.remove();\n    }, 200);\n};\nconst PADDING = 10;\nconst INITIAL_ORIGIN_SCALE = 0.5;\n"],"names":["inheritAttributes","getIonMode","createColorClasses"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]}