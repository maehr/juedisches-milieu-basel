{"version":3,"names":["searchbarIosCss","searchbarMdCss","Searchbar","constructor","hostRef","this","isCancelVisible","shouldAlignLeft","inputId","searchbarIds","inheritedAttributes","onClearInput","async","shouldFocus","ionClear","emit","Promise","resolve","setTimeout","value","getValue","emitInputChange","focused","setFocus","focusedValue","onCancelSearchbar","ev","preventDefault","stopPropagation","ionCancel","emitValueChange","nativeInput","blur","onInput","input","target","onChange","onBlur","ionBlur","positionElements","undefined","onFocus","ionFocus","noAnimate","color","animated","autocapitalize","autocomplete","autocorrect","cancelButtonIcon","config","get","arrowBackSharp","cancelButtonText","clearIcon","debounce","disabled","inputmode","enterkeyhint","maxlength","minlength","name","placeholder","searchIcon","showCancelButton","showClearButton","spellcheck","type","onLangChanged","newValue","Object","assign","lang","forceUpdate","onDirChanged","dir","debounceChanged","ionInput","originalIonInput","debounceEvent","valueChanged","inputEl","showCancelButtonChanged","requestAnimationFrame","connectedCallback","emitStyle","componentWillLoad","inheritAttributes","el","componentDidLoad","ionStyle","searchbar","focus","getInputElement","componentOnReady","event","toString","ionChange","prevAlignLeft","mode","getIonMode","trim","positionPlaceholder","positionCancelButton","rtl","isRTL","iconEl","shadowRoot","querySelector","removeAttribute","doc","document","tempSpan","createElement","innerText","body","appendChild","raf","textWidth","offsetWidth","remove","inputLeft","iconLeft","clientWidth","style","paddingRight","marginRight","paddingLeft","marginLeft","cancelButton","shouldShowCancel","shouldShowCancelButton","cancelStyle","offset","hasValue","shouldShowClearButton","render","getBoolean","closeCircle","closeSharp","searchOutline","searchSharp","h","key","tabIndex","onMouseDown","onTouchStart","class","icon","lazy","Host","role","createColorClasses","ref","inputMode","enterKeyHint","minLength","maxLength","autoCapitalize","autoComplete","autoCorrect","onPointerDown","onClick","selectIosCss","selectMdCss","Select","selectIds","hasLoggedDeprecationWarning","closestSlot","closest","open","isExpanded","cancelText","compareWith","fill","interface","interfaceOptions","justify","label","labelPlacement","legacy","multiple","okText","selectedText","toggleIcon","expandedIcon","shape","styleChanged","setValue","legacyFormController","createLegacyFormController","notchController","createNotchController","notchSpacerEl","labelSlot","updateOverlayOptions","mutationO","watchForOptions","disconnectedCallback","disconnect","destroy","overlay","createOverlay","onDidDismiss","then","ionDismiss","present","indexOfSelected","childOpts","map","o","indexOf","selectedItem","focusVisibleElement","interactiveEl","firstEnabledOption","selectInterface","console","warn","openActionSheet","openPopover","openAlert","buttons","createActionSheetButtons","popover","options","createPopoverOptions","inputType","inputs","createAlertInputs","data","selectValue","actionSheetButtons","option","getOptionValue","copyClasses","Array","from","classList","filter","cls","join","optClass","OPTION_CLASS","isOptionSelected","text","textContent","cssClass","handler","push","alertInputs","checked","popoverOptions","selected","close","showBackdrop","size","hasLegacyControl","item","contains","detail","ionShadowTarget","hasFloatingOrStackedLabel","nativeWrapperEl","popoverOpts","alignment","component","componentProps","header","subHeader","message","popoverController","create","actionSheetOpts","actionSheetController","labelText","getLabel","alertOpts","selectedValues","alertController","dismiss","findItemLabel","getText","querySelectorAll","generateText","focusEl","renderLabel","hasLabel","part","componentDidRender","_a","calculateNotchWidth","renderLabelContainer","hasOutlineFill","renderSelect","justifyEnabled","inItem","hostContext","shouldRenderHighlight","hasStartEndSlots","renderHiddenInput","parseValue","labelShouldFloat","id","renderSelectText","renderListbox","renderSelectIcon","renderLegacySelect","printIonWarning","labelId","getAriaLabel","displayValue","selectText","displayLabel","addPlaceholderClass","selectTextClasses","textPart","defaultIcon","chevronExpand","caretDownSharp","ariaLabel","_b","definedLabel","renderedLabel","isArray","opts","v","textForValue","opt","selectOpt","find","compareOptions","selectOptionCss","SelectOption","selectOptionIds"],"sources":["node_modules/@ionic/core/dist/collection/components/searchbar/searchbar.ios.css?tag=ion-searchbar&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/searchbar/searchbar.md.css?tag=ion-searchbar&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/searchbar/searchbar.js","node_modules/@ionic/core/dist/collection/components/select/select.ios.css?tag=ion-select&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.md.css?tag=ion-select&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select/select.js","node_modules/@ionic/core/dist/collection/components/select-option/select-option.css?tag=ion-select-option&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/select-option/select-option.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the searchbar input\n   * @prop --box-shadow: Box shadow of the searchbar input\n   * @prop --border-radius: Border radius of the searchbar input\n   * @prop --cancel-button-color: Color of the searchbar cancel button\n   * @prop --clear-button-color: Color of the searchbar clear button\n   * @prop --color: Color of the searchbar text\n   * @prop --icon-color: Color of the searchbar icon\n   * @prop --placeholder-color: Color of the searchbar placeholder\n   * @prop --placeholder-font-style: Font style of the searchbar placeholder\n   * @prop --placeholder-font-weight: Font weight of the searchbar placeholder\n   * @prop --placeholder-opacity: Opacity of the searchbar placeholder\n   */\n  --placeholder-color: initial;\n  --placeholder-font-style: initial;\n  --placeholder-font-weight: initial;\n  --placeholder-opacity: 0.6;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .searchbar-input {\n  background: var(--ion-color-base);\n}\n\n:host(.ion-color) .searchbar-clear-button,\n:host(.ion-color) .searchbar-cancel-button,\n:host(.ion-color) .searchbar-search-icon {\n  color: inherit;\n}\n\n.searchbar-search-icon {\n  color: var(--icon-color);\n  pointer-events: none;\n}\n\n.searchbar-input-container {\n  display: block;\n  position: relative;\n  flex-shrink: 1;\n  width: 100%;\n}\n\n.searchbar-input {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  border-radius: var(--border-radius);\n  display: block;\n  width: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  font-family: inherit;\n  box-shadow: var(--box-shadow);\n  box-sizing: border-box;\n  appearance: none;\n}\n.searchbar-input::placeholder {\n  color: var(--placeholder-color);\n  font-family: inherit;\n  font-style: var(--placeholder-font-style);\n  font-weight: var(--placeholder-font-weight);\n  opacity: var(--placeholder-opacity);\n}\n.searchbar-input::-webkit-search-cancel-button, .searchbar-input::-ms-clear {\n  display: none;\n}\n\n.searchbar-cancel-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: none;\n  height: 100%;\n  border: 0;\n  outline: none;\n  color: var(--cancel-button-color);\n  cursor: pointer;\n  appearance: none;\n}\n\n.searchbar-cancel-button > div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n\n.searchbar-clear-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: none;\n  min-height: 0;\n  outline: none;\n  color: var(--clear-button-color);\n  appearance: none;\n}\n\n/**\n * Normally, we would not want to use :focus\n * here because that would mean tapping the button\n * on mobile would focus it (and keep it focused).\n * However, the clear button always disappears after\n * being activated, so we never get to that state.\n */\n.searchbar-clear-button:focus {\n  opacity: 0.5;\n}\n\n:host(.searchbar-has-value.searchbar-should-show-clear) .searchbar-clear-button {\n  display: block;\n}\n\n:host(.searchbar-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.07);\n  --border-radius: 10px;\n  --box-shadow: none;\n  --cancel-button-color: var(--ion-color-primary, #3880ff);\n  --clear-button-color: var(--ion-color-step-600, #666666);\n  --color: var(--ion-text-color, #000);\n  --icon-color: var(--ion-color-step-600, #666666);\n  -webkit-padding-start: 12px;\n  padding-inline-start: 12px;\n  -webkit-padding-end: 12px;\n  padding-inline-end: 12px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  min-height: 60px;\n  contain: content;\n}\n\n.searchbar-input-container {\n  min-height: 36px;\n}\n\n.searchbar-search-icon {\n  -webkit-margin-start: calc(50% - 60px);\n  margin-inline-start: calc(50% - 60px);\n  top: 0;\n  position: absolute;\n  width: 1.375rem;\n  height: 100%;\n  contain: strict;\n}\n@supports (inset-inline-start: 0) {\n  .searchbar-search-icon {\n    inset-inline-start: 5px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .searchbar-search-icon {\n    left: 5px;\n  }\n  :host-context([dir=rtl]) .searchbar-search-icon {\n    left: unset;\n    right: unset;\n    right: 5px;\n  }\n  [dir=rtl] .searchbar-search-icon {\n    left: unset;\n    right: unset;\n    right: 5px;\n  }\n  @supports selector(:dir(rtl)) {\n    .searchbar-search-icon:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 5px;\n    }\n  }\n}\n\n.searchbar-input {\n  -webkit-padding-start: 0px;\n  padding-inline-start: 0px;\n  -webkit-padding-end: 0px;\n  padding-inline-end: 0px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  height: 100%;\n  font-size: 1.0625rem;\n  font-weight: 400;\n  contain: strict;\n}\n\n/**\n * We should only account for the clear button\n * if the clear button is actually visible. Otherwise\n * long text in an input can get cut off when it does not need to.\n */\n:host(.searchbar-has-value.searchbar-should-show-clear) .searchbar-input {\n  -webkit-padding-start: 1.75rem;\n  padding-inline-start: 1.75rem;\n  -webkit-padding-end: 1.75rem;\n  padding-inline-end: 1.75rem;\n}\n\n.searchbar-clear-button {\n  top: 0;\n  background-position: center;\n  position: absolute;\n  width: 1.875rem;\n  height: 100%;\n  border: 0;\n  background-color: transparent;\n}\n@supports (inset-inline-start: 0) {\n  .searchbar-clear-button {\n    inset-inline-end: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .searchbar-clear-button {\n    right: 0;\n  }\n  :host-context([dir=rtl]) .searchbar-clear-button {\n    left: unset;\n    right: unset;\n    left: 0;\n  }\n  [dir=rtl] .searchbar-clear-button {\n    left: unset;\n    right: unset;\n    left: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    .searchbar-clear-button:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: 0;\n    }\n  }\n}\n\n.searchbar-clear-icon {\n  width: 1.125rem;\n  height: 100%;\n}\n\n.searchbar-cancel-button {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 0;\n  padding-inline-end: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  flex-shrink: 0;\n  background-color: transparent;\n  font-size: 16px;\n}\n\n:host(.searchbar-left-aligned) .searchbar-search-icon {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n}\n\n:host(.searchbar-left-aligned) .searchbar-input {\n  -webkit-padding-start: 1.875rem;\n  padding-inline-start: 1.875rem;\n}\n\n:host(.searchbar-has-focus) .searchbar-cancel-button,\n:host(.searchbar-should-show-cancel) .searchbar-cancel-button,\n:host(.searchbar-animated) .searchbar-cancel-button {\n  display: block;\n}\n\n:host(.searchbar-animated) .searchbar-search-icon,\n:host(.searchbar-animated) .searchbar-input {\n  transition: all 300ms ease;\n}\n\n:host(.searchbar-animated.searchbar-has-focus) .searchbar-cancel-button,\n:host(.searchbar-animated.searchbar-should-show-cancel) .searchbar-cancel-button {\n  opacity: 1;\n  pointer-events: auto;\n}\n\n:host(.searchbar-animated) .searchbar-cancel-button {\n  -webkit-margin-end: -100%;\n  margin-inline-end: -100%;\n  transform: translate3d(0,  0,  0);\n  transition: all 300ms ease;\n  opacity: 0;\n  pointer-events: none;\n}\n\n:host(.searchbar-no-animate) .searchbar-search-icon,\n:host(.searchbar-no-animate) .searchbar-input,\n:host(.searchbar-no-animate) .searchbar-cancel-button {\n  transition-duration: 0ms;\n}\n\n:host(.ion-color) .searchbar-cancel-button {\n  color: var(--ion-color-base);\n}\n\n@media (any-hover: hover) {\n  :host(.ion-color) .searchbar-cancel-button:hover {\n    color: var(--ion-color-tint);\n  }\n}\n:host-context(ion-toolbar) {\n  padding-top: 1px;\n  padding-bottom: 15px;\n  min-height: 52px;\n}\n\n:host-context(ion-toolbar.ion-color):not(.ion-color) {\n  color: inherit;\n}\n\n:host-context(ion-toolbar.ion-color):not(.ion-color) .searchbar-cancel-button {\n  color: currentColor;\n}\n\n:host-context(ion-toolbar.ion-color) .searchbar-search-icon {\n  color: currentColor;\n  opacity: 0.5;\n}\n\n:host-context(ion-toolbar.ion-color):not(.ion-color) .searchbar-input {\n  background: rgba(var(--ion-color-contrast-rgb), 0.07);\n  color: currentColor;\n}\n\n:host-context(ion-toolbar.ion-color):not(.ion-color) .searchbar-clear-button {\n  color: currentColor;\n  opacity: 0.5;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the searchbar input\n   * @prop --box-shadow: Box shadow of the searchbar input\n   * @prop --border-radius: Border radius of the searchbar input\n   * @prop --cancel-button-color: Color of the searchbar cancel button\n   * @prop --clear-button-color: Color of the searchbar clear button\n   * @prop --color: Color of the searchbar text\n   * @prop --icon-color: Color of the searchbar icon\n   * @prop --placeholder-color: Color of the searchbar placeholder\n   * @prop --placeholder-font-style: Font style of the searchbar placeholder\n   * @prop --placeholder-font-weight: Font weight of the searchbar placeholder\n   * @prop --placeholder-opacity: Opacity of the searchbar placeholder\n   */\n  --placeholder-color: initial;\n  --placeholder-font-style: initial;\n  --placeholder-font-weight: initial;\n  --placeholder-opacity: 0.6;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  display: flex;\n  position: relative;\n  align-items: center;\n  width: 100%;\n  color: var(--color);\n  font-family: var(--ion-font-family, inherit);\n  box-sizing: border-box;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-contrast);\n}\n\n:host(.ion-color) .searchbar-input {\n  background: var(--ion-color-base);\n}\n\n:host(.ion-color) .searchbar-clear-button,\n:host(.ion-color) .searchbar-cancel-button,\n:host(.ion-color) .searchbar-search-icon {\n  color: inherit;\n}\n\n.searchbar-search-icon {\n  color: var(--icon-color);\n  pointer-events: none;\n}\n\n.searchbar-input-container {\n  display: block;\n  position: relative;\n  flex-shrink: 1;\n  width: 100%;\n}\n\n.searchbar-input {\n  font-family: inherit;\n  font-size: inherit;\n  font-style: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  text-decoration: inherit;\n  text-indent: inherit;\n  text-overflow: inherit;\n  text-transform: inherit;\n  text-align: inherit;\n  white-space: inherit;\n  color: inherit;\n  border-radius: var(--border-radius);\n  display: block;\n  width: 100%;\n  min-height: inherit;\n  border: 0;\n  outline: none;\n  background: var(--background);\n  font-family: inherit;\n  box-shadow: var(--box-shadow);\n  box-sizing: border-box;\n  appearance: none;\n}\n.searchbar-input::placeholder {\n  color: var(--placeholder-color);\n  font-family: inherit;\n  font-style: var(--placeholder-font-style);\n  font-weight: var(--placeholder-font-weight);\n  opacity: var(--placeholder-opacity);\n}\n.searchbar-input::-webkit-search-cancel-button, .searchbar-input::-ms-clear {\n  display: none;\n}\n\n.searchbar-cancel-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: none;\n  height: 100%;\n  border: 0;\n  outline: none;\n  color: var(--cancel-button-color);\n  cursor: pointer;\n  appearance: none;\n}\n\n.searchbar-cancel-button > div {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n\n.searchbar-clear-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: none;\n  min-height: 0;\n  outline: none;\n  color: var(--clear-button-color);\n  appearance: none;\n}\n\n/**\n * Normally, we would not want to use :focus\n * here because that would mean tapping the button\n * on mobile would focus it (and keep it focused).\n * However, the clear button always disappears after\n * being activated, so we never get to that state.\n */\n.searchbar-clear-button:focus {\n  opacity: 0.5;\n}\n\n:host(.searchbar-has-value.searchbar-should-show-clear) .searchbar-clear-button {\n  display: block;\n}\n\n:host(.searchbar-disabled) {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-background-color, #fff);\n  --border-radius: 2px;\n  --box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  --cancel-button-color: var(--ion-color-step-900, #1a1a1a);\n  --clear-button-color: initial;\n  --color: var(--ion-color-step-850, #262626);\n  --icon-color: var(--ion-color-step-600, #666666);\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  background: inherit;\n}\n\n.searchbar-search-icon {\n  top: 11px;\n  width: 1.3125rem;\n  height: 1.3125rem;\n}\n@supports (inset-inline-start: 0) {\n  .searchbar-search-icon {\n    inset-inline-start: 16px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .searchbar-search-icon {\n    left: 16px;\n  }\n  :host-context([dir=rtl]) .searchbar-search-icon {\n    left: unset;\n    right: unset;\n    right: 16px;\n  }\n  [dir=rtl] .searchbar-search-icon {\n    left: unset;\n    right: unset;\n    right: 16px;\n  }\n  @supports selector(:dir(rtl)) {\n    .searchbar-search-icon:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 16px;\n    }\n  }\n}\n\n.searchbar-cancel-button {\n  /**\n   * The left edge of the cancel button\n   * should align with the left edge\n   * of the back button if the searchbar\n   * is used in a toolbar.\n   */\n  top: 0;\n  background-color: transparent;\n  font-size: 1.5em;\n}\n@supports (inset-inline-start: 0) {\n  .searchbar-cancel-button {\n    inset-inline-start: 9px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .searchbar-cancel-button {\n    left: 9px;\n  }\n  :host-context([dir=rtl]) .searchbar-cancel-button {\n    left: unset;\n    right: unset;\n    right: 9px;\n  }\n  [dir=rtl] .searchbar-cancel-button {\n    left: unset;\n    right: unset;\n    right: 9px;\n  }\n  @supports selector(:dir(rtl)) {\n    .searchbar-cancel-button:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 9px;\n    }\n  }\n}\n\n.searchbar-search-icon,\n.searchbar-cancel-button {\n  position: absolute;\n}\n\n.searchbar-search-icon.ion-activated,\n.searchbar-cancel-button.ion-activated {\n  background-color: transparent;\n}\n\n.searchbar-input {\n  -webkit-padding-start: 3.4375rem;\n  padding-inline-start: 3.4375rem;\n  -webkit-padding-end: 3.4375rem;\n  padding-inline-end: 3.4375rem;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  background-position: left 8px center;\n  height: auto;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 30px;\n}\n:host-context([dir=rtl]) .searchbar-input {\n  background-position: right 8px center;\n}\n\n[dir=rtl] .searchbar-input {\n  background-position: right 8px center;\n}\n\n@supports selector(:dir(rtl)) {\n  .searchbar-input:dir(rtl) {\n    background-position: right 8px center;\n  }\n}\n\n.searchbar-clear-button {\n  top: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  position: absolute;\n  height: 100%;\n  border: 0;\n  background-color: transparent;\n}\n@supports (inset-inline-start: 0) {\n  .searchbar-clear-button {\n    inset-inline-end: 13px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .searchbar-clear-button {\n    right: 13px;\n  }\n  :host-context([dir=rtl]) .searchbar-clear-button {\n    left: unset;\n    right: unset;\n    left: 13px;\n  }\n  [dir=rtl] .searchbar-clear-button {\n    left: unset;\n    right: unset;\n    left: 13px;\n  }\n  @supports selector(:dir(rtl)) {\n    .searchbar-clear-button:dir(rtl) {\n      left: unset;\n      right: unset;\n      left: 13px;\n    }\n  }\n}\n\n.searchbar-clear-button.ion-activated {\n  background-color: transparent;\n}\n\n.searchbar-clear-icon {\n  width: 1.375rem;\n  height: 100%;\n}\n\n:host(.searchbar-has-focus) .searchbar-search-icon {\n  display: block;\n}\n\n:host(.searchbar-has-focus) .searchbar-cancel-button,\n:host(.searchbar-should-show-cancel) .searchbar-cancel-button {\n  display: block;\n}\n\n:host(.searchbar-has-focus) .searchbar-cancel-button + .searchbar-search-icon,\n:host(.searchbar-should-show-cancel) .searchbar-cancel-button + .searchbar-search-icon {\n  display: none;\n}\n\n:host-context(ion-toolbar) {\n  -webkit-padding-start: 7px;\n  padding-inline-start: 7px;\n  -webkit-padding-end: 7px;\n  padding-inline-end: 7px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { debounceEvent, raf, componentOnReady, inheritAttributes } from \"../../utils/helpers\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { arrowBackSharp, closeCircle, closeSharp, searchOutline, searchSharp } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Searchbar {\n    constructor() {\n        this.isCancelVisible = false;\n        this.shouldAlignLeft = true;\n        this.inputId = `ion-searchbar-${searchbarIds++}`;\n        this.inheritedAttributes = {};\n        /**\n         * Clears the input field and triggers the control change.\n         */\n        this.onClearInput = async (shouldFocus) => {\n            this.ionClear.emit();\n            return new Promise((resolve) => {\n                // setTimeout() fixes https://github.com/ionic-team/ionic/issues/7527\n                // wait for 4 frames\n                setTimeout(() => {\n                    const value = this.getValue();\n                    if (value !== '') {\n                        this.value = '';\n                        this.emitInputChange();\n                        /**\n                         * When tapping clear button\n                         * ensure input is focused after\n                         * clearing input so users\n                         * can quickly start typing.\n                         */\n                        if (shouldFocus && !this.focused) {\n                            this.setFocus();\n                            /**\n                             * The setFocus call above will clear focusedValue,\n                             * but ionChange will never have gotten a chance to\n                             * fire. Manually revert focusedValue so onBlur can\n                             * compare against what was in the box before the clear.\n                             */\n                            this.focusedValue = value;\n                        }\n                    }\n                    resolve();\n                }, 16 * 4);\n            });\n        };\n        /**\n         * Clears the input field and tells the input to blur since\n         * the clearInput function doesn't want the input to blur\n         * then calls the custom cancel function if the user passed one in.\n         */\n        this.onCancelSearchbar = async (ev) => {\n            if (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n            }\n            this.ionCancel.emit();\n            // get cached values before clearing the input\n            const value = this.getValue();\n            const focused = this.focused;\n            await this.onClearInput();\n            /**\n             * If there used to be something in the box, and we weren't focused\n             * beforehand (meaning no blur fired that would already handle this),\n             * manually fire ionChange.\n             */\n            if (value && !focused) {\n                this.emitValueChange(ev);\n            }\n            if (this.nativeInput) {\n                this.nativeInput.blur();\n            }\n        };\n        /**\n         * Update the Searchbar input value when the input changes\n         */\n        this.onInput = (ev) => {\n            const input = ev.target;\n            if (input) {\n                this.value = input.value;\n            }\n            this.emitInputChange(ev);\n        };\n        this.onChange = (ev) => {\n            this.emitValueChange(ev);\n        };\n        /**\n         * Sets the Searchbar to not focused and checks if it should align left\n         * based on whether there is a value in the searchbar or not.\n         */\n        this.onBlur = (ev) => {\n            this.focused = false;\n            this.ionBlur.emit();\n            this.positionElements();\n            if (this.focusedValue !== this.value) {\n                this.emitValueChange(ev);\n            }\n            this.focusedValue = undefined;\n        };\n        /**\n         * Sets the Searchbar to focused and active on input focus.\n         */\n        this.onFocus = () => {\n            this.focused = true;\n            this.focusedValue = this.value;\n            this.ionFocus.emit();\n            this.positionElements();\n        };\n        this.focused = false;\n        this.noAnimate = true;\n        this.color = undefined;\n        this.animated = false;\n        this.autocapitalize = 'default';\n        this.autocomplete = 'off';\n        this.autocorrect = 'off';\n        this.cancelButtonIcon = config.get('backButtonIcon', arrowBackSharp);\n        this.cancelButtonText = 'Cancel';\n        this.clearIcon = undefined;\n        this.debounce = undefined;\n        this.disabled = false;\n        this.inputmode = undefined;\n        this.enterkeyhint = undefined;\n        this.maxlength = undefined;\n        this.minlength = undefined;\n        this.name = this.inputId;\n        this.placeholder = 'Search';\n        this.searchIcon = undefined;\n        this.showCancelButton = 'never';\n        this.showClearButton = 'always';\n        this.spellcheck = false;\n        this.type = 'search';\n        this.value = '';\n    }\n    /**\n     * lang and dir are globally enumerated attributes.\n     * As a result, creating these as properties\n     * can have unintended side effects. Instead, we\n     * listen for attribute changes and inherit them\n     * to the inner `<input>` element.\n     */\n    onLangChanged(newValue) {\n        this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { lang: newValue });\n        forceUpdate(this);\n    }\n    onDirChanged(newValue) {\n        this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { dir: newValue });\n        forceUpdate(this);\n    }\n    debounceChanged() {\n        const { ionInput, debounce, originalIonInput } = this;\n        /**\n         * If debounce is undefined, we have to manually revert the ionInput emitter in case\n         * debounce used to be set to a number. Otherwise, the event would stay debounced.\n         */\n        this.ionInput = debounce === undefined ? originalIonInput !== null && originalIonInput !== void 0 ? originalIonInput : ionInput : debounceEvent(ionInput, debounce);\n    }\n    valueChanged() {\n        const inputEl = this.nativeInput;\n        const value = this.getValue();\n        if (inputEl && inputEl.value !== value) {\n            inputEl.value = value;\n        }\n    }\n    showCancelButtonChanged() {\n        requestAnimationFrame(() => {\n            this.positionElements();\n            forceUpdate(this);\n        });\n    }\n    connectedCallback() {\n        this.emitStyle();\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAttributes(this.el, ['lang', 'dir']));\n    }\n    componentDidLoad() {\n        this.originalIonInput = this.ionInput;\n        this.positionElements();\n        this.debounceChanged();\n        setTimeout(() => {\n            this.noAnimate = false;\n        }, 300);\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            searchbar: true,\n        });\n    }\n    /**\n     * Sets focus on the native `input` in `ion-searchbar`. Use this method instead of the global\n     * `input.focus()`.\n     *\n     * Developers who wish to focus an input when a page enters\n     * should call `setFocus()` in the `ionViewDidEnter()` lifecycle method.\n     *\n     * Developers who wish to focus an input when an overlay is presented\n     * should call `setFocus` after `didPresent` has resolved.\n     *\n     * See [managing focus](/docs/developing/managing-focus) for more information.\n     */\n    async setFocus() {\n        if (this.nativeInput) {\n            this.nativeInput.focus();\n        }\n    }\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    async getInputElement() {\n        /**\n         * If this gets called in certain early lifecycle hooks (ex: Vue onMounted),\n         * nativeInput won't be defined yet with the custom elements build, so wait for it to load in.\n         */\n        if (!this.nativeInput) {\n            await new Promise((resolve) => componentOnReady(this.el, resolve));\n        }\n        return Promise.resolve(this.nativeInput);\n    }\n    /**\n     * Emits an `ionChange` event.\n     *\n     * This API should be called for user committed changes.\n     * This API should not be used for external value changes.\n     */\n    emitValueChange(event) {\n        const { value } = this;\n        // Checks for both null and undefined values\n        const newValue = value == null ? value : value.toString();\n        // Emitting a value change should update the internal state for tracking the focused value\n        this.focusedValue = newValue;\n        this.ionChange.emit({ value: newValue, event });\n    }\n    /**\n     * Emits an `ionInput` event.\n     */\n    emitInputChange(event) {\n        const { value } = this;\n        this.ionInput.emit({ value, event });\n    }\n    /**\n     * Positions the input search icon, placeholder, and the cancel button\n     * based on the input value and if it is focused. (ios only)\n     */\n    positionElements() {\n        const value = this.getValue();\n        const prevAlignLeft = this.shouldAlignLeft;\n        const mode = getIonMode(this);\n        const shouldAlignLeft = !this.animated || value.trim() !== '' || !!this.focused;\n        this.shouldAlignLeft = shouldAlignLeft;\n        if (mode !== 'ios') {\n            return;\n        }\n        if (prevAlignLeft !== shouldAlignLeft) {\n            this.positionPlaceholder();\n        }\n        if (this.animated) {\n            this.positionCancelButton();\n        }\n    }\n    /**\n     * Positions the input placeholder\n     */\n    positionPlaceholder() {\n        const inputEl = this.nativeInput;\n        if (!inputEl) {\n            return;\n        }\n        const rtl = isRTL(this.el);\n        const iconEl = (this.el.shadowRoot || this.el).querySelector('.searchbar-search-icon');\n        if (this.shouldAlignLeft) {\n            inputEl.removeAttribute('style');\n            iconEl.removeAttribute('style');\n        }\n        else {\n            // Create a dummy span to get the placeholder width\n            const doc = document;\n            const tempSpan = doc.createElement('span');\n            tempSpan.innerText = this.placeholder || '';\n            doc.body.appendChild(tempSpan);\n            // Get the width of the span then remove it\n            raf(() => {\n                const textWidth = tempSpan.offsetWidth;\n                tempSpan.remove();\n                // Calculate the input padding\n                const inputLeft = 'calc(50% - ' + textWidth / 2 + 'px)';\n                // Calculate the icon margin\n                /**\n                 * We take the icon width to account\n                 * for any text scales applied to the icon\n                 * such as Dynamic Type on iOS as well as 8px\n                 * of padding.\n                 */\n                const iconLeft = 'calc(50% - ' + (textWidth / 2 + iconEl.clientWidth + 8) + 'px)';\n                // Set the input padding start and icon margin start\n                if (rtl) {\n                    inputEl.style.paddingRight = inputLeft;\n                    iconEl.style.marginRight = iconLeft;\n                }\n                else {\n                    inputEl.style.paddingLeft = inputLeft;\n                    iconEl.style.marginLeft = iconLeft;\n                }\n            });\n        }\n    }\n    /**\n     * Show the iOS Cancel button on focus, hide it offscreen otherwise\n     */\n    positionCancelButton() {\n        const rtl = isRTL(this.el);\n        const cancelButton = (this.el.shadowRoot || this.el).querySelector('.searchbar-cancel-button');\n        const shouldShowCancel = this.shouldShowCancelButton();\n        if (cancelButton !== null && shouldShowCancel !== this.isCancelVisible) {\n            const cancelStyle = cancelButton.style;\n            this.isCancelVisible = shouldShowCancel;\n            if (shouldShowCancel) {\n                if (rtl) {\n                    cancelStyle.marginLeft = '0';\n                }\n                else {\n                    cancelStyle.marginRight = '0';\n                }\n            }\n            else {\n                const offset = cancelButton.offsetWidth;\n                if (offset > 0) {\n                    if (rtl) {\n                        cancelStyle.marginLeft = -offset + 'px';\n                    }\n                    else {\n                        cancelStyle.marginRight = -offset + 'px';\n                    }\n                }\n            }\n        }\n    }\n    getValue() {\n        return this.value || '';\n    }\n    hasValue() {\n        return this.getValue() !== '';\n    }\n    /**\n     * Determines whether or not the cancel button should be visible onscreen.\n     * Cancel button should be shown if one of two conditions applies:\n     * 1. `showCancelButton` is set to `always`.\n     * 2. `showCancelButton` is set to `focus`, and the searchbar has been focused.\n     */\n    shouldShowCancelButton() {\n        if (this.showCancelButton === 'never' || (this.showCancelButton === 'focus' && !this.focused)) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Determines whether or not the clear button should be visible onscreen.\n     * Clear button should be shown if one of two conditions applies:\n     * 1. `showClearButton` is set to `always`.\n     * 2. `showClearButton` is set to `focus`, and the searchbar has been focused.\n     */\n    shouldShowClearButton() {\n        if (this.showClearButton === 'never' || (this.showClearButton === 'focus' && !this.focused)) {\n            return false;\n        }\n        return true;\n    }\n    render() {\n        const { cancelButtonText, autocapitalize } = this;\n        const animated = this.animated && config.getBoolean('animated', true);\n        const mode = getIonMode(this);\n        const clearIcon = this.clearIcon || (mode === 'ios' ? closeCircle : closeSharp);\n        const searchIcon = this.searchIcon || (mode === 'ios' ? searchOutline : searchSharp);\n        const shouldShowCancelButton = this.shouldShowCancelButton();\n        const cancelButton = this.showCancelButton !== 'never' && (h(\"button\", { key: '9c7b4d2e86d9bcd12e57c9a96723d3da598a3773', \"aria-label\": cancelButtonText, \"aria-hidden\": shouldShowCancelButton ? undefined : 'true', type: \"button\", tabIndex: mode === 'ios' && !shouldShowCancelButton ? -1 : undefined, onMouseDown: this.onCancelSearchbar, onTouchStart: this.onCancelSearchbar, class: \"searchbar-cancel-button\" }, h(\"div\", { key: '1c25268a776134cccd29eb752898cb8ac0eed30f', \"aria-hidden\": \"true\" }, mode === 'md' ? (h(\"ion-icon\", { \"aria-hidden\": \"true\", mode: mode, icon: this.cancelButtonIcon, lazy: false })) : (cancelButtonText))));\n        return (h(Host, { key: 'feef9fc7e405656e134a76dc037aaaa1a4ce36b4', role: \"search\", \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\n                [mode]: true,\n                'searchbar-animated': animated,\n                'searchbar-disabled': this.disabled,\n                'searchbar-no-animate': animated && this.noAnimate,\n                'searchbar-has-value': this.hasValue(),\n                'searchbar-left-aligned': this.shouldAlignLeft,\n                'searchbar-has-focus': this.focused,\n                'searchbar-should-show-clear': this.shouldShowClearButton(),\n                'searchbar-should-show-cancel': this.shouldShowCancelButton(),\n            }) }, h(\"div\", { key: '92e3925dc0de468e5665705902153837105dfa57', class: \"searchbar-input-container\" }, h(\"input\", Object.assign({ key: 'fb74faf81b347a62338ccdac981525df1c52b322', \"aria-label\": \"search text\", disabled: this.disabled, ref: (el) => (this.nativeInput = el), class: \"searchbar-input\", inputMode: this.inputmode, enterKeyHint: this.enterkeyhint, name: this.name, onInput: this.onInput, onChange: this.onChange, onBlur: this.onBlur, onFocus: this.onFocus, minLength: this.minlength, maxLength: this.maxlength, placeholder: this.placeholder, type: this.type, value: this.getValue(), autoCapitalize: autocapitalize === 'default' ? undefined : autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, spellcheck: this.spellcheck }, this.inheritedAttributes)), mode === 'md' && cancelButton, h(\"ion-icon\", { key: 'd58c3636dac1d2e4135989f4c07dc95c51492e60', \"aria-hidden\": \"true\", mode: mode, icon: searchIcon, lazy: false, class: \"searchbar-search-icon\" }), h(\"button\", { key: '1cece7c63ca5ca4b8799e15ee6d2bac100ef0d5e', \"aria-label\": \"reset\", type: \"button\", \"no-blur\": true, class: \"searchbar-clear-button\", onPointerDown: (ev) => {\n                /**\n                 * This prevents mobile browsers from\n                 * blurring the input when the clear\n                 * button is activated.\n                 */\n                ev.preventDefault();\n            }, onClick: () => this.onClearInput(true) }, h(\"ion-icon\", { key: 'fe3c2b9cac29002f69e95a89b554c7504e2df050', \"aria-hidden\": \"true\", mode: mode, icon: clearIcon, lazy: false, class: \"searchbar-clear-icon\" }))), mode === 'ios' && cancelButton));\n    }\n    static get is() { return \"ion-searchbar\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"searchbar.ios.scss\"],\n            \"md\": [\"searchbar.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"searchbar.ios.css\"],\n            \"md\": [\"searchbar.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, enable searchbar animation.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"autocapitalize\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\\nAvailable options: `\\\"off\\\"`, `\\\"none\\\"`, `\\\"on\\\"`, `\\\"sentences\\\"`, `\\\"words\\\"`, `\\\"characters\\\"`.\"\n                },\n                \"attribute\": \"autocapitalize\",\n                \"reflect\": false,\n                \"defaultValue\": \"'default'\"\n            },\n            \"autocomplete\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AutocompleteTypes\",\n                    \"resolved\": \"\\\"name\\\" | \\\"email\\\" | \\\"tel\\\" | \\\"url\\\" | \\\"on\\\" | \\\"off\\\" | \\\"honorific-prefix\\\" | \\\"given-name\\\" | \\\"additional-name\\\" | \\\"family-name\\\" | \\\"honorific-suffix\\\" | \\\"nickname\\\" | \\\"username\\\" | \\\"new-password\\\" | \\\"current-password\\\" | \\\"one-time-code\\\" | \\\"organization-title\\\" | \\\"organization\\\" | \\\"street-address\\\" | \\\"address-line1\\\" | \\\"address-line2\\\" | \\\"address-line3\\\" | \\\"address-level4\\\" | \\\"address-level3\\\" | \\\"address-level2\\\" | \\\"address-level1\\\" | \\\"country\\\" | \\\"country-name\\\" | \\\"postal-code\\\" | \\\"cc-name\\\" | \\\"cc-given-name\\\" | \\\"cc-additional-name\\\" | \\\"cc-family-name\\\" | \\\"cc-number\\\" | \\\"cc-exp\\\" | \\\"cc-exp-month\\\" | \\\"cc-exp-year\\\" | \\\"cc-csc\\\" | \\\"cc-type\\\" | \\\"transaction-currency\\\" | \\\"transaction-amount\\\" | \\\"language\\\" | \\\"bday\\\" | \\\"bday-day\\\" | \\\"bday-month\\\" | \\\"bday-year\\\" | \\\"sex\\\" | \\\"tel-country-code\\\" | \\\"tel-national\\\" | \\\"tel-area-code\\\" | \\\"tel-local\\\" | \\\"tel-extension\\\" | \\\"impp\\\" | \\\"photo\\\"\",\n                    \"references\": {\n                        \"AutocompleteTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AutocompleteTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the input's autocomplete property.\"\n                },\n                \"attribute\": \"autocomplete\",\n                \"reflect\": false,\n                \"defaultValue\": \"'off'\"\n            },\n            \"autocorrect\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'on' | 'off'\",\n                    \"resolved\": \"\\\"off\\\" | \\\"on\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the input's autocorrect property.\"\n                },\n                \"attribute\": \"autocorrect\",\n                \"reflect\": false,\n                \"defaultValue\": \"'off'\"\n            },\n            \"cancelButtonIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the cancel button icon. Only applies to `md` mode.\\nDefaults to `arrow-back-sharp`.\"\n                },\n                \"attribute\": \"cancel-button-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"config.get('backButtonIcon', arrowBackSharp) as string\"\n            },\n            \"cancelButtonText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the the cancel button text. Only applies to `ios` mode.\"\n                },\n                \"attribute\": \"cancel-button-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Cancel'\"\n            },\n            \"clearIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the clear icon. Defaults to `close-circle` for `ios` and `close-sharp` for `md`.\"\n                },\n                \"attribute\": \"clear-icon\",\n                \"reflect\": false\n            },\n            \"debounce\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the amount of time, in milliseconds, to wait to trigger the `ionInput` event after each keystroke.\"\n                },\n                \"attribute\": \"debounce\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the input.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"inputmode\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search'\",\n                    \"resolved\": \"\\\"decimal\\\" | \\\"email\\\" | \\\"none\\\" | \\\"numeric\\\" | \\\"search\\\" | \\\"tel\\\" | \\\"text\\\" | \\\"url\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A hint to the browser for which keyboard to display.\\nPossible values: `\\\"none\\\"`, `\\\"text\\\"`, `\\\"tel\\\"`, `\\\"url\\\"`,\\n`\\\"email\\\"`, `\\\"numeric\\\"`, `\\\"decimal\\\"`, and `\\\"search\\\"`.\"\n                },\n                \"attribute\": \"inputmode\",\n                \"reflect\": false\n            },\n            \"enterkeyhint\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send'\",\n                    \"resolved\": \"\\\"done\\\" | \\\"enter\\\" | \\\"go\\\" | \\\"next\\\" | \\\"previous\\\" | \\\"search\\\" | \\\"send\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A hint to the browser for which enter key to display.\\nPossible values: `\\\"enter\\\"`, `\\\"done\\\"`, `\\\"go\\\"`, `\\\"next\\\"`,\\n`\\\"previous\\\"`, `\\\"search\\\"`, and `\\\"send\\\"`.\"\n                },\n                \"attribute\": \"enterkeyhint\",\n                \"reflect\": false\n            },\n            \"maxlength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute specifies the maximum number of characters that the user can enter.\"\n                },\n                \"attribute\": \"maxlength\",\n                \"reflect\": false\n            },\n            \"minlength\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This attribute specifies the minimum number of characters that the user can enter.\"\n                },\n                \"attribute\": \"minlength\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If used in a form, set the name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the input's placeholder.\\n`placeholder` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Search'\"\n            },\n            \"searchIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The icon to use as the search icon. Defaults to `search-outline` in\\n`ios` mode and `search-sharp` in `md` mode.\"\n                },\n                \"attribute\": \"search-icon\",\n                \"reflect\": false\n            },\n            \"showCancelButton\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'never' | 'focus' | 'always'\",\n                    \"resolved\": \"\\\"always\\\" | \\\"focus\\\" | \\\"never\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Sets the behavior for the cancel button. Defaults to `\\\"never\\\"`.\\nSetting to `\\\"focus\\\"` shows the cancel button on focus.\\nSetting to `\\\"never\\\"` hides the cancel button.\\nSetting to `\\\"always\\\"` shows the cancel button regardless\\nof focus state.\"\n                },\n                \"attribute\": \"show-cancel-button\",\n                \"reflect\": false,\n                \"defaultValue\": \"'never'\"\n            },\n            \"showClearButton\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'never' | 'focus' | 'always'\",\n                    \"resolved\": \"\\\"always\\\" | \\\"focus\\\" | \\\"never\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Sets the behavior for the clear button. Defaults to `\\\"focus\\\"`.\\nSetting to `\\\"focus\\\"` shows the clear button on focus if the\\ninput is not empty.\\nSetting to `\\\"never\\\"` hides the clear button.\\nSetting to `\\\"always\\\"` shows the clear button regardless\\nof focus state, but only if the input is not empty.\"\n                },\n                \"attribute\": \"show-clear-button\",\n                \"reflect\": false,\n                \"defaultValue\": \"'always'\"\n            },\n            \"spellcheck\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, enable spellcheck on the input.\"\n                },\n                \"attribute\": \"spellcheck\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"type\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'text' | 'password' | 'email' | 'number' | 'search' | 'tel' | 'url'\",\n                    \"resolved\": \"\\\"email\\\" | \\\"number\\\" | \\\"password\\\" | \\\"search\\\" | \\\"tel\\\" | \\\"text\\\" | \\\"url\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the type of the input.\"\n                },\n                \"attribute\": \"type\",\n                \"reflect\": false,\n                \"defaultValue\": \"'search'\"\n            },\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"the value of the searchbar.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"''\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"focused\": {},\n            \"noAnimate\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionInput\",\n                \"name\": \"ionInput\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the `value` of the `ion-searchbar` element has changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"SearchbarInputEventDetail\",\n                    \"resolved\": \"SearchbarInputEventDetail\",\n                    \"references\": {\n                        \"SearchbarInputEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./searchbar-interface\",\n                            \"id\": \"src/components/searchbar/searchbar-interface.ts::SearchbarInputEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The `ionChange` event is fired for `<ion-searchbar>` elements when the user\\nmodifies the element's value. Unlike the `ionInput` event, the `ionChange`\\nevent is not necessarily fired for each alteration to an element's value.\\n\\nThe `ionChange` event is fired when the value has been committed\\nby the user. This can happen when the element loses focus or\\nwhen the \\\"Enter\\\" key is pressed. `ionChange` can also fire\\nwhen clicking the clear or cancel buttons.\"\n                },\n                \"complexType\": {\n                    \"original\": \"SearchbarChangeEventDetail\",\n                    \"resolved\": \"SearchbarChangeEventDetail\",\n                    \"references\": {\n                        \"SearchbarChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./searchbar-interface\",\n                            \"id\": \"src/components/searchbar/searchbar-interface.ts::SearchbarChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionCancel\",\n                \"name\": \"ionCancel\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the cancel button is clicked.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionClear\",\n                \"name\": \"ionClear\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the clear input button is clicked.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the input loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the input has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"setFocus\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Sets focus on the native `input` in `ion-searchbar`. Use this method instead of the global\\n`input.focus()`.\\n\\nDevelopers who wish to focus an input when a page enters\\nshould call `setFocus()` in the `ionViewDidEnter()` lifecycle method.\\n\\nDevelopers who wish to focus an input when an overlay is presented\\nshould call `setFocus` after `didPresent` has resolved.\\n\\nSee [managing focus](/docs/developing/managing-focus) for more information.\",\n                    \"tags\": []\n                }\n            },\n            \"getInputElement\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<HTMLInputElement>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"HTMLInputElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLInputElement\"\n                        }\n                    },\n                    \"return\": \"Promise<HTMLInputElement>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns the native `<input>` element used under the hood.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"lang\",\n                \"methodName\": \"onLangChanged\"\n            }, {\n                \"propName\": \"dir\",\n                \"methodName\": \"onDirChanged\"\n            }, {\n                \"propName\": \"debounce\",\n                \"methodName\": \"debounceChanged\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"valueChanged\"\n            }, {\n                \"propName\": \"showCancelButton\",\n                \"methodName\": \"showCancelButtonChanged\"\n            }];\n    }\n}\nlet searchbarIds = 0;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: 0.6;\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #3880ff);\n  --highlight-color-valid: var(--ion-color-success, #2dd36f);\n  --highlight-color-invalid: var(--ion-color-danger, #eb445a);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n:host(:not(.legacy-select)) {\n  width: 100%;\n  min-height: 44px;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.legacy-select) {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.in-item:not(.legacy-select)) {\n  flex: 1 1 0;\n}\n\n:host(.in-item.legacy-select) {\n  position: static;\n  max-width: 45%;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]:not(.legacy-select)),\n:host([slot=end]:not(.legacy-select)) {\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\n:host(.legacy-select) label {\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.legacy-select) label {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.legacy-select) label {\n    left: 0;\n  }\n  :host-context([dir=rtl]):host(.legacy-select) label, :host-context([dir=rtl]).legacy-select label {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.legacy-select:dir(rtl)) label {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n:host(.legacy-select) label::-moz-focus-inner {\n  border: 0;\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.legacy-select) {\n  --padding-top: 10px;\n  --padding-end: 8px;\n  --padding-bottom: 10px;\n  --padding-start: 16px;\n}\n\n.select-icon {\n  width: 1.125rem;\n  height: 1.125rem;\n  color: var(--ion-color-step-650, #595959);\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 1.125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.3;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 0;\n  --padding-end: 0;\n  --padding-top: 0;\n  --padding-bottom: 0;\n  aspect-ratio: 1;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the select\n   * @prop --padding-top: Top padding of the select\n   * @prop --padding-end: Right padding if direction is left-to-right, and left padding if direction is right-to-left of the select\n   * @prop --padding-bottom: Bottom padding of the select\n   * @prop --padding-start: Left padding if direction is left-to-right, and right padding if direction is right-to-left of the select\n   *\n   * @prop --placeholder-color: Color of the select placeholder text\n   * @prop --placeholder-opacity: Opacity of the select placeholder text\n   *\n   * @prop --highlight-color-focused: The color of the highlight on the select when focused\n   * @prop --highlight-color-invalid: The color of the highlight on the select when invalid\n   * @prop --highlight-color-valid: The color of the highlight on the select when valid\n   *\n   * @prop --border-color: Color of the select border\n   * @prop --border-radius: Radius of the select border. A large radius may display unevenly when using fill=\"outline\"; if needed, use shape=\"round\" instead or increase --padding-start.\n   * @prop --border-style: Style of the select border\n   * @prop --border-width: Width of the select border\n   *\n   * @prop --ripple-color: The color of the ripple effect on MD mode.\n   */\n  --padding-top: 0px;\n  --padding-end: 0px;\n  --padding-bottom: 0px;\n  --padding-start: 0px;\n  --placeholder-color: currentColor;\n  --placeholder-opacity: 0.6;\n  --background: transparent;\n  --border-style: solid;\n  --highlight-color-focused: var(--ion-color-primary, #3880ff);\n  --highlight-color-valid: var(--ion-color-success, #2dd36f);\n  --highlight-color-invalid: var(--ion-color-danger, #eb445a);\n  /**\n   * This is a private API that is used to switch\n   * out the highlight color based on the state\n   * of the component without having to write\n   * different selectors for different fill variants.\n   */\n  --highlight-color: var(--highlight-color-focused);\n  display: block;\n  position: relative;\n  font-family: var(--ion-font-family, inherit);\n  white-space: nowrap;\n  cursor: pointer;\n  z-index: 2;\n}\n\n:host(:not(.legacy-select)) {\n  width: 100%;\n  min-height: 44px;\n}\n\n/**\n * Since the label sits on top of the element,\n * the component needs to be taller otherwise the\n * label will appear too close to the select text.\n */\n:host(.select-label-placement-floating),\n:host(.select-label-placement-stacked) {\n  min-height: 56px;\n}\n\n:host(.ion-color) {\n  --highlight-color-focused: var(--ion-color-base);\n}\n\n:host(.legacy-select) {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.in-item:not(.legacy-select)) {\n  flex: 1 1 0;\n}\n\n:host(.in-item.legacy-select) {\n  position: static;\n  max-width: 45%;\n}\n\n:host(.select-disabled) {\n  pointer-events: none;\n}\n\n:host(.ion-focused) button {\n  border: 2px solid #5e9ed6;\n}\n\n/**\n * Select can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]:not(.legacy-select)),\n:host([slot=end]:not(.legacy-select)) {\n  width: auto;\n}\n\n.select-placeholder {\n  color: var(--placeholder-color);\n  opacity: var(--placeholder-opacity);\n}\n\n:host(.legacy-select) label {\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.legacy-select) label {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.legacy-select) label {\n    left: 0;\n  }\n  :host-context([dir=rtl]):host(.legacy-select) label, :host-context([dir=rtl]).legacy-select label {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.legacy-select:dir(rtl)) label {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n:host(.legacy-select) label::-moz-focus-inner {\n  border: 0;\n}\n\nbutton {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.select-icon {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: relative;\n  /**\n   * Prevent the icon from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n/**\n * Ensure that the select icon has\n * the correct color contrast when\n * used inside of an item.\n */\n:host(.in-item-color) .select-icon {\n  color: inherit;\n}\n\n/**\n * The select icon should be centered with\n * the entire container not just the control\n * with floating/stacked labels.\n */\n:host(.select-label-placement-stacked) .select-icon,\n:host(.select-label-placement-floating) .select-icon {\n  position: absolute;\n  height: 100%;\n}\n\n/**\n * This positions the icon at the correct\n * edge of the component with LTR and RTL\n * text directions. The position mixin cannot be\n * used here because the icon is in the Shadow DOM.\n */\n:host(.select-ltr.select-label-placement-stacked) .select-icon,\n:host(.select-ltr.select-label-placement-floating) .select-icon {\n  right: var(--padding-end, 0);\n}\n\n:host(.select-rtl.select-label-placement-stacked) .select-icon,\n:host(.select-rtl.select-label-placement-floating) .select-icon {\n  left: var(--padding-start, 0);\n}\n\n.select-text {\n  flex: 1;\n  min-width: 16px;\n  font-size: inherit;\n  text-overflow: ellipsis;\n  white-space: inherit;\n  overflow: hidden;\n}\n\n.select-wrapper {\n  -webkit-padding-start: var(--padding-start);\n  padding-inline-start: var(--padding-start);\n  -webkit-padding-end: var(--padding-end);\n  padding-inline-end: var(--padding-end);\n  padding-top: var(--padding-top);\n  padding-bottom: var(--padding-bottom);\n  border-radius: var(--border-radius);\n  display: flex;\n  position: relative;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  /**\n   * This allows developers to set the height\n   * on the host of the element but still have\n   * the label take up the full height\n   * of the parent.\n   */\n  min-height: inherit;\n  transition: background-color 15ms linear;\n  background: var(--background);\n  line-height: normal;\n  cursor: inherit;\n  box-sizing: border-box;\n}\n\n.select-wrapper .select-placeholder {\n  /**\n   * When the floating label appears on top of the\n   * select, we need to fade the text out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.select-wrapper-inner {\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  /**\n   * When using a stacked/floating label, the inner wrapper is\n   * stacked vertically under the label container. This line\n   * ensures that the inner wrapper fills all the remaining height\n   * of the component.\n   */\n  flex-grow: 1;\n}\n\n:host(.ion-touched.ion-invalid) {\n  --highlight-color: var(--highlight-color-invalid);\n}\n\n/**\n * The component highlight is only shown\n * on focus, so we can safely set the valid\n * color state when touched/valid. If we\n * set it when .has-focus is present then\n * the highlight color would change\n * from the valid color to the component's\n * color during the transition after the\n * component loses focus.\n */\n:host(.ion-valid) {\n  --highlight-color: var(--highlight-color-valid);\n}\n\n.label-text-wrapper {\n  /**\n   * This causes the label to take up\n   * the entire height of its container\n   * while still keeping the text centered.\n   */\n  display: flex;\n  align-items: center;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   * However, we do not set the max\n   * width to 100% because then\n   * only the label would show and users\n   * would not be able to see what they are typing.\n   */\n  max-width: 200px;\n  transition: color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that double tapping this text\n   * clicks the <label> and focuses the input\n   * when a screen reader is enabled.\n   */\n  pointer-events: none;\n}\n\n/**\n * We need to use two elements instead of\n * one. The .label-text-wrapper is responsible\n * for centering the label text vertically regardless\n * of the input height using flexbox.\n *\n * The .label-text element is responsible for controlling\n * overflow when label-placement=\"fixed\".\n * We want the ellipses to show up when the\n * fixed label overflows, but text-overflow: ellipsis only\n * works on block-level elements. A flex item is\n * considered blockified (https://www.w3.org/TR/css-display-3/#blockify).\n */\n.label-text,\n::slotted([slot=label]) {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden,\n.select-outline-notch-hidden {\n  display: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n  /**\n   * When the floating label appears on top of the\n   * input, we need to fade the input out so that the\n   * label does not overlap with the placeholder.\n   */\n  transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);\n  /**\n   * This ensures that the .select-text gets\n   * truncated with ellipses when the text is\n   * too long for the screen.\n   */\n  overflow: hidden;\n}\n\n:host(.select-justify-space-between) .select-wrapper {\n  justify-content: space-between;\n}\n\n:host(.select-justify-start) .select-wrapper {\n  justify-content: start;\n}\n\n:host(.select-justify-end) .select-wrapper {\n  justify-content: end;\n}\n\n/**\n * Label is on the left of the input in LTR and\n * on the right in RTL.\n */\n:host(.select-label-placement-start) .select-wrapper {\n  flex-direction: row;\n}\n\n:host(.select-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the right of the select in LTR and\n * on the left in RTL.\n */\n:host(.select-label-placement-end) .select-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the select should be on the start\n * when the label sits at the end.\n */\n:host(.select-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the select should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * Label is on the left of the select in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.select-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Stacked: Label sits above the select and is scaled down.\n * Floating: Label sits over the select when the select has no\n * value and is blurred. Label sits above the input and is scaled\n * down when the select is focused or has a value.\n *\n */\n:host(.select-label-placement-stacked) .select-wrapper,\n:host(.select-label-placement-floating) .select-wrapper {\n  flex-direction: column;\n  align-items: start;\n}\n\n/**\n * Ensures that the label animates\n * up and to the left in LTR or\n * up and to the right in RTL.\n */\n:host(.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-label-placement-floating) .label-text-wrapper {\n  max-width: 100%;\n}\n\n:host(.select-ltr.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n/**\n * Ensures the select does not\n * overlap the label.\n * Also ensure that the native wrapper\n * takes up the remaining available height and width.\n */\n:host(.select-label-placement-stacked) .native-wrapper,\n:host(.select-label-placement-floating) .native-wrapper {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 1px;\n  margin-bottom: 0;\n  flex-grow: 1;\n  width: 100%;\n}\n\n/**\n * This makes the label sit over the select\n * when the select is blurred and has no value.\n * The label should not sit over the select if the\n * select has a placeholder.\n * Note: This is different from what ion-input does\n * because the activating the select causes an overlay\n * to appear. This makes it hard to read the placeholder.\n * With ion-input, the input just focuses and the placeholder\n * is still easy to read.\n */\n:host(.select-label-placement-floating) .label-text-wrapper {\n  transform: translateY(100%) scale(1);\n}\n\n/**\n * The placeholder should be hidden when the label\n * is on top of the select. This prevents the label\n * from overlapping any placeholder value.\n *\n * TODO(FW-5592): Remove :not(.label-floating) piece\n */\n:host(.select-label-placement-floating:not(.label-floating)) .native-wrapper .select-placeholder {\n  opacity: 0;\n}\n\n/**\n * We don't use .label-floating here because that would\n * also include the case where the label is floating due\n * to content in the start/end slot. We want the opacity\n * to remain at the default in this case, since the select\n * isn't being actively interacted with.\n *\n * TODO(FW-5592): Change entire selector to:\n * :host(.label-floating.select-label-placement-floating) .native-wrapper .select-placeholder\n */\n:host(.select-expanded.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.ion-focused.select-label-placement-floating) .native-wrapper .select-placeholder,\n:host(.has-value.select-label-placement-floating) .native-wrapper .select-placeholder {\n  opacity: 1;\n}\n\n/**\n * This makes the label sit above the input.\n */\n:host(.label-floating) .label-text-wrapper {\n  transform: translateY(50%) scale(0.75);\n  /**\n   * Label text should not extend\n   * beyond the bounds of the input.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n::slotted([slot=start]), ::slotted([slot=end]) {\n  /**\n   * Prevent the slots from shrinking when the label and/or\n   * selected item text is long enough to fill the rest of\n   * the container.\n   */\n  flex-shrink: 0;\n}\n\n::slotted([slot=start]) {\n  margin-inline-end: 16px;\n  margin-inline-start: 0;\n}\n\n::slotted([slot=end]) {\n  margin-inline-start: 16px;\n  margin-inline-end: 0;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-solid) {\n  --background: var(--ion-color-step-50, #f2f2f2);\n  --border-color: var(--ion-color-step-500, gray);\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n/**\n * The solid fill style has a border\n * at the bottom of the select wrapper.\n * As a result, the border on the \"bottom\n * content\" is not needed.\n */\n:host(.select-fill-solid) .select-wrapper {\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-solid.ion-valid),\n:host(.select-fill-solid.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n:host(.select-fill-solid) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Background and border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-solid:hover) {\n    --background: var(--ion-color-step-100, #e6e6e6);\n    --border-color: var(--ion-color-step-750, #404040);\n  }\n}\n/**\n * Background and border should be\n * much darker on focus.\n */\n:host(.select-fill-solid.select-expanded),\n:host(.select-fill-solid.ion-focused) {\n  --background: var(--ion-color-step-150, #d9d9d9);\n  --border-color: var(--ion-color-step-750, #404040);\n}\n\n:host(.select-fill-solid) .select-wrapper {\n  /**\n   * Only the top left and top right borders should.\n   * have a radius when using a solid fill.\n   */\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n  border-bottom-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\n:host-context([dir=rtl]):host(.select-fill-solid) .select-wrapper, :host-context([dir=rtl]).select-fill-solid .select-wrapper {\n  border-top-left-radius: var(--border-radius);\n  border-top-right-radius: var(--border-radius);\n  border-bottom-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.select-fill-solid:dir(rtl)) .select-wrapper {\n    border-top-left-radius: var(--border-radius);\n    border-top-right-radius: var(--border-radius);\n    border-bottom-right-radius: 0px;\n    border-bottom-left-radius: 0px;\n  }\n}\n\n:host(.label-floating.select-fill-solid) .label-text-wrapper {\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.select-fill-outline) {\n  --border-color: var(--ion-color-step-300, #b3b3b3);\n  --border-radius: 4px;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  min-height: 56px;\n}\n\n:host(.select-fill-outline.select-shape-round) {\n  --border-radius: 28px;\n  --padding-start: 32px;\n  --padding-end: 32px;\n}\n\n/**\n * If the select has a validity state, the\n * border should reflect that as a color.\n */\n:host(.has-focus.select-fill-outline.ion-valid),\n:host(.select-fill-outline.ion-touched.ion-invalid) {\n  --border-color: var(--highlight-color);\n}\n\n/**\n * Border should be\n * slightly darker on hover.\n */\n@media (any-hover: hover) {\n  :host(.select-fill-outline:hover) {\n    --border-color: var(--ion-color-step-750, #404040);\n  }\n}\n/**\n * The border should get thicker\n * and take on component color when\n * the select is focused.\n */\n:host(.select-fill-outline.select-expanded),\n:host(.select-fill-outline.ion-focused) {\n  --border-width: 2px;\n  --border-color: var(--highlight-color);\n}\n\n/**\n * The bottom content should never have\n * a border with the outline style.\n */\n:host(.select-fill-outline) .select-bottom {\n  border-top: none;\n}\n\n/**\n * Outline selects do not have a bottom border.\n * Instead, they have a border that wraps the\n * select + label.\n */\n:host(.select-fill-outline) .select-wrapper {\n  border-bottom: none;\n}\n\n:host(.select-ltr.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-ltr.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: left top;\n}\n\n:host(.select-rtl.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-rtl.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  transform-origin: right top;\n}\n\n:host(.select-fill-outline.select-label-placement-stacked) .label-text-wrapper,\n:host(.select-fill-outline.select-label-placement-floating) .label-text-wrapper {\n  position: absolute;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * The label should appear on top of an outline\n * container that overlaps it so it is always clickable.\n */\n:host(.select-fill-outline) .label-text-wrapper,\n:host(.select-fill-outline) .label-text-wrapper {\n  position: relative;\n  z-index: 1;\n}\n\n/**\n * This makes the label sit above the select.\n */\n:host(.label-floating.select-fill-outline) .label-text-wrapper {\n  transform: translateY(-32%) scale(0.75);\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the select.\n   */\n  max-width: calc((100% - var(--padding-start) - var(--padding-end) - 8px) / 0.75);\n}\n\n/**\n * This ensures that the select does not\n * overlap the floating label while still\n * remaining visually centered.\n */\n:host(.select-fill-outline.select-label-placement-stacked) select,\n:host(.select-fill-outline.select-label-placement-floating) select {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 6px;\n  margin-bottom: 6px;\n}\n\n:host(.select-fill-outline) .select-outline-container {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-end {\n  pointer-events: none;\n}\n\n/**\n * By default, each piece of the container should have\n * a top and bottom border. This gives the appearance\n * of a unified container with a border.\n */\n:host(.select-fill-outline) .select-outline-start,\n:host(.select-fill-outline) .select-outline-notch,\n:host(.select-fill-outline) .select-outline-end {\n  border-top: var(--border-width) var(--border-style) var(--border-color);\n  border-bottom: var(--border-width) var(--border-style) var(--border-color);\n  /**\n   * `border-box` is applied in the global\n   * Ionic stylesheet, but since this is in\n   * the Shadow DOM, these elements do not\n   * receive the global style. The outline\n   * pieces for `ion-input` do because that\n   * component is in the Light DOM.\n   */\n  box-sizing: border-box;\n}\n\n/**\n * Ensures long labels do not cause the notch to flow\n * out of bounds.\n */\n:host(.select-fill-outline) .select-outline-notch {\n  max-width: calc(100% - var(--padding-start) - var(--padding-end));\n}\n\n/**\n * This element ensures that the notch used\n * the size of the scaled text so that the\n * border cut out is the correct width.\n * The text in this element should not\n * be interactive.\n */\n:host(.select-fill-outline) .notch-spacer {\n  /**\n   * We need $select-md-floating-label-padding of padding on the right.\n   * However, we also subtracted $select-md-floating-label-padding from\n   * the width of .select-outline-start\n   * to create space, so we need to take\n   * that into consideration here.\n   */\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  font-size: calc(1em * 0.75);\n  opacity: 0;\n  pointer-events: none;\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  -webkit-border-start: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-start: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-ltr.select-fill-outline) .select-outline-start {\n  border-radius: var(--border-radius) 0px 0px var(--border-radius);\n}\n\n:host(.select-rtl.select-fill-outline) .select-outline-start {\n  border-radius: 0px var(--border-radius) var(--border-radius) 0px;\n}\n\n:host(.select-fill-outline) .select-outline-start {\n  /**\n   * There should be spacing between the translated text\n   * and .select-outline-start. However, we can't add this\n   * spacing onto the notch because it would cause the\n   * label to look like it is not aligned with the\n   * text select. Instead, we subtract a few pixels from\n   * this element.\n   */\n  width: calc(var(--padding-start) - 4px);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  -webkit-border-end: var(--border-width) var(--border-style) var(--border-color);\n  border-inline-end: var(--border-width) var(--border-style) var(--border-color);\n}\n\n:host(.select-ltr.select-fill-outline) .select-outline-end {\n  border-radius: 0px var(--border-radius) var(--border-radius) 0px;\n}\n\n:host(.select-rtl.select-fill-outline) .select-outline-end {\n  border-radius: var(--border-radius) 0px 0px var(--border-radius);\n}\n\n:host(.select-fill-outline) .select-outline-end {\n  /**\n   * The ending outline fragment\n   * should take up the remaining free space.\n   */\n  flex-grow: 1;\n}\n\n/**\n * When the select either has focus or a value,\n * there should be a \"cut out\" at the top for\n * the floating/stacked label. We simulate this \"cut out\"\n * by removing the top border from the notch fragment.\n */\n:host(.label-floating.select-fill-outline) .select-outline-notch {\n  border-top: none;\n}\n\n:host {\n  --border-width: 1px;\n  --border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));\n}\n\n:host(.legacy-select) {\n  --padding-top: 10px;\n  --padding-end: 0;\n  --padding-bottom: 10px;\n  --padding-start: 16px;\n}\n\n.select-icon {\n  width: 0.8125rem;\n  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);\n  color: var(--ion-color-step-500, gray);\n}\n\n/**\n * When the select is focused the label should\n * take on the highlight color. This should\n * only apply to floating or stacked labels.\n */\n:host(.select-label-placement-floating.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-focused) .label-text-wrapper,\n:host(.select-label-placement-stacked.select-expanded) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-focused) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n:host(.has-focus.select-label-placement-floating.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-floating.ion-touched.ion-invalid) .label-text-wrapper,\n:host(.has-focus.select-label-placement-stacked.ion-valid) .label-text-wrapper,\n:host(.select-label-placement-stacked.ion-touched.ion-invalid) .label-text-wrapper {\n  color: var(--highlight-color);\n}\n\n.select-highlight {\n  bottom: -1px;\n  position: absolute;\n  width: 100%;\n  height: 2px;\n  transform: scale(0);\n  transition: transform 200ms;\n  background: var(--highlight-color);\n}\n@supports (inset-inline-start: 0) {\n  .select-highlight {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .select-highlight {\n    left: 0;\n  }\n  :host-context([dir=rtl]) .select-highlight {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  [dir=rtl] .select-highlight {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    .select-highlight:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n\n:host(.select-expanded) .select-highlight,\n:host(.ion-focused) .select-highlight {\n  transform: scale(1);\n}\n\n/**\n * Adjust the highlight up by 1px\n * so it is not cut off by the\n * the item's line (if one is present).\n */\n:host(.in-item) .select-highlight {\n  bottom: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.in-item) .select-highlight {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.in-item) .select-highlight {\n    left: 0;\n  }\n  :host-context([dir=rtl]):host(.in-item) .select-highlight, :host-context([dir=rtl]).in-item .select-highlight {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.in-item:dir(rtl)) .select-highlight {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n\n/**\n * This rotates the chevron icon\n * when the select is activated.\n * This should only happen on MD.\n */\n:host(.select-expanded:not(.legacy-select):not(.has-expanded-icon)) .select-icon {\n  transform: rotate(180deg);\n}\n\n/**\n * When the select is focused the icon should\n * take on the highlight color.\n * The icon should also take on the highlight\n * color if there is a validation state.\n */\n:host(.select-expanded) .select-wrapper .select-icon,\n:host(.has-focus.ion-valid) .select-wrapper .select-icon,\n:host(.ion-touched.ion-invalid) .select-wrapper .select-icon,\n:host(.ion-focused) .select-wrapper .select-icon {\n  color: var(--highlight-color);\n}\n\n/**\n * Adjust the arrow so that it appears in the middle\n * of the item. If the item has fill=\"outline\" then\n * we should adjust the entire ion-select rather than\n * just the outline so the selected value appears centered too.\n */\n:host-context(.item-label-stacked) .select-icon,\n:host-context(.item-label-floating:not(.item-fill-outline)) .select-icon,\n:host-context(.item-label-floating.item-fill-outline) {\n  transform: translate3d(0,  -9px,  0);\n}\n\n:host-context(.item-has-focus):host(:not(.has-expanded-icon)) .select-icon {\n  transform: rotate(180deg);\n}\n\n/**\n * Ensure that the translation we did\n * above is preserved when we rotate the select icon.\n */\n:host-context(.item-has-focus.item-label-stacked):host(:not(.has-expanded-icon)) .select-icon,\n:host-context(.item-has-focus.item-label-floating:not(.item-fill-outline)):host(:not(.has-expanded-icon)) .select-icon {\n  transform: translate3d(0,  -9px,  0) rotate(180deg);\n}\n\n:host(.select-shape-round) {\n  --border-radius: 16px;\n}\n\n:host(.select-label-placement-stacked) .select-wrapper-inner,\n:host(.select-label-placement-floating) .select-wrapper-inner {\n  width: calc(100% - 0.8125rem - 4px);\n}\n\n:host(.select-disabled) {\n  opacity: 0.38;\n}\n\n/**\n * Slotted buttons have a lot of default padding that can\n * cause them to look misaligned from other pieces such\n * as the control's label, especially when using a clear\n * fill. We also make them circular to ensure that non-\n * clear buttons and the focus/hover state on clear ones\n * don't look too crowded.\n */\n::slotted(ion-button[slot=start].button-has-icon-only),\n::slotted(ion-button[slot=end].button-has-icon-only) {\n  --border-radius: 50%;\n  --padding-start: 8px;\n  --padding-end: 8px;\n  --padding-top: 8px;\n  --padding-bottom: 8px;\n  aspect-ratio: 1;\n  min-height: 40px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { compareOptions, createLegacyFormController, createNotchController, isOptionSelected } from \"../../utils/forms/index\";\nimport { findItemLabel, focusVisibleElement, getAriaLabel, renderHiddenInput, inheritAttributes } from \"../../utils/helpers\";\nimport { printIonWarning } from \"../../utils/logging/index\";\nimport { actionSheetController, alertController, popoverController } from \"../../utils/overlays\";\nimport { isRTL } from \"../../utils/rtl/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { watchForOptions } from \"../../utils/watch-options\";\nimport { caretDownSharp, chevronExpand } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot label - The label text to associate with the select. Use the `labelPlacement` property to control where the label is placed relative to the select. Use this if you need to render a label with custom HTML.\n * @slot start - Content to display at the leading edge of the select.\n * @slot end - Content to display at the trailing edge of the select.\n *\n * @part placeholder - The text displayed in the select when there is no value.\n * @part text - The displayed value of the select.\n * @part icon - The select icon container.\n * @part container - The container for the selected text or placeholder.\n * @part label - The label text describing the select.\n */\nexport class Select {\n    constructor() {\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.inheritedAttributes = {};\n        // This flag ensures we log the deprecation warning at most once.\n        this.hasLoggedDeprecationWarning = false;\n        this.onClick = (ev) => {\n            const target = ev.target;\n            const closestSlot = target.closest('[slot=\"start\"], [slot=\"end\"]');\n            if (target === this.el || closestSlot === null) {\n                this.setFocus();\n                this.open(ev);\n            }\n            else {\n                /**\n                 * Prevent clicks to the start/end slots from opening the select.\n                 * We ensure the target isn't this element in case the select is slotted\n                 * in, for example, an item. This would prevent the select from ever\n                 * being opened since the element itself has slot=\"start\"/\"end\".\n                 *\n                 * Clicking a slotted element also causes a click\n                 * on the <label> element (since it wraps the slots).\n                 * Clicking <label> dispatches another click event on\n                 * the native form control that then bubbles up to this\n                 * listener. This additional event targets the host\n                 * element, so the select overlay is opened.\n                 *\n                 * When the slotted elements are clicked (and therefore\n                 * the ancestor <label> element) we want to prevent the label\n                 * from dispatching another click event.\n                 *\n                 * Do not call stopPropagation() because this will cause\n                 * click handlers on the slotted elements to never fire in React.\n                 * When developers do onClick in React a native \"click\" listener\n                 * is added on the root element, not the slotted element. When that\n                 * native click listener fires, React then dispatches the synthetic\n                 * click event on the slotted element. However, if stopPropagation\n                 * is called then the native click event will never bubble up\n                 * to the root element.\n                 */\n                ev.preventDefault();\n            }\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.isExpanded = false;\n        this.cancelText = 'Cancel';\n        this.color = undefined;\n        this.compareWith = undefined;\n        this.disabled = false;\n        this.fill = undefined;\n        this.interface = 'alert';\n        this.interfaceOptions = {};\n        this.justify = 'space-between';\n        this.label = undefined;\n        this.labelPlacement = 'start';\n        this.legacy = undefined;\n        this.multiple = false;\n        this.name = this.inputId;\n        this.okText = 'OK';\n        this.placeholder = undefined;\n        this.selectedText = undefined;\n        this.toggleIcon = undefined;\n        this.expandedIcon = undefined;\n        this.shape = undefined;\n        this.value = undefined;\n    }\n    styleChanged() {\n        this.emitStyle();\n    }\n    setValue(value) {\n        this.value = value;\n        this.ionChange.emit({ value });\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\n    }\n    async connectedCallback() {\n        const { el } = this;\n        this.legacyFormController = createLegacyFormController(el);\n        this.notchController = createNotchController(el, () => this.notchSpacerEl, () => this.labelSlot);\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOverlayOptions();\n            /**\n             * We need to re-render the component\n             * because one of the new ion-select-option\n             * elements may match the value. In this case,\n             * the rendered selected text should be updated.\n             */\n            forceUpdate(this);\n        });\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n        if (this.notchController) {\n            this.notchController.destroy();\n            this.notchController = undefined;\n        }\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        this.isExpanded = true;\n        const overlay = (this.overlay = await this.createOverlay(event));\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.ionDismiss.emit();\n            this.setFocus();\n        });\n        await overlay.present();\n        // focus selected option for popovers\n        if (this.interface === 'popover') {\n            const indexOfSelected = this.childOpts.map((o) => o.value).indexOf(this.value);\n            if (indexOfSelected > -1) {\n                const selectedItem = overlay.querySelector(`.select-interface-option:nth-child(${indexOfSelected + 1})`);\n                if (selectedItem) {\n                    focusVisibleElement(selectedItem);\n                    /**\n                     * Browsers such as Firefox do not\n                     * correctly delegate focus when manually\n                     * focusing an element with delegatesFocus.\n                     * We work around this by manually focusing\n                     * the interactive element.\n                     * ion-radio and ion-checkbox are the only\n                     * elements that ion-select-popover uses, so\n                     * we only need to worry about those two components\n                     * when focusing.\n                     */\n                    const interactiveEl = selectedItem.querySelector('ion-radio, ion-checkbox');\n                    if (interactiveEl) {\n                        interactiveEl.focus();\n                    }\n                }\n            }\n            else {\n                /**\n                 * If no value is set then focus the first enabled option.\n                 */\n                const firstEnabledOption = overlay.querySelector('ion-radio:not(.radio-disabled), ion-checkbox:not(.checkbox-disabled)');\n                if (firstEnabledOption) {\n                    focusVisibleElement(firstEnabledOption.closest('ion-item'));\n                    /**\n                     * Focus the option for the same reason as we do above.\n                     */\n                    firstEnabledOption.focus();\n                }\n            }\n        }\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if (selectInterface === 'action-sheet' && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn(`Select interface cannot be a \"${selectInterface}\" without passing an event. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        const value = this.value;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts, value);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts, value);\n                }\n                break;\n            case 'alert':\n                const inputType = this.multiple ? 'checkbox' : 'radio';\n                overlay.inputs = this.createAlertInputs(childOpts, inputType, value);\n                break;\n        }\n    }\n    createActionSheetButtons(data, selectValue) {\n        const actionSheetButtons = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                role: isOptionSelected(selectValue, value, this.compareWith) ? 'selected' : '',\n                text: option.textContent,\n                cssClass: optClass,\n                handler: () => {\n                    this.setValue(value);\n                },\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            },\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType, selectValue) {\n        const alertInputs = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                type: inputType,\n                cssClass: optClass,\n                label: option.textContent || '',\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n            };\n        });\n        return alertInputs;\n    }\n    createPopoverOptions(data, selectValue) {\n        const popoverOptions = data.map((option) => {\n            const value = getOptionValue(option);\n            // Remove hydrated before copying over classes\n            const copyClasses = Array.from(option.classList)\n                .filter((cls) => cls !== 'hydrated')\n                .join(' ');\n            const optClass = `${OPTION_CLASS} ${copyClasses}`;\n            return {\n                text: option.textContent || '',\n                cssClass: optClass,\n                value,\n                checked: isOptionSelected(selectValue, value, this.compareWith),\n                disabled: option.disabled,\n                handler: (selected) => {\n                    this.setValue(selected);\n                    if (!this.multiple) {\n                        this.close();\n                    }\n                },\n            };\n        });\n        return popoverOptions;\n    }\n    async openPopover(ev) {\n        const { fill, labelPlacement } = this;\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const showBackdrop = mode === 'md' ? false : true;\n        const multiple = this.multiple;\n        const value = this.value;\n        let event = ev;\n        let size = 'auto';\n        if (this.legacyFormController.hasLegacyControl()) {\n            const item = this.el.closest('ion-item');\n            // If the select is inside of an item containing a floating\n            // or stacked label then the popover should take up the\n            // full width of the item when it presents\n            if (item && (item.classList.contains('item-label-floating') || item.classList.contains('item-label-stacked'))) {\n                event = Object.assign(Object.assign({}, ev), { detail: {\n                        ionShadowTarget: item,\n                    } });\n                size = 'cover';\n            }\n        }\n        else {\n            const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n            /**\n             * The popover should take up the full width\n             * when using a fill in MD mode or if the\n             * label is floating/stacked.\n             */\n            if (hasFloatingOrStackedLabel || (mode === 'md' && fill !== undefined)) {\n                size = 'cover';\n                /**\n                 * Otherwise the popover\n                 * should be positioned relative\n                 * to the native element.\n                 */\n            }\n            else {\n                event = Object.assign(Object.assign({}, ev), { detail: {\n                        ionShadowTarget: this.nativeWrapperEl,\n                    } });\n            }\n        }\n        const popoverOpts = Object.assign(Object.assign({ mode,\n            event, alignment: 'center', size,\n            showBackdrop }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                multiple,\n                value,\n                options: this.createPopoverOptions(this.childOpts, value),\n            } });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-select-popover and ion-popover when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-select-popover');\n            document.createElement('ion-popover');\n        }\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts, this.value), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-action-sheet when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-action-sheet');\n        }\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        /**\n         * TODO FW-3194\n         * Remove legacyFormController logic.\n         * Remove label and labelText vars\n         * Pass `this.labelText` instead of `labelText`\n         * when setting the header.\n         */\n        let label;\n        let labelText;\n        if (this.legacyFormController.hasLegacyControl()) {\n            label = this.getLabel();\n            labelText = label ? label.textContent : null;\n        }\n        else {\n            labelText = this.labelText;\n        }\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = this.multiple ? 'checkbox' : 'radio';\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType, this.value), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    },\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.setValue(selectedValues);\n                    },\n                },\n            ], cssClass: [\n                'select-alert',\n                interfaceOptions.cssClass,\n                this.multiple ? 'multiple-select-alert' : 'single-select-alert',\n            ] });\n        /**\n         * Workaround for Stencil to autodefine\n         * ion-alert when\n         * using Custom Elements build.\n         */\n        // eslint-disable-next-line\n        if (false) {\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.createElement('ion-alert');\n        }\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    // TODO FW-3194 Remove this\n    getLabel() {\n        return findItemLabel(this.el);\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    /**\n     * Returns any plaintext associated with\n     * the label (either prop or slot).\n     * Note: This will not return any custom\n     * HTML. Use the `hasLabel` getter if you\n     * want to know if any slotted label content\n     * was passed.\n     */\n    get labelText() {\n        const { label } = this;\n        if (label !== undefined) {\n            return label;\n        }\n        const { labelSlot } = this;\n        if (labelSlot !== null) {\n            return labelSlot.textContent;\n        }\n        return;\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    emitStyle() {\n        const { disabled } = this;\n        const style = {\n            'interactive-disabled': disabled,\n        };\n        if (this.legacyFormController.hasLegacyControl()) {\n            style['interactive'] = true;\n            style['select'] = true;\n            style['select-disabled'] = disabled;\n            style['has-placeholder'] = this.placeholder !== undefined;\n            style['has-value'] = this.hasValue();\n            style['has-focus'] = this.isExpanded;\n            // TODO(FW-3194): remove this\n            style['legacy'] = !!this.legacy;\n        }\n        this.ionStyle.emit(style);\n    }\n    renderLabel() {\n        const { label } = this;\n        return (h(\"div\", { class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': !this.hasLabel,\n            }, part: \"label\" }, label === undefined ? h(\"slot\", { name: \"label\" }) : h(\"div\", { class: \"label-text\" }, label)));\n    }\n    componentDidRender() {\n        var _a;\n        (_a = this.notchController) === null || _a === void 0 ? void 0 : _a.calculateNotchWidth();\n    }\n    /**\n     * Gets any content passed into the `label` slot,\n     * not the <slot> definition.\n     */\n    get labelSlot() {\n        return this.el.querySelector('[slot=\"label\"]');\n    }\n    /**\n     * Returns `true` if label content is provided\n     * either by a prop or a content. If you want\n     * to get the plaintext value of the label use\n     * the `labelText` getter instead.\n     */\n    get hasLabel() {\n        return this.label !== undefined || this.labelSlot !== null;\n    }\n    /**\n     * Renders the border container\n     * when fill=\"outline\".\n     */\n    renderLabelContainer() {\n        const mode = getIonMode(this);\n        const hasOutlineFill = mode === 'md' && this.fill === 'outline';\n        if (hasOutlineFill) {\n            /**\n             * The outline fill has a special outline\n             * that appears around the select and the label.\n             * Certain stacked and floating label placements cause the\n             * label to translate up and create a \"cut out\"\n             * inside of that border by using the notch-spacer element.\n             */\n            return [\n                h(\"div\", { class: \"select-outline-container\" }, h(\"div\", { class: \"select-outline-start\" }), h(\"div\", { class: {\n                        'select-outline-notch': true,\n                        'select-outline-notch-hidden': !this.hasLabel,\n                    } }, h(\"div\", { class: \"notch-spacer\", \"aria-hidden\": \"true\", ref: (el) => (this.notchSpacerEl = el) }, this.label)), h(\"div\", { class: \"select-outline-end\" })),\n                this.renderLabel(),\n            ];\n        }\n        /**\n         * If not using the outline style,\n         * we can render just the label.\n         */\n        return this.renderLabel();\n    }\n    renderSelect() {\n        const { disabled, el, isExpanded, expandedIcon, labelPlacement, justify, placeholder, fill, shape, name, value } = this;\n        const mode = getIonMode(this);\n        const hasFloatingOrStackedLabel = labelPlacement === 'floating' || labelPlacement === 'stacked';\n        const justifyEnabled = !hasFloatingOrStackedLabel;\n        const rtl = isRTL(el) ? 'rtl' : 'ltr';\n        const inItem = hostContext('ion-item', this.el);\n        const shouldRenderHighlight = mode === 'md' && fill !== 'outline' && !inItem;\n        const hasValue = this.hasValue();\n        const hasStartEndSlots = el.querySelector('[slot=\"start\"], [slot=\"end\"]') !== null;\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        /**\n         * If the label is stacked, it should always sit above the select.\n         * For floating labels, the label should move above the select if\n         * the select has a value, is open, or has anything in either\n         * the start or end slot.\n         *\n         * If there is content in the start slot, the label would overlap\n         * it if not forced to float. This is also applied to the end slot\n         * because with the default or solid fills, the select is not\n         * vertically centered in the container, but the label is. This\n         * causes the slots and label to appear vertically offset from each\n         * other when the label isn't floating above the input. This doesn't\n         * apply to the outline fill, but this was not accounted for to keep\n         * things consistent.\n         *\n         * TODO(FW-5592): Remove hasStartEndSlots condition\n         */\n        const labelShouldFloat = labelPlacement === 'stacked' || (labelPlacement === 'floating' && (hasValue || isExpanded || hasStartEndSlots));\n        return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n                [mode]: true,\n                'in-item': inItem,\n                'in-item-color': hostContext('ion-item.ion-color', el),\n                'select-disabled': disabled,\n                'select-expanded': isExpanded,\n                'has-expanded-icon': expandedIcon !== undefined,\n                'has-value': hasValue,\n                'label-floating': labelShouldFloat,\n                'has-placeholder': placeholder !== undefined,\n                'ion-focusable': true,\n                [`select-${rtl}`]: true,\n                [`select-fill-${fill}`]: fill !== undefined,\n                [`select-justify-${justify}`]: justifyEnabled,\n                [`select-shape-${shape}`]: shape !== undefined,\n                [`select-label-placement-${labelPlacement}`]: true,\n            }) }, h(\"label\", { class: \"select-wrapper\", id: \"select-label\" }, this.renderLabelContainer(), h(\"div\", { class: \"select-wrapper-inner\" }, h(\"slot\", { name: \"start\" }), h(\"div\", { class: \"native-wrapper\", ref: (el) => (this.nativeWrapperEl = el), part: \"container\" }, this.renderSelectText(), this.renderListbox()), h(\"slot\", { name: \"end\" }), !hasFloatingOrStackedLabel && this.renderSelectIcon()), hasFloatingOrStackedLabel && this.renderSelectIcon(), shouldRenderHighlight && h(\"div\", { class: \"select-highlight\" }))));\n    }\n    // TODO FW-3194 - Remove this\n    renderLegacySelect() {\n        if (!this.hasLoggedDeprecationWarning) {\n            printIonWarning(`ion-select now requires providing a label with either the \"label\" property or the \"aria-label\" attribute. To migrate, remove any usage of \"ion-label\" and pass the label text to either the \"label\" property or the \"aria-label\" attribute.\n\nExample: <ion-select label=\"Favorite Color\">...</ion-select>\nExample with aria-label: <ion-select aria-label=\"Favorite Color\">...</ion-select>\n\nDevelopers can use the \"legacy\" property to continue using the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.`, this.el);\n            if (this.legacy) {\n                printIonWarning(`ion-select is being used with the \"legacy\" property enabled which will forcibly enable the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.\n    Developers can dismiss this warning by removing their usage of the \"legacy\" property and using the new select syntax.`, this.el);\n            }\n            this.hasLoggedDeprecationWarning = true;\n        }\n        const { disabled, el, inputId, isExpanded, expandedIcon, name, placeholder, value } = this;\n        const mode = getIonMode(this);\n        const { labelText, labelId } = getAriaLabel(el, inputId);\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        const displayValue = this.getText();\n        let selectText = displayValue;\n        if (selectText === '' && placeholder !== undefined) {\n            selectText = placeholder;\n        }\n        // If there is a label then we need to concatenate it with the\n        // current value (or placeholder) and a comma so it separates\n        // nicely when the screen reader announces it, otherwise just\n        // announce the value / placeholder\n        const displayLabel = labelText !== undefined ? (selectText !== '' ? `${selectText}, ${labelText}` : labelText) : selectText;\n        return (h(Host, { onClick: this.onClick, role: \"button\", \"aria-haspopup\": \"listbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-label\": displayLabel, class: {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'in-item-color': hostContext('ion-item.ion-color', el),\n                'select-disabled': disabled,\n                'select-expanded': isExpanded,\n                'has-expanded-icon': expandedIcon !== undefined,\n                'legacy-select': true,\n            } }, this.renderSelectText(), this.renderSelectIcon(), h(\"label\", { id: labelId }, displayLabel), this.renderListbox()));\n    }\n    /**\n     * Renders either the placeholder\n     * or the selected values based on\n     * the state of the select.\n     */\n    renderSelectText() {\n        const { placeholder } = this;\n        const displayValue = this.getText();\n        let addPlaceholderClass = false;\n        let selectText = displayValue;\n        if (selectText === '' && placeholder !== undefined) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass,\n        };\n        const textPart = addPlaceholderClass ? 'placeholder' : 'text';\n        return (h(\"div\", { \"aria-hidden\": \"true\", class: selectTextClasses, part: textPart }, selectText));\n    }\n    /**\n     * Renders the chevron icon\n     * next to the select text.\n     */\n    renderSelectIcon() {\n        const mode = getIonMode(this);\n        const { isExpanded, toggleIcon, expandedIcon } = this;\n        let icon;\n        if (isExpanded && expandedIcon !== undefined) {\n            icon = expandedIcon;\n        }\n        else {\n            const defaultIcon = mode === 'ios' ? chevronExpand : caretDownSharp;\n            icon = toggleIcon !== null && toggleIcon !== void 0 ? toggleIcon : defaultIcon;\n        }\n        return h(\"ion-icon\", { class: \"select-icon\", part: \"icon\", \"aria-hidden\": \"true\", icon: icon });\n    }\n    get ariaLabel() {\n        var _a, _b;\n        const { placeholder, el, inputId, inheritedAttributes } = this;\n        const displayValue = this.getText();\n        const { labelText } = getAriaLabel(el, inputId);\n        const definedLabel = (_b = (_a = this.labelText) !== null && _a !== void 0 ? _a : inheritedAttributes['aria-label']) !== null && _b !== void 0 ? _b : labelText;\n        /**\n         * If developer has specified a placeholder\n         * and there is nothing selected, the selectText\n         * should have the placeholder value.\n         */\n        let renderedLabel = displayValue;\n        if (renderedLabel === '' && placeholder !== undefined) {\n            renderedLabel = placeholder;\n        }\n        /**\n         * If there is a developer-defined label,\n         * then we need to concatenate the developer label\n         * string with the current current value.\n         * The label for the control should be read\n         * before the values of the control.\n         */\n        if (definedLabel !== undefined) {\n            renderedLabel = renderedLabel === '' ? definedLabel : `${definedLabel}, ${renderedLabel}`;\n        }\n        return renderedLabel;\n    }\n    renderListbox() {\n        const { disabled, inputId, isExpanded } = this;\n        return (h(\"button\", { disabled: disabled, id: inputId, \"aria-label\": this.ariaLabel, \"aria-haspopup\": \"dialog\", \"aria-expanded\": `${isExpanded}`, onFocus: this.onFocus, onBlur: this.onBlur, ref: (focusEl) => (this.focusEl = focusEl) }));\n    }\n    render() {\n        const { legacyFormController } = this;\n        return legacyFormController.hasLegacyControl() ? this.renderLegacySelect() : this.renderSelect();\n    }\n    static get is() { return \"ion-select\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select.ios.scss\"],\n            \"md\": [\"select.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select.ios.css\"],\n            \"md\": [\"select.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"cancelText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the cancel button.\"\n                },\n                \"attribute\": \"cancel-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'Cancel'\"\n            },\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\\n\\nThis property is only available when using the modern select syntax.\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"compareWith\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | SelectCompareFn | null\",\n                    \"resolved\": \"((currentValue: any, compareValue: any) => boolean) | null | string | undefined\",\n                    \"references\": {\n                        \"SelectCompareFn\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectCompareFn\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"This property allows developers to specify a custom function or property\\nname for comparing objects when determining the selected option in the\\nion-select. When not specified, the default behavior will use strict\\nequality (===) for comparison.\"\n                },\n                \"attribute\": \"compare-with\",\n                \"reflect\": false\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"fill\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'outline' | 'solid'\",\n                    \"resolved\": \"\\\"outline\\\" | \\\"solid\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The fill for the item. If `\\\"solid\\\"` the item will have a background. If\\n`\\\"outline\\\"` the item will be transparent with a border. Only available in `md` mode.\"\n                },\n                \"attribute\": \"fill\",\n                \"reflect\": false\n            },\n            \"interface\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectInterface\",\n                    \"resolved\": \"\\\"action-sheet\\\" | \\\"alert\\\" | \\\"popover\\\"\",\n                    \"references\": {\n                        \"SelectInterface\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectInterface\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The interface the select should use: `action-sheet`, `popover` or `alert`.\"\n                },\n                \"attribute\": \"interface\",\n                \"reflect\": false,\n                \"defaultValue\": \"'alert'\"\n            },\n            \"interfaceOptions\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Any additional options that the `alert`, `action-sheet` or `popover` interface\\ncan take. See the [ion-alert docs](./alert), the\\n[ion-action-sheet docs](./action-sheet) and the\\n[ion-popover docs](./popover) for the\\ncreate options for each interface.\\n\\nNote: `interfaceOptions` will not override `inputs` or `buttons` with the `alert` interface.\"\n                },\n                \"attribute\": \"interface-options\",\n                \"reflect\": false,\n                \"defaultValue\": \"{}\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and select within a line.\\n`justify` does not apply when the label and select\\nare on different lines when `labelPlacement` is set to\\n`\\\"floating\\\"` or `\\\"stacked\\\"`.\\n`\\\"start\\\"`: The label and select will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and select will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and select will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"label\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The visible label associated with the select.\\n\\nUse this if you need to render a plaintext label.\\n\\nThe `label` property will take priority over the `label` slot if both are used.\"\n                },\n                \"attribute\": \"label\",\n                \"reflect\": false\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'floating' | 'stacked' | 'fixed'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"floating\\\" | \\\"stacked\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the select.\\n`\\\"start\\\"`: The label will appear to the left of the select in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the select in LTR and to the left in RTL.\\n`\\\"floating\\\"`: The label will appear smaller and above the select when the select is focused or it has a value. Otherwise it will appear on top of the select.\\n`\\\"stacked\\\"`: The label will appear smaller and above the select regardless even when the select is blurred or has no value.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\nWhen using `\\\"floating\\\"` or `\\\"stacked\\\"` we recommend initializing the select with either a `value` or a `placeholder`.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"legacy\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the `legacy` property to `true` to forcibly use the legacy form control markup.\\nIonic will only opt components in to the modern form markup when they are\\nusing either the `aria-label` attribute or the `label` property. As a result,\\nthe `legacy` property should only be used as an escape hatch when you want to\\navoid this automatic opt-in behavior.\\nNote that this property will be removed in an upcoming major release\\nof Ionic, and all form components will be opted-in to using the modern form markup.\"\n                },\n                \"attribute\": \"legacy\",\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the select can accept multiple values.\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"okText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display on the ok button.\"\n                },\n                \"attribute\": \"ok-text\",\n                \"reflect\": false,\n                \"defaultValue\": \"'OK'\"\n            },\n            \"placeholder\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display when the select is empty.\"\n                },\n                \"attribute\": \"placeholder\",\n                \"reflect\": false\n            },\n            \"selectedText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text to display instead of the selected option's value.\"\n                },\n                \"attribute\": \"selected-text\",\n                \"reflect\": false\n            },\n            \"toggleIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to use. Defaults to `chevronExpand` for `ios` mode,\\nor `caretDownSharp` for `md` mode.\"\n                },\n                \"attribute\": \"toggle-icon\",\n                \"reflect\": false\n            },\n            \"expandedIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to show when the select is open. If defined, the icon\\nrotation behavior in `md` mode will be disabled. If undefined, `toggleIcon`\\nwill be used for when the select is both open and closed.\"\n                },\n                \"attribute\": \"expanded-icon\",\n                \"reflect\": false\n            },\n            \"shape\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'round'\",\n                    \"resolved\": \"\\\"round\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The shape of the select. If \\\"round\\\" it will have an increased border radius.\"\n                },\n                \"attribute\": \"shape\",\n                \"reflect\": false\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the select.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"isExpanded\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the value has changed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"SelectChangeEventDetail\",\n                    \"resolved\": \"SelectChangeEventDetail<any>\",\n                    \"references\": {\n                        \"SelectChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-interface\",\n                            \"id\": \"src/components/select/select-interface.ts::SelectChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionCancel\",\n                \"name\": \"ionCancel\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the selection is cancelled.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionDismiss\",\n                \"name\": \"ionDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the overlay is dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the select loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(event?: UIEvent) => Promise<any>\",\n                    \"parameters\": [{\n                            \"name\": \"event\",\n                            \"type\": \"UIEvent | undefined\",\n                            \"docs\": \"The user interface event that called the open.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"UIEvent\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::UIEvent\"\n                        },\n                        \"HTMLElement\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::HTMLElement\"\n                        }\n                    },\n                    \"return\": \"Promise<any>\"\n                },\n                \"docs\": {\n                    \"text\": \"Open the select overlay. The overlay is either an alert, action sheet, or popover,\\ndepending on the `interface` property on the `ion-select`.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"event The user interface event that called the open.\"\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"isExpanded\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"placeholder\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"value\",\n                \"methodName\": \"styleChanged\"\n            }];\n    }\n}\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return value === undefined ? el.textContent || '' : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map((v) => textForValue(opts, v, compareWith))\n            .filter((opt) => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find((opt) => {\n        return compareOptions(value, getOptionValue(opt), compareWith);\n    });\n    return selectOpt ? selectOpt.textContent : null;\n};\nlet selectIds = 0;\nconst OPTION_CLASS = 'select-interface-option';\n",":host {\n  display: none;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class SelectOption {\n    constructor() {\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        this.disabled = false;\n        this.value = undefined;\n    }\n    render() {\n        return h(Host, { key: 'abf6e85d60e815f59077910abec922826bf46eb2', role: \"option\", id: this.inputId, class: getIonMode(this) });\n    }\n    static get is() { return \"ion-select-option\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"select-option.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"select-option.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the select option. This property does not apply when `interface=\\\"action-sheet\\\"` as `ion-action-sheet` does not allow for disabled buttons.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text value of the option.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\nlet selectOptionIds = 0;\n"],"mappings":"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","ignoreList":[]}