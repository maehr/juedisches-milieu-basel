{"version":3,"names":["spinnerCss","Spinner","constructor","hostRef","this","color","undefined","duration","name","paused","getName","spinnerName","config","get","mode","getIonMode","render","_a","self","spinner","SPINNERS","dur","svgs","circles","i","push","buildCircle","lines","buildLine","h","Host","key","class","createColorClasses","getBoolean","role","style","elmDuration","animationDuration","index","total","data","fn","viewBox","transform","cx","cy","r","y1","y2"],"sources":["node_modules/@ionic/core/dist/collection/components/spinner/spinner.css?tag=ion-spinner&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/spinner/spinner.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --color: Color of the spinner\n   */\n  display: inline-block;\n  position: relative;\n  width: 28px;\n  height: 28px;\n  color: var(--color);\n  user-select: none;\n}\n\n:host(.ion-color) {\n  color: var(--ion-color-base);\n}\n\nsvg {\n  transform-origin: center;\n  position: absolute;\n  /**\n   * Do not use @include position\n   * as the alignment of the elements with\n   * a spinner should not be RTL aware.\n   */\n  top: 0;\n  /* stylelint-disable-next-line property-disallowed-list */\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0);\n}\n:host-context([dir=rtl]) svg {\n  transform-origin: calc(100% - center);\n}\n\n[dir=rtl] svg {\n  transform-origin: calc(100% - center);\n}\n\n@supports selector(:dir(rtl)) {\n  svg:dir(rtl) {\n    transform-origin: calc(100% - center);\n  }\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line {\n  stroke-width: 7px;\n}\n\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-width: 4px;\n}\n\n:host(.spinner-lines) line,\n:host(.spinner-lines-small) line,\n:host(.spinner-lines-sharp) line,\n:host(.spinner-lines-sharp-small) line {\n  stroke-linecap: round;\n  stroke: currentColor;\n}\n\n:host(.spinner-lines) svg,\n:host(.spinner-lines-small) svg,\n:host(.spinner-lines-sharp) svg,\n:host(.spinner-lines-sharp-small) svg {\n  animation: spinner-fade-out 1s linear infinite;\n}\n\n:host(.spinner-bubbles) svg {\n  animation: spinner-scale-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-circles) svg {\n  animation: spinner-fade-out 1s linear infinite;\n  fill: currentColor;\n}\n\n:host(.spinner-crescent) circle {\n  fill: transparent;\n  stroke-width: 4px;\n  stroke-dasharray: 128px;\n  stroke-dashoffset: 82px;\n  stroke: currentColor;\n}\n\n:host(.spinner-crescent) svg {\n  animation: spinner-rotate 1s linear infinite;\n}\n\n:host(.spinner-dots) circle {\n  stroke-width: 0;\n  fill: currentColor;\n}\n\n:host(.spinner-dots) svg {\n  animation: spinner-dots 1s linear infinite;\n}\n\n:host(.spinner-circular) svg {\n  animation: spinner-circular linear infinite;\n}\n\n:host(.spinner-circular) circle {\n  animation: spinner-circular-inner ease-in-out infinite;\n  stroke: currentColor;\n  stroke-dasharray: 80px, 200px;\n  stroke-dashoffset: 0px;\n  stroke-width: 5.6;\n  fill: none;\n}\n\n:host(.spinner-paused),\n:host(.spinner-paused) svg,\n:host(.spinner-paused) circle {\n  animation-play-state: paused;\n}\n\n@keyframes spinner-fade-out {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes spinner-scale-out {\n  0% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(0, 0);\n  }\n}\n@keyframes spinner-rotate {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-dots {\n  0% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n  50% {\n    transform: scale(0.4, 0.4);\n    opacity: 0.3;\n  }\n  100% {\n    transform: scale(1, 1);\n    opacity: 0.9;\n  }\n}\n@keyframes spinner-circular {\n  100% {\n    transform: rotate(360deg);\n  }\n}\n@keyframes spinner-circular-inner {\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0px;\n  }\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createColorClasses } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { SPINNERS } from \"./spinner-configs\";\nexport class Spinner {\n    constructor() {\n        this.color = undefined;\n        this.duration = undefined;\n        this.name = undefined;\n        this.paused = false;\n    }\n    getName() {\n        const spinnerName = this.name || config.get('spinner');\n        const mode = getIonMode(this);\n        if (spinnerName) {\n            return spinnerName;\n        }\n        return mode === 'ios' ? 'lines' : 'circular';\n    }\n    render() {\n        var _a;\n        const self = this;\n        const mode = getIonMode(self);\n        const spinnerName = self.getName();\n        const spinner = (_a = SPINNERS[spinnerName]) !== null && _a !== void 0 ? _a : SPINNERS['lines'];\n        const duration = typeof self.duration === 'number' && self.duration > 10 ? self.duration : spinner.dur;\n        const svgs = [];\n        if (spinner.circles !== undefined) {\n            for (let i = 0; i < spinner.circles; i++) {\n                svgs.push(buildCircle(spinner, duration, i, spinner.circles));\n            }\n        }\n        else if (spinner.lines !== undefined) {\n            for (let i = 0; i < spinner.lines; i++) {\n                svgs.push(buildLine(spinner, duration, i, spinner.lines));\n            }\n        }\n        return (h(Host, { key: '9e08bf306b28bdd76884d353dcaaf31c1bb591f2', class: createColorClasses(self.color, {\n                [mode]: true,\n                [`spinner-${spinnerName}`]: true,\n                'spinner-paused': self.paused || config.getBoolean('_testing'),\n            }), role: \"progressbar\", style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} }, svgs));\n    }\n    static get is() { return \"ion-spinner\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"spinner.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"spinner.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"duration\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Duration of the spinner animation in milliseconds. The default varies based on the spinner.\"\n                },\n                \"attribute\": \"duration\",\n                \"reflect\": false\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SpinnerTypes\",\n                    \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | undefined\",\n                    \"references\": {\n                        \"SpinnerTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"./spinner-configs\",\n                            \"id\": \"src/components/spinner/spinner-configs.ts::SpinnerTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the SVG spinner to use. If a name is not provided, the platform's default\\nspinner will be used.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false\n            },\n            \"paused\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the spinner's animation will be paused.\"\n                },\n                \"attribute\": \"paused\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n}\nconst buildCircle = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"circle\", { transform: data.transform || 'translate(32,32)', cx: data.cx, cy: data.cy, r: data.r, style: spinner.elmDuration ? { animationDuration: duration + 'ms' } : {} })));\n};\nconst buildLine = (spinner, duration, index, total) => {\n    const data = spinner.fn(duration, index, total);\n    data.style['animation-duration'] = duration + 'ms';\n    return (h(\"svg\", { viewBox: data.viewBox || '0 0 64 64', style: data.style }, h(\"line\", { transform: \"translate(32,32)\", y1: data.y1, y2: data.y2 })));\n};\n"],"mappings":"qKAAA,MAAMA,EAAa,k7E,MCQNC,EAAO,MAChB,WAAAC,CAAAC,G,UACIC,KAAKC,MAAQC,UACbF,KAAKG,SAAWD,UAChBF,KAAKI,KAAOF,UACZF,KAAKK,OAAS,KACjB,CACD,OAAAC,GACI,MAAMC,EAAcP,KAAKI,MAAQI,EAAOC,IAAI,WAC5C,MAAMC,EAAOC,EAAWX,MACxB,GAAIO,EAAa,CACb,OAAOA,C,CAEX,OAAOG,IAAS,MAAQ,QAAU,U,CAEtC,MAAAE,GACI,IAAIC,EACJ,MAAMC,EAAOd,KACb,MAAMU,EAAOC,EAAWG,GACxB,MAAMP,EAAcO,EAAKR,UACzB,MAAMS,GAAWF,EAAKG,EAAST,MAAkB,MAAQM,SAAO,EAASA,EAAKG,EAAS,SACvF,MAAMb,SAAkBW,EAAKX,WAAa,UAAYW,EAAKX,SAAW,GAAKW,EAAKX,SAAWY,EAAQE,IACnG,MAAMC,EAAO,GACb,GAAIH,EAAQI,UAAYjB,UAAW,CAC/B,IAAK,IAAIkB,EAAI,EAAGA,EAAIL,EAAQI,QAASC,IAAK,CACtCF,EAAKG,KAAKC,EAAYP,EAASZ,EAAUiB,EAAGL,EAAQI,S,OAGvD,GAAIJ,EAAQQ,QAAUrB,UAAW,CAClC,IAAK,IAAIkB,EAAI,EAAGA,EAAIL,EAAQQ,MAAOH,IAAK,CACpCF,EAAKG,KAAKG,EAAUT,EAASZ,EAAUiB,EAAGL,EAAQQ,O,EAG1D,OAAQE,EAAEC,EAAM,CAAEC,IAAK,2CAA4CC,MAAOC,EAAmBf,EAAKb,MAAO,CACjGS,CAACA,GAAO,KACR,CAAC,WAAWH,KAAgB,KAC5B,iBAAkBO,EAAKT,QAAUG,EAAOsB,WAAW,cACnDC,KAAM,cAAeC,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmB/B,EAAW,MAAS,IAAMe,E,GAoGjH,MAAMI,EAAc,CAACP,EAASZ,EAAUgC,EAAOC,KAC3C,MAAMC,EAAOtB,EAAQuB,GAAGnC,EAAUgC,EAAOC,GACzCC,EAAKL,MAAM,sBAAwB7B,EAAW,KAC9C,OAAQsB,EAAE,MAAO,CAAEc,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,OAASP,EAAE,SAAU,CAAEe,UAAWH,EAAKG,WAAa,mBAAoBC,GAAIJ,EAAKI,GAAIC,GAAIL,EAAKK,GAAIC,EAAGN,EAAKM,EAAGX,MAAOjB,EAAQkB,YAAc,CAAEC,kBAAmB/B,EAAW,MAAS,KAAM,EAElQ,MAAMqB,EAAY,CAACT,EAASZ,EAAUgC,EAAOC,KACzC,MAAMC,EAAOtB,EAAQuB,GAAGnC,EAAUgC,EAAOC,GACzCC,EAAKL,MAAM,sBAAwB7B,EAAW,KAC9C,OAAQsB,EAAE,MAAO,CAAEc,QAASF,EAAKE,SAAW,YAAaP,MAAOK,EAAKL,OAASP,EAAE,OAAQ,CAAEe,UAAW,mBAAoBI,GAAIP,EAAKO,GAAIC,GAAIR,EAAKQ,KAAM,E","ignoreList":[]}