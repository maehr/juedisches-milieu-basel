{"version":3,"file":"ion-refresher-content.entry.esm.js","sources":["node_modules/@ionic/core/dist/collection/components/refresher-content/refresher-content.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { ENABLE_HTML_CONTENT_DEFAULT } from \"../../utils/config\";\nimport { sanitizeDOMString } from \"../../utils/sanitization/index\";\nimport { arrowDown, caretBackSharp } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { supportsRubberBandScrolling } from \"../refresher/refresher.utils\";\nimport { SPINNERS } from \"../spinner/spinner-configs\";\nexport class RefresherContent {\n    constructor() {\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.pullingIcon = undefined;\n        this.pullingText = undefined;\n        this.refreshingSpinner = undefined;\n        this.refreshingText = undefined;\n    }\n    componentWillLoad() {\n        if (this.pullingIcon === undefined) {\n            /**\n             * The native iOS refresher uses a spinner instead of\n             * an icon, so we need to see if this device supports\n             * the native iOS refresher.\n             */\n            const hasRubberBandScrolling = supportsRubberBandScrolling();\n            const mode = getIonMode(this);\n            const overflowRefresher = hasRubberBandScrolling ? 'lines' : arrowDown;\n            this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && hasRubberBandScrolling ? config.get('spinner', overflowRefresher) : 'circular');\n        }\n        if (this.refreshingSpinner === undefined) {\n            const mode = getIonMode(this);\n            this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n        }\n    }\n    renderPullingText() {\n        const { customHTMLEnabled, pullingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(pullingText) });\n        }\n        return h(\"div\", { class: \"refresher-pulling-text\" }, pullingText);\n    }\n    renderRefreshingText() {\n        const { customHTMLEnabled, refreshingText } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(refreshingText) });\n        }\n        return h(\"div\", { class: \"refresher-refreshing-text\" }, refreshingText);\n    }\n    render() {\n        const pullingIcon = this.pullingIcon;\n        const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n        const mode = getIonMode(this);\n        return (h(Host, { key: 'cf3caa51c4aba8a95622f6d32cafa90b683b9d6e', class: mode }, h(\"div\", { key: '5ad70801104bbea873d3525206660c52e4447903', class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner && (h(\"div\", { key: '0f95df169fd367528bfaa5d9ccf6690a613609c4', class: \"refresher-pulling-icon\" }, h(\"div\", { key: '4b8f0465a19f017751b207807c32e1fe00fda433', class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { key: '77e60179d76f0d17f8f2dc3518f97a2a924418e6', name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' && (h(\"div\", { key: 'f78f63f08f071bead1bfe655bae6394f8a219d91', class: \"arrow-container\" }, h(\"ion-icon\", { key: '4d833d134d2b221cae2dfb0611d4029f2d664db5', icon: caretBackSharp, \"aria-hidden\": \"true\" })))))), this.pullingIcon && !hasSpinner && (h(\"div\", { key: 'e6db19d7fa324363d2a7c3c046510f4c8461f7e6', class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { key: '66c2ef1a53c5809f49891de515da5f55d9bf8dcc', icon: this.pullingIcon, lazy: false, \"aria-hidden\": \"true\" }))), this.pullingText !== undefined && this.renderPullingText()), h(\"div\", { key: '80c413e21d362a5bb0419fcd13092453b3445cee', class: \"refresher-refreshing\" }, this.refreshingSpinner && (h(\"div\", { key: '0d5511f9644de26332a1a9ed39b160691fab74d9', class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { key: '54e4a96b081c7b453a98e00cceea7c086268a450', name: this.refreshingSpinner }))), this.refreshingText !== undefined && this.renderRefreshingText())));\n    }\n    static get is() { return \"ion-refresher-content\"; }\n    static get properties() {\n        return {\n            \"pullingIcon\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"SpinnerTypes | string | null\",\n                    \"resolved\": \"null | string | undefined\",\n                    \"references\": {\n                        \"SpinnerTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"../spinner/spinner-configs\",\n                            \"id\": \"src/components/spinner/spinner-configs.ts::SpinnerTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"A static icon or a spinner to display when you begin to pull down.\\nA spinner name can be provided to gradually show tick marks\\nwhen pulling down on iOS devices.\"\n                },\n                \"attribute\": \"pulling-icon\",\n                \"reflect\": false\n            },\n            \"pullingText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | IonicSafeString\",\n                    \"resolved\": \"IonicSafeString | string | undefined\",\n                    \"references\": {\n                        \"IonicSafeString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/sanitization\",\n                            \"id\": \"src/utils/sanitization/index.ts::IonicSafeString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text you want to display when you begin to pull down.\\n`pullingText` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\\n\\nContent is parsed as plaintext by default.\\n`innerHTMLTemplatesEnabled` must be set to `true` in the Ionic config\\nbefore custom HTML can be used.\"\n                },\n                \"attribute\": \"pulling-text\",\n                \"reflect\": false\n            },\n            \"refreshingSpinner\": {\n                \"type\": \"string\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"SpinnerTypes | null\",\n                    \"resolved\": \"\\\"bubbles\\\" | \\\"circles\\\" | \\\"circular\\\" | \\\"crescent\\\" | \\\"dots\\\" | \\\"lines\\\" | \\\"lines-sharp\\\" | \\\"lines-sharp-small\\\" | \\\"lines-small\\\" | null | undefined\",\n                    \"references\": {\n                        \"SpinnerTypes\": {\n                            \"location\": \"import\",\n                            \"path\": \"../spinner/spinner-configs\",\n                            \"id\": \"src/components/spinner/spinner-configs.ts::SpinnerTypes\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An animated SVG spinner that shows when refreshing begins\"\n                },\n                \"attribute\": \"refreshing-spinner\",\n                \"reflect\": false\n            },\n            \"refreshingText\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | IonicSafeString\",\n                    \"resolved\": \"IonicSafeString | string | undefined\",\n                    \"references\": {\n                        \"IonicSafeString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/sanitization\",\n                            \"id\": \"src/utils/sanitization/index.ts::IonicSafeString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text you want to display when performing a refresh.\\n`refreshingText` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\\n\\nContent is parsed as plaintext by default.\\n`innerHTMLTemplatesEnabled` must be set to `true` in the Ionic config\\nbefore custom HTML can be used.\"\n                },\n                \"attribute\": \"refreshing-text\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}