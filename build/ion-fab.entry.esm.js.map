{"version":3,"file":"ion-fab.entry.esm.js","sources":["node_modules/@ionic/core/dist/collection/components/fab/fab.css?tag=ion-fab&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/fab/fab.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  position: absolute;\n  width: fit-content;\n  height: fit-content;\n  z-index: 999;\n}\n\n:host(.fab-horizontal-center) {\n  left: 0px;\n  right: 0px;\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n}\n\n:host(.fab-horizontal-start) {\n  /* stylelint-disable */\n  left: calc(10px + var(--ion-safe-area-left, 0px));\n  /* stylelint-enable */\n}\n:host-context([dir=rtl]):host(.fab-horizontal-start), :host-context([dir=rtl]).fab-horizontal-start {\n  right: calc(10px + var(--ion-safe-area-right, 0px));\n  left: unset;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.fab-horizontal-start:dir(rtl)) {\n    right: calc(10px + var(--ion-safe-area-right, 0px));\n    left: unset;\n  }\n}\n\n:host(.fab-horizontal-end) {\n  /* stylelint-disable */\n  right: calc(10px + var(--ion-safe-area-right, 0px));\n  /* stylelint-enable */\n}\n:host-context([dir=rtl]):host(.fab-horizontal-end), :host-context([dir=rtl]).fab-horizontal-end {\n  left: calc(10px + var(--ion-safe-area-left, 0px));\n  right: unset;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.fab-horizontal-end:dir(rtl)) {\n    left: calc(10px + var(--ion-safe-area-left, 0px));\n    right: unset;\n  }\n}\n\n:host(.fab-vertical-top) {\n  top: 10px;\n}\n\n/**\n * Reset the top value since edge\n * styles use margin-top.\n */\n:host(.fab-vertical-top.fab-edge) {\n  top: 0;\n}\n\n/**\n * We need to adjust the parent FAB button up by half\n * its height so that half of it sits on the header. As a result,\n * we target the slotted ion-fab-button instead of targeting the host.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button) {\n  margin-top: -50%;\n}\n\n/**\n * The small FAB button adds top and bottom margin. We need to account for\n * that margin when we adjust the FAB button for edge styles since we\n * are overriding the margin-top value below.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-button.fab-button-small) {\n  margin-top: calc((-100% + 16px) / 2);\n}\n\n/**\n * Since we are adjusting the FAB button we also need\n * to adjust the sibling ion-fab-list otherwise there will be\n * a gap between the parent FAB button and the associated list.\n */\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {\n  margin-top: -50%;\n}\n\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),\n:host(.fab-vertical-top.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {\n  margin-top: calc(50% + 10px);\n}\n\n:host(.fab-vertical-bottom) {\n  bottom: 10px;\n}\n\n/**\n * Reset the bottom value since edge\n * styles use margin-bottom.\n */\n:host(.fab-vertical-bottom.fab-edge) {\n  bottom: 0;\n}\n\n/**\n * We need to adjust the parent FAB button down by half\n * its height so that half of it sits on the footer. As a result,\n * we target the slotted ion-fab-button instead of targeting the host.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button) {\n  margin-bottom: -50%;\n}\n\n/**\n * The small FAB button adds top and bottom margin. We need to account for\n * that margin when we adjust the FAB button for edge styles since we\n * are overriding the margin-bottom value below.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-button.fab-button-small) {\n  margin-bottom: calc((-100% + 16px) / 2);\n}\n\n/**\n * Since we are adjusting the FAB button we also need\n * to adjust the sibling ion-fab-list otherwise there will be\n * a gap between the parent FAB button and the associated list.\n */\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-start),\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-end) {\n  margin-bottom: -50%;\n}\n\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-top),\n:host(.fab-vertical-bottom.fab-edge) ::slotted(ion-fab-list.fab-list-side-bottom) {\n  margin-bottom: calc(50% + 10px);\n}\n\n:host(.fab-vertical-center) {\n  top: 0px;\n  bottom: 0px;\n  margin-top: auto;\n  margin-bottom: auto;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { getIonMode } from \"../../global/ionic-global\";\nexport class Fab {\n    constructor() {\n        this.horizontal = undefined;\n        this.vertical = undefined;\n        this.edge = false;\n        this.activated = false;\n    }\n    activatedChanged() {\n        const activated = this.activated;\n        const fab = this.getFab();\n        if (fab) {\n            fab.activated = activated;\n        }\n        Array.from(this.el.querySelectorAll('ion-fab-list')).forEach((list) => {\n            list.activated = activated;\n        });\n    }\n    componentDidLoad() {\n        if (this.activated) {\n            this.activatedChanged();\n        }\n    }\n    /**\n     * Close an active FAB list container.\n     */\n    async close() {\n        this.activated = false;\n    }\n    getFab() {\n        return this.el.querySelector('ion-fab-button');\n    }\n    /**\n     * Opens/Closes the FAB list container.\n     * @internal\n     */\n    async toggle() {\n        const hasList = !!this.el.querySelector('ion-fab-list');\n        if (hasList) {\n            this.activated = !this.activated;\n        }\n    }\n    render() {\n        const { horizontal, vertical, edge } = this;\n        const mode = getIonMode(this);\n        return (h(Host, { key: '71df1068c3a2739a69d3571c2fe9bdf401a252cb', class: {\n                [mode]: true,\n                [`fab-horizontal-${horizontal}`]: horizontal !== undefined,\n                [`fab-vertical-${vertical}`]: vertical !== undefined,\n                'fab-edge': edge,\n            } }, h(\"slot\", { key: 'c3afd4a009d355d664f8c04057acf86196bda844' })));\n    }\n    static get is() { return \"ion-fab\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"fab.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"fab.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"horizontal\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"end\\\" | \\\"start\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to align the fab horizontally in the viewport.\"\n                },\n                \"attribute\": \"horizontal\",\n                \"reflect\": false\n            },\n            \"vertical\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'top' | 'bottom' | 'center'\",\n                    \"resolved\": \"\\\"bottom\\\" | \\\"center\\\" | \\\"top\\\" | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to align the fab vertically in the viewport.\"\n                },\n                \"attribute\": \"vertical\",\n                \"reflect\": false\n            },\n            \"edge\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the fab will display on the edge of the header if\\n`vertical` is `\\\"top\\\"`, and on the edge of the footer if\\nit is `\\\"bottom\\\"`. Should be used with a `fixed` slot.\"\n                },\n                \"attribute\": \"edge\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"activated\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, both the `ion-fab-button` and all `ion-fab-list` inside `ion-fab` will become active.\\nThat means `ion-fab-button` will become a `close` icon and `ion-fab-list` will become visible.\"\n                },\n                \"attribute\": \"activated\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get methods() {\n        return {\n            \"close\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Close an active FAB list container.\",\n                    \"tags\": []\n                }\n            },\n            \"toggle\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Opens/Closes the FAB list container.\",\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }]\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"activated\",\n                \"methodName\": \"activatedChanged\"\n            }];\n    }\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,MAAM,GAAG,wwEAAwwE;;MCK1wE,GAAG,GAAA,MAAA;AACZ,IAAA,WAAA,CAAA,OAAA,EAAA;;AACI,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;AAC3B,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS;AACzB,QAAA,IAAI,CAAC,IAAI,GAAG,KAAK;AACjB,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;AACzB;IACD,gBAAgB,GAAA;AACZ,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS;AAChC,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;QACzB,IAAI,GAAG,EAAE;AACL,YAAA,GAAG,CAAC,SAAS,GAAG,SAAS;;AAE7B,QAAA,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,KAAI;AAClE,YAAA,IAAI,CAAC,SAAS,GAAG,SAAS;AAC9B,SAAC,CAAC;;IAEN,gBAAgB,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,gBAAgB,EAAE;;;AAG/B;;AAEG;AACH,IAAA,MAAM,KAAK,GAAA;AACP,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;IAE1B,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,gBAAgB,CAAC;;AAElD;;;AAGG;AACH,IAAA,MAAM,MAAM,GAAA;AACR,QAAA,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC;QACvD,IAAI,OAAO,EAAE;AACT,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS;;;IAGxC,MAAM,GAAA;QACF,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;AAC3C,QAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC7B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE;gBAClE,CAAC,IAAI,GAAG,IAAI;AACZ,gBAAA,CAAC,kBAAkB,UAAU,CAAA,CAAE,GAAG,UAAU,KAAK,SAAS;AAC1D,gBAAA,CAAC,gBAAgB,QAAQ,CAAA,CAAE,GAAG,QAAQ,KAAK,SAAS;AACpD,gBAAA,UAAU,EAAE,IAAI;AACnB,aAAA,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,CAAC,CAAC;;;;;;;;;;;","x_google_ignoreList":[0,1]}