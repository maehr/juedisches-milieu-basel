{"version":3,"file":"geov-entity.entry.esm.js","sources":["node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity/geov-entity.css?tag=geov-entity","node_modules/@geovistory/design-system-web/dist/collection/components/geov-entity/geov-entity.js"],"sourcesContent":[":host {\n  display: block;\n}\n\n.container {\n  background: var(--ion-color-tertiary);\n  color: var(--ion-color-tertiary-contrast);\n}\n\n.header {\n  padding: var(--ion-padding);\n  padding-top: 2.5rem;\n  background: var(--ion-color-tertiary-shade);\n}\n\n.header h1 {\n  margin-top: 0;\n}\n\n.header geov-entity-class-label,\n.header geov-entity-definition {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.metadata {\n  padding: 0.5rem 0 0.5rem 0;\n  font-size: .875rem;\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.4);\n}\n\n.metadata a {\n  color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.4);\n  text-decoration: var(--gv-entity-link-decoration);\n}\n\n.metadata a:hover {\n  text-decoration: underline;\n}\n\n.section {\n  display: block;\n  color: var(--ion-color-tertiary-contrast);\n  padding: 24px 0;\n}\n\n.section:nth-child(even) {\n  background: var(--ion-color-tertiary-shade);\n}\n\n.section:nth-child(odd) {\n  background: var(--ion-color-tertiary);\n}\n\n.columns-1 {\n  --column-count: 1;\n  --column-gap: 0px;\n}\n\n.columns-2 {\n  --column-count: 1;\n  --column-gap: 0px;\n}\n\n.columns-3 {\n  --column-count: 1;\n  --column-gap: 0px;\n}\n\n/* lg and up */\n@media screen and (min-width: 992px) {\n\n  .columns-3,\n  .columns-2 {\n    --column-count: 2;\n  }\n}\n\n/* xl and up */\n@media screen and (min-width: 1200px) {\n  .columns-3 {\n    --column-count: 3;\n  }\n}\n\n.supertitle geov-entity-class-label {\n  font-size: 1.7rem;\n  margin-block-start: 0.9em;\n  margin-block-end: 0.9em;\n  line-height: 1.8;\n}\n\na.entityLink {\n  color: var(--gv-entity-link-color, #000);\n  text-decoration: var(--gv-entity-link-decoration);\n}\n\na.entityLink:hover {\n  text-decoration: underline;\n}\n\ngeov-entity geov-entity-properties {\n  display: block;\n  padding-top: 3rem;\n}\n","import { h, Host } from \"@stencil/core\";\nimport { getTimeSpanUri } from \"../../lib/getTimeSpanUri\";\nimport { regexReplace } from \"../../lib/regexReplace\";\n/**\n * This component displays the data of a geovistory entity.\n * It is used to generate entity pages on geovistory.org.\n */\nexport class GeovEntity {\n  constructor() {\n    this.predicatesBasic = ['http://www.w3.org/2000/01/rdf-schema#label', 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'];\n    this.predicatesTime = ['https://ontome.net/ontology/p4'];\n    this.excluded = ['https://ontome.net/ontology/p1943', 'https://ontome.net/ontology/p1762'];\n    this.sparqlEndpoint = undefined;\n    this.entityId = undefined;\n    this.projectId = undefined;\n    this.language = 'en';\n    this.fetchBeforeRender = true;\n    this.uriRegex = undefined;\n    this.uriReplace = undefined;\n    this.ssrIdPrefix = '';\n  }\n  render() {\n    const pageLink = this.getPageLink();\n    const uri = this.getURI();\n    return (h(Host, null, h(\"div\", { class: \"container\" }, h(\"div\", { class: \"header\" }, h(\"ion-grid\", { fixed: true }, h(\"div\", { class: \"supertitle\" }, h(\"geov-entity-class-label\", { entityId: this.entityId, sparqlEndpoint: this.sparqlEndpoint, _ssrId: `${this.ssrIdPrefix}class-label`, withIcon: true }), h(\"geov-time-span\", { entityUri: getTimeSpanUri('http://geovistory.org/resource/' + this.entityId), sparqlEndpoint: this.sparqlEndpoint })), h(\"h1\", { class: \"unrestricted-width\" }, h(\"geov-entity-label\", { entityId: this.entityId, sparqlEndpoint: this.sparqlEndpoint, _ssrId: `${this.ssrIdPrefix}entity-label` })), h(\"div\", null, h(\"geov-entity-definition\", { entityId: this.entityId, sparqlEndpoint: this.sparqlEndpoint, _ssrId: `${this.ssrIdPrefix}definition` })), h(\"div\", { class: \"metadata\" }, h(\"div\", null, \"URI:\", ' ', h(\"a\", { href: uri, target: \"_blank\" }, uri)), this.projectId && (h(\"div\", null, \"Link:\", ' ', h(\"a\", { href: pageLink, target: \"_blank\" }, pageLink)))))), h(\"slot\", { name: \"body-start\" }), h(\"geov-entity-properties\", { onDataFetched: this.removeIfEmpty(), predicateExclude: [...this.predicatesBasic, ...this.excluded].join(','), fixedGrid: false, class: \"columns-1\", sparqlEndpoint: this.sparqlEndpoint, entityUri: 'http://geovistory.org/resource/' + this.entityId, language: 'en', fetchBeforeRender: this.fetchBeforeRender, uriRegex: this.uriRegex, uriReplace: this.uriReplace }), h(\"div\", { class: \"section columns-1 ion-text-center\" }, h(\"geov-entity-download-rdf\", { entityId: this.entityId, projectId: this.projectId, color: \"primary\", fill: \"outline\", buttonLabel: \"Download RDF\" })), h(\"slot\", { name: \"body-end\" }))));\n  }\n  /**\n   * Generates the URL of this page by applying the given regex.\n   *\n   * @returns the url to this page\n   */\n  getPageLink() {\n    return regexReplace('http://geovistory.org/resource/' + this.entityId, this.uriRegex, this.uriReplace);\n  }\n  /**\n   * Generates the URI of this resource. This depends on the regex, which allows to override\n   * the real uri to make working links in local, dev or staging environments.\n   * In contrast to getURL it omits the 'p' query parameter.\n   *\n   * @returns the url to this page\n   */\n  getURI() {\n    return this.getPageLink().replace('?p=' + this.projectId, '');\n  }\n  /**\n   * removes the element from dom, if the fetched data is empty\n   * @returns\n   */\n  removeIfEmpty() {\n    return event => {\n      if (event.detail.propsWithCount.length === 0) {\n        event.target.remove();\n      }\n    };\n  }\n  static get is() { return \"geov-entity\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"geov-entity.css\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"geov-entity.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"sparqlEndpoint\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"sparqlEndpoint\\nURL of the sparql endpoint\"\n        },\n        \"attribute\": \"sparql-endpoint\",\n        \"reflect\": false\n      },\n      \"entityId\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"entityId\\nID number of entity, e.g. 'i315800'\"\n        },\n        \"attribute\": \"entity-id\",\n        \"reflect\": false\n      },\n      \"projectId\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number | undefined\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"projectId\\nID number of project, e.g. '123123'\"\n        },\n        \"attribute\": \"project-id\",\n        \"reflect\": false\n      },\n      \"language\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"language\\nprints the label with the language or english, if not found, e.g. 'en'\"\n        },\n        \"attribute\": \"language\",\n        \"reflect\": false,\n        \"defaultValue\": \"'en'\"\n      },\n      \"fetchBeforeRender\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"fetch-before-render\",\n        \"reflect\": false,\n        \"defaultValue\": \"true\"\n      },\n      \"uriRegex\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriRegex\\nOptional regex with capturing groups to transform\\nthe uri into the desired url. To use together\\nwith uriReplace.\"\n        },\n        \"attribute\": \"uri-regex\",\n        \"reflect\": false\n      },\n      \"uriReplace\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"uriReplace\\nString used to replace the uriRegex.\\n\\nExample (pseudo code):\\nconst uriRegex = (http:\\\\/\\\\/geovistory.org\\\\/)(.*)\\nconst uriReplace = \\\"http://dev.geovistory.org/resource/$2?p=123\\\"\\nhttp://geovistory.org/resource/i54321 => http://dev.geovistory.org/resource/54321?p=123\"\n        },\n        \"attribute\": \"uri-replace\",\n        \"reflect\": false\n      },\n      \"ssrIdPrefix\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"\"\n        },\n        \"attribute\": \"ssr-id-prefix\",\n        \"reflect\": false,\n        \"defaultValue\": \"''\"\n      }\n    };\n  }\n}\n//# sourceMappingURL=geov-entity.js.map\n"],"names":[],"mappings":";;;;AAAA,MAAM,aAAa,GAAG,s4CAAs4C;;MCO/4C,UAAU,GAAA,MAAA;AACrB,IAAA,WAAA,CAAA,OAAA,EAAA;;QACE,IAAI,CAAC,eAAe,GAAG,CAAC,4CAA4C,EAAE,iDAAiD,CAAC;AACxH,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC,gCAAgC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,CAAC,mCAAmC,EAAE,mCAAmC,CAAC;AAC1F,QAAA,IAAI,CAAC,cAAc,GAAG,SAAS;AAC/B,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS;AACzB,QAAA,IAAI,CAAC,SAAS,GAAG,SAAS;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI;AACpB,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,SAAS;AACzB,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS;AAC3B,QAAA,IAAI,CAAC,WAAW,GAAG,EAAE;AACtB;IACD,MAAM,GAAA;AACJ,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE;AACnC,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE;QACzB,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,UAAU,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC,yBAAyB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,CAAG,EAAA,IAAI,CAAC,WAAW,CAAa,WAAA,CAAA,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,gBAAgB,EAAE,EAAE,SAAS,EAAE,cAAc,CAAC,iCAAiC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,oBAAoB,EAAE,EAAE,CAAC,CAAC,mBAAmB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAC,WAAW,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,wBAAwB,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAC,WAAW,CAAA,UAAA,CAAY,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,KAAK,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,wBAAwB,EAAE,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,gBAAgB,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,SAAS,EAAE,iCAAiC,GAAG,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,CAAC,iBAAiB,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,mCAAmC,EAAE,EAAE,CAAC,CAAC,0BAA0B,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;AAE5nD;;;;AAIG;IACH,WAAW,GAAA;AACT,QAAA,OAAO,YAAY,CAAC,iCAAiC,GAAG,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;;AAExG;;;;;;AAMG;IACH,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,EAAE,CAAC;;AAE/D;;;AAGG;IACH,aAAa,GAAA;QACX,OAAO,KAAK,IAAG;YACb,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5C,gBAAA,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;;AAEzB,SAAC;;;;;;;","x_google_ignoreList":[0,1]}