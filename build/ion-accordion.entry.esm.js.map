{"version":3,"file":"ion-accordion.entry.esm.js","sources":["node_modules/@ionic/core/dist/collection/components/accordion/accordion.ios.css?tag=ion-accordion&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/accordion/accordion.md.css?tag=ion-accordion&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/accordion/accordion.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  display: block;\n  position: relative;\n  width: 100%;\n  background-color: var(--ion-background-color, #ffffff);\n  overflow: hidden;\n  /**\n   * This is required to force WebKit\n   * to create a new stacking context\n   * otherwise the border radius is\n   * temporarily lost when hovering over\n   * the ion-item or expanding/collapsing\n   * the accordion.\n   */\n  z-index: 0;\n}\n\n:host(.accordion-expanding) ::slotted(ion-item[slot=header]),\n:host(.accordion-expanded) ::slotted(ion-item[slot=header]) {\n  --border-width: 0px;\n}\n\n:host(.accordion-animated) {\n  transition: all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n:host(.accordion-animated) #content {\n  transition: max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n#content {\n  overflow: hidden;\n  will-change: max-height;\n}\n\n:host(.accordion-collapsing) #content {\n  /* stylelint-disable-next-line declaration-no-important */\n  max-height: 0 !important;\n}\n\n:host(.accordion-collapsed) #content {\n  display: none;\n}\n\n:host(.accordion-expanding) #content {\n  max-height: 0;\n}\n\n/**\n * Prevent margins of content-wrapper\n * from collapsing, breaking the animation.\n */\n:host(.accordion-expanding) #content-wrapper {\n  overflow: auto;\n}\n\n:host(.accordion-disabled) #header,\n:host(.accordion-readonly) #header,\n:host(.accordion-disabled) #content,\n:host(.accordion-readonly) #content {\n  pointer-events: none;\n}\n\n/**\n * We do not set the opacity on the\n * host otherwise you would see the\n * box-shadow behind it.\n */\n:host(.accordion-disabled) #header,\n:host(.accordion-disabled) #content {\n  opacity: 0.4;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :host,\n  #content {\n    /* stylelint-disable declaration-no-important */\n    transition: none !important;\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host(.accordion-next) ::slotted(ion-item[slot=header]) {\n  --border-width: 0.55px 0px 0.55px 0px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  display: block;\n  position: relative;\n  width: 100%;\n  background-color: var(--ion-background-color, #ffffff);\n  overflow: hidden;\n  /**\n   * This is required to force WebKit\n   * to create a new stacking context\n   * otherwise the border radius is\n   * temporarily lost when hovering over\n   * the ion-item or expanding/collapsing\n   * the accordion.\n   */\n  z-index: 0;\n}\n\n:host(.accordion-expanding) ::slotted(ion-item[slot=header]),\n:host(.accordion-expanded) ::slotted(ion-item[slot=header]) {\n  --border-width: 0px;\n}\n\n:host(.accordion-animated) {\n  transition: all 300ms cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n:host(.accordion-animated) #content {\n  transition: max-height 300ms cubic-bezier(0.25, 0.8, 0.5, 1);\n}\n\n#content {\n  overflow: hidden;\n  will-change: max-height;\n}\n\n:host(.accordion-collapsing) #content {\n  /* stylelint-disable-next-line declaration-no-important */\n  max-height: 0 !important;\n}\n\n:host(.accordion-collapsed) #content {\n  display: none;\n}\n\n:host(.accordion-expanding) #content {\n  max-height: 0;\n}\n\n/**\n * Prevent margins of content-wrapper\n * from collapsing, breaking the animation.\n */\n:host(.accordion-expanding) #content-wrapper {\n  overflow: auto;\n}\n\n:host(.accordion-disabled) #header,\n:host(.accordion-readonly) #header,\n:host(.accordion-disabled) #content,\n:host(.accordion-readonly) #content {\n  pointer-events: none;\n}\n\n/**\n * We do not set the opacity on the\n * host otherwise you would see the\n * box-shadow behind it.\n */\n:host(.accordion-disabled) #header,\n:host(.accordion-disabled) #content {\n  opacity: 0.4;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :host,\n  #content {\n    /* stylelint-disable declaration-no-important */\n    transition: none !important;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { addEventListener, getElementRoot, raf, removeEventListener, transitionEndAsync } from \"../../utils/helpers\";\nimport { chevronDown } from \"ionicons/icons\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot header - Content is placed at the top and is used to\n * expand or collapse the accordion item.\n * @slot content - Content is placed below the header and is\n * shown or hidden based on expanded state.\n *\n * @part header - The wrapper element for the header slot.\n * @part content - The wrapper element for the content slot.\n * @part expanded - The expanded element. Can be used in combination\n * with the `header` and `content` parts (i.e. `::part(header expanded)`).\n */\nexport class Accordion {\n    constructor() {\n        this.updateListener = () => this.updateState(false);\n        this.setItemDefaults = () => {\n            const ionItem = this.getSlottedHeaderIonItem();\n            if (!ionItem) {\n                return;\n            }\n            /**\n             * For a11y purposes, we make\n             * the ion-item a button so users\n             * can tab to it and use keyboard\n             * navigation to get around.\n             */\n            ionItem.button = true;\n            ionItem.detail = false;\n            /**\n             * By default, the lines in an\n             * item should be full here, but\n             * only do that if a user has\n             * not explicitly overridden them\n             */\n            if (ionItem.lines === undefined) {\n                ionItem.lines = 'full';\n            }\n        };\n        this.getSlottedHeaderIonItem = () => {\n            const { headerEl } = this;\n            if (!headerEl) {\n                return;\n            }\n            /**\n             * Get the first ion-item\n             * slotted in the header slot\n             */\n            const slot = headerEl.querySelector('slot');\n            if (!slot) {\n                return;\n            }\n            // This is not defined in unit tests\n            if (slot.assignedElements === undefined)\n                return;\n            return slot.assignedElements().find((el) => el.tagName === 'ION-ITEM');\n        };\n        this.setAria = (expanded = false) => {\n            const ionItem = this.getSlottedHeaderIonItem();\n            if (!ionItem) {\n                return;\n            }\n            /**\n             * Get the native <button> element inside of\n             * ion-item because that is what will be focused\n             */\n            const root = getElementRoot(ionItem);\n            const button = root.querySelector('button');\n            if (!button) {\n                return;\n            }\n            button.setAttribute('aria-expanded', `${expanded}`);\n        };\n        this.slotToggleIcon = () => {\n            const ionItem = this.getSlottedHeaderIonItem();\n            if (!ionItem) {\n                return;\n            }\n            const { toggleIconSlot, toggleIcon } = this;\n            /**\n             * Check if there already is a toggle icon.\n             * If so, do not add another one.\n             */\n            const existingToggleIcon = ionItem.querySelector('.ion-accordion-toggle-icon');\n            if (existingToggleIcon) {\n                return;\n            }\n            const iconEl = document.createElement('ion-icon');\n            iconEl.slot = toggleIconSlot;\n            iconEl.lazy = false;\n            iconEl.classList.add('ion-accordion-toggle-icon');\n            iconEl.icon = toggleIcon;\n            iconEl.setAttribute('aria-hidden', 'true');\n            ionItem.appendChild(iconEl);\n        };\n        this.expandAccordion = (initialUpdate = false) => {\n            const { contentEl, contentElWrapper } = this;\n            if (initialUpdate || contentEl === undefined || contentElWrapper === undefined) {\n                this.state = 4 /* AccordionState.Expanded */;\n                return;\n            }\n            if (this.state === 4 /* AccordionState.Expanded */) {\n                return;\n            }\n            if (this.currentRaf !== undefined) {\n                cancelAnimationFrame(this.currentRaf);\n            }\n            if (this.shouldAnimate()) {\n                raf(() => {\n                    this.state = 8 /* AccordionState.Expanding */;\n                    this.currentRaf = raf(async () => {\n                        const contentHeight = contentElWrapper.offsetHeight;\n                        const waitForTransition = transitionEndAsync(contentEl, 2000);\n                        contentEl.style.setProperty('max-height', `${contentHeight}px`);\n                        await waitForTransition;\n                        this.state = 4 /* AccordionState.Expanded */;\n                        contentEl.style.removeProperty('max-height');\n                    });\n                });\n            }\n            else {\n                this.state = 4 /* AccordionState.Expanded */;\n            }\n        };\n        this.collapseAccordion = (initialUpdate = false) => {\n            const { contentEl } = this;\n            if (initialUpdate || contentEl === undefined) {\n                this.state = 1 /* AccordionState.Collapsed */;\n                return;\n            }\n            if (this.state === 1 /* AccordionState.Collapsed */) {\n                return;\n            }\n            if (this.currentRaf !== undefined) {\n                cancelAnimationFrame(this.currentRaf);\n            }\n            if (this.shouldAnimate()) {\n                this.currentRaf = raf(async () => {\n                    const contentHeight = contentEl.offsetHeight;\n                    contentEl.style.setProperty('max-height', `${contentHeight}px`);\n                    raf(async () => {\n                        const waitForTransition = transitionEndAsync(contentEl, 2000);\n                        this.state = 2 /* AccordionState.Collapsing */;\n                        await waitForTransition;\n                        this.state = 1 /* AccordionState.Collapsed */;\n                        contentEl.style.removeProperty('max-height');\n                    });\n                });\n            }\n            else {\n                this.state = 1 /* AccordionState.Collapsed */;\n            }\n        };\n        /**\n         * Helper function to determine if\n         * something should animate.\n         * If prefers-reduced-motion is set\n         * then we should not animate, regardless\n         * of what is set in the config.\n         */\n        this.shouldAnimate = () => {\n            if (typeof window === 'undefined') {\n                return false;\n            }\n            const prefersReducedMotion = matchMedia('(prefers-reduced-motion: reduce)').matches;\n            if (prefersReducedMotion) {\n                return false;\n            }\n            const animated = config.get('animated', true);\n            if (!animated) {\n                return false;\n            }\n            if (this.accordionGroupEl && !this.accordionGroupEl.animated) {\n                return false;\n            }\n            return true;\n        };\n        this.updateState = async (initialUpdate = false) => {\n            const accordionGroup = this.accordionGroupEl;\n            const accordionValue = this.value;\n            if (!accordionGroup) {\n                return;\n            }\n            const value = accordionGroup.value;\n            const shouldExpand = Array.isArray(value) ? value.includes(accordionValue) : value === accordionValue;\n            if (shouldExpand) {\n                this.expandAccordion(initialUpdate);\n                this.isNext = this.isPrevious = false;\n            }\n            else {\n                this.collapseAccordion(initialUpdate);\n                /**\n                 * When using popout or inset,\n                 * the collapsed accordion items\n                 * may need additional border radius\n                 * applied. Check to see if the\n                 * next or previous accordion is selected.\n                 */\n                const nextAccordion = this.getNextSibling();\n                const nextAccordionValue = nextAccordion === null || nextAccordion === void 0 ? void 0 : nextAccordion.value;\n                if (nextAccordionValue !== undefined) {\n                    this.isPrevious = Array.isArray(value) ? value.includes(nextAccordionValue) : value === nextAccordionValue;\n                }\n                const previousAccordion = this.getPreviousSibling();\n                const previousAccordionValue = previousAccordion === null || previousAccordion === void 0 ? void 0 : previousAccordion.value;\n                if (previousAccordionValue !== undefined) {\n                    this.isNext = Array.isArray(value) ? value.includes(previousAccordionValue) : value === previousAccordionValue;\n                }\n            }\n        };\n        this.getNextSibling = () => {\n            if (!this.el) {\n                return;\n            }\n            const nextSibling = this.el.nextElementSibling;\n            if ((nextSibling === null || nextSibling === void 0 ? void 0 : nextSibling.tagName) !== 'ION-ACCORDION') {\n                return;\n            }\n            return nextSibling;\n        };\n        this.getPreviousSibling = () => {\n            if (!this.el) {\n                return;\n            }\n            const previousSibling = this.el.previousElementSibling;\n            if ((previousSibling === null || previousSibling === void 0 ? void 0 : previousSibling.tagName) !== 'ION-ACCORDION') {\n                return;\n            }\n            return previousSibling;\n        };\n        this.state = 1 /* AccordionState.Collapsed */;\n        this.isNext = false;\n        this.isPrevious = false;\n        this.value = `ion-accordion-${accordionIds++}`;\n        this.disabled = false;\n        this.readonly = false;\n        this.toggleIcon = chevronDown;\n        this.toggleIconSlot = 'end';\n    }\n    valueChanged() {\n        this.updateState();\n    }\n    connectedCallback() {\n        var _a;\n        const accordionGroupEl = (this.accordionGroupEl = (_a = this.el) === null || _a === void 0 ? void 0 : _a.closest('ion-accordion-group'));\n        if (accordionGroupEl) {\n            this.updateState(true);\n            addEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n        }\n    }\n    disconnectedCallback() {\n        const accordionGroupEl = this.accordionGroupEl;\n        if (accordionGroupEl) {\n            removeEventListener(accordionGroupEl, 'ionValueChange', this.updateListener);\n        }\n    }\n    componentDidLoad() {\n        this.setItemDefaults();\n        this.slotToggleIcon();\n        /**\n         * We need to wait a tick because we\n         * just set ionItem.button = true and\n         * the button has not have been rendered yet.\n         */\n        raf(() => {\n            /**\n             * Set aria label on button inside of ion-item\n             * once the inner content has been rendered.\n             */\n            const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n            this.setAria(expanded);\n        });\n    }\n    toggleExpanded() {\n        const { accordionGroupEl, disabled, readonly, value, state } = this;\n        if (disabled || readonly)\n            return;\n        if (accordionGroupEl) {\n            /**\n             * Because the accordion group may or may\n             * not allow multiple accordions open, we\n             * need to request the toggling of this\n             * accordion and the accordion group will\n             * make the decision on whether or not\n             * to allow it.\n             */\n            const expand = state === 1 /* AccordionState.Collapsed */ || state === 2 /* AccordionState.Collapsing */;\n            accordionGroupEl.requestAccordionToggle(value, expand);\n        }\n    }\n    render() {\n        const { disabled, readonly } = this;\n        const mode = getIonMode(this);\n        const expanded = this.state === 4 /* AccordionState.Expanded */ || this.state === 8 /* AccordionState.Expanding */;\n        const headerPart = expanded ? 'header expanded' : 'header';\n        const contentPart = expanded ? 'content expanded' : 'content';\n        this.setAria(expanded);\n        return (h(Host, { key: '073e1d02c18dcbc20c68648426e87c14750c031d', class: {\n                [mode]: true,\n                'accordion-expanding': this.state === 8 /* AccordionState.Expanding */,\n                'accordion-expanded': this.state === 4 /* AccordionState.Expanded */,\n                'accordion-collapsing': this.state === 2 /* AccordionState.Collapsing */,\n                'accordion-collapsed': this.state === 1 /* AccordionState.Collapsed */,\n                'accordion-next': this.isNext,\n                'accordion-previous': this.isPrevious,\n                'accordion-disabled': disabled,\n                'accordion-readonly': readonly,\n                'accordion-animated': this.shouldAnimate(),\n            } }, h(\"div\", { key: '9b4cf326de8bb6b4033992903c0c1bfd7eea9bcc', onClick: () => this.toggleExpanded(), id: \"header\", part: headerPart, \"aria-controls\": \"content\", ref: (headerEl) => (this.headerEl = headerEl) }, h(\"slot\", { key: '464c32a37f64655eacf4218284214f5f30b14a1e', name: \"header\" })), h(\"div\", { key: '8bb52e6a62d7de0106b253201a89a32e79d9a594', id: \"content\", part: contentPart, role: \"region\", \"aria-labelledby\": \"header\", ref: (contentEl) => (this.contentEl = contentEl) }, h(\"div\", { key: '1d9dfd952ad493754aaeea7a8f625b33c2dd90a0', id: \"content-wrapper\", ref: (contentElWrapper) => (this.contentElWrapper = contentElWrapper) }, h(\"slot\", { key: '970dfbc55a612d739d0ca3b7b1a08e5c96d0c479', name: \"content\" })))));\n    }\n    static get is() { return \"ion-accordion\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get delegatesFocus() { return true; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"accordion.ios.scss\"],\n            \"md\": [\"accordion.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"accordion.ios.css\"],\n            \"md\": [\"accordion.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"value\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the accordion. Defaults to an autogenerated\\nvalue.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"`ion-accordion-${accordionIds++}`\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the accordion cannot be interacted with.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"readonly\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the accordion cannot be interacted with,\\nbut does not alter the opacity.\"\n                },\n                \"attribute\": \"readonly\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"toggleIcon\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The toggle icon to use. This icon will be\\nrotated when the accordion is expanded\\nor collapsed.\"\n                },\n                \"attribute\": \"toggle-icon\",\n                \"reflect\": false,\n                \"defaultValue\": \"chevronDown\"\n            },\n            \"toggleIconSlot\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The slot inside of `ion-item` to\\nplace the toggle icon. Defaults to `\\\"end\\\"`.\"\n                },\n                \"attribute\": \"toggle-icon-slot\",\n                \"reflect\": false,\n                \"defaultValue\": \"'end'\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"state\": {},\n            \"isNext\": {},\n            \"isPrevious\": {}\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"value\",\n                \"methodName\": \"valueChanged\"\n            }];\n    }\n}\nlet accordionIds = 0;\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2]}