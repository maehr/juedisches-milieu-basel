{"version":3,"file":"p-BR7SJd-v.js","sources":["node_modules/@ionic/core/dist/collection/utils/keyboard/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Keyboard } from \"../native/keyboard\";\nexport const KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nexport const KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nconst KEYBOARD_THRESHOLD = 150;\n// TODO(FW-2832): types\nlet previousVisualViewport = {};\nlet currentVisualViewport = {};\nlet keyboardOpen = false;\n/**\n * This is only used for tests\n */\nexport const resetKeyboardAssist = () => {\n    previousVisualViewport = {};\n    currentVisualViewport = {};\n    keyboardOpen = false;\n};\nexport const startKeyboardAssist = (win) => {\n    const nativeEngine = Keyboard.getEngine();\n    /**\n     * If the native keyboard plugin is available\n     * then we are running in a native environment. As a result\n     * we should only listen on the native events instead of\n     * using the Visual Viewport as the Ionic webview manipulates\n     * how it resizes such that the Visual Viewport API is not\n     * reliable here.\n     */\n    if (nativeEngine) {\n        startNativeListeners(win);\n    }\n    else {\n        if (!win.visualViewport) {\n            return;\n        }\n        currentVisualViewport = copyVisualViewport(win.visualViewport);\n        win.visualViewport.onresize = () => {\n            trackViewportChanges(win);\n            if (keyboardDidOpen() || keyboardDidResize(win)) {\n                setKeyboardOpen(win);\n            }\n            else if (keyboardDidClose(win)) {\n                setKeyboardClose(win);\n            }\n        };\n    }\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nconst startNativeListeners = (win) => {\n    win.addEventListener('keyboardDidShow', (ev) => setKeyboardOpen(win, ev));\n    win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\n};\nexport const setKeyboardOpen = (win, ev) => {\n    fireKeyboardOpenEvent(win, ev);\n    keyboardOpen = true;\n};\nexport const setKeyboardClose = (win) => {\n    fireKeyboardCloseEvent(win);\n    keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nexport const keyboardDidOpen = () => {\n    const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n    return (!keyboardOpen &&\n        previousVisualViewport.width === currentVisualViewport.width &&\n        scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nexport const keyboardDidResize = (win) => {\n    return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nexport const keyboardDidClose = (win) => {\n    return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\n    const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n    const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n        detail: { keyboardHeight },\n    });\n    win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nconst fireKeyboardCloseEvent = (win) => {\n    const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n    win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nexport const trackViewportChanges = (win) => {\n    previousVisualViewport = Object.assign({}, currentVisualViewport);\n    currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nexport const copyVisualViewport = (visualViewport) => {\n    return {\n        width: Math.round(visualViewport.width),\n        height: Math.round(visualViewport.height),\n        offsetTop: visualViewport.offsetTop,\n        offsetLeft: visualViewport.offsetLeft,\n        pageTop: visualViewport.pageTop,\n        pageLeft: visualViewport.pageLeft,\n        scale: visualViewport.scale,\n    };\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}