{"version":3,"file":"p-BPn2SEmk.js","sources":["node_modules/@ionic/core/dist/collection/utils/sanitization/index.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nexport const sanitizeDOMString = (untrustedString) => {\n    try {\n        if (untrustedString instanceof IonicSafeString) {\n            return untrustedString.value;\n        }\n        if (!isSanitizerEnabled() || typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * onload is fired when appending to a document\n         * fragment in Chrome. If a string\n         * contains onload then we should not\n         * attempt to add this to the fragment.\n         */\n        if (untrustedString.includes('onload=')) {\n            return '';\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach((blockedTag) => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* eslint-disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* eslint-disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return getInnerDiv !== null ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\n// TODO(FW-2832): type (using Element triggers other type errors as well)\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    /**\n     * If attributes is not a NamedNodeMap\n     * then we should remove the element entirely.\n     * This helps avoid DOM Clobbering attacks where\n     * attributes is overridden.\n     */\n    if (typeof NamedNodeMap !== 'undefined' && !(element.attributes instanceof NamedNodeMap)) {\n        element.remove();\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /**\n         * We also need to check the property value\n         * as javascript: can allow special characters\n         * such as &Tab; and still be valid (i.e. java&Tab;script)\n         */\n        const propertyValue = element[attributeName];\n        /* eslint-disable */\n        if ((attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) ||\n            (propertyValue != null && propertyValue.toLowerCase().includes('javascript:'))) {\n            element.removeAttribute(attributeName);\n        }\n        /* eslint-enable */\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* eslint-disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\n// TODO(FW-2832): type\nconst getElementChildren = (el) => {\n    return el.children != null ? el.children : el.childNodes;\n};\nconst isSanitizerEnabled = () => {\n    var _a;\n    const win = window;\n    const config = (_a = win === null || win === void 0 ? void 0 : win.Ionic) === null || _a === void 0 ? void 0 : _a.config;\n    if (config) {\n        if (config.get) {\n            return config.get('sanitizerEnabled', true);\n        }\n        else {\n            return config.sanitizerEnabled === true || config.sanitizerEnabled === undefined;\n        }\n    }\n    return true;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\nexport class IonicSafeString {\n    constructor(value) {\n        this.value = value;\n    }\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}