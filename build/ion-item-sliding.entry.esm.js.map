{"version":3,"file":"ion-item-sliding.entry.esm.js","sources":["node_modules/@ionic/core/dist/collection/components/item-sliding/item-sliding.css?tag=ion-item-sliding","node_modules/@ionic/core/dist/collection/components/item-sliding/item-sliding.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-item-sliding {\n  display: block;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  user-select: none;\n}\n\nion-item-sliding .item {\n  user-select: none;\n}\n\n.item-sliding-active-slide .item {\n  position: relative;\n  transition: transform 500ms cubic-bezier(0.36, 0.66, 0.04, 1);\n  opacity: 1;\n  z-index: 2;\n  pointer-events: none;\n  will-change: transform;\n}\n\n.item-sliding-closing ion-item-options {\n  pointer-events: none;\n}\n\n.item-sliding-active-swipe-end .item-options-end .item-option-expandable {\n  /* stylelint-disable-next-line property-disallowed-list */\n  padding-left: 100%;\n  order: 1;\n  transition-duration: 0.6s;\n  transition-property: padding-left;\n}\n:host-context([dir=rtl]) .item-sliding-active-swipe-end .item-options-end .item-option-expandable {\n  order: -1;\n}\n\n[dir=rtl] .item-sliding-active-swipe-end .item-options-end .item-option-expandable {\n  order: -1;\n}\n\n@supports selector(:dir(rtl)) {\n  .item-sliding-active-swipe-end .item-options-end .item-option-expandable:dir(rtl) {\n    order: -1;\n  }\n}\n\n.item-sliding-active-swipe-start .item-options-start .item-option-expandable {\n  /* stylelint-disable-next-line property-disallowed-list */\n  padding-right: 100%;\n  order: -1;\n  transition-duration: 0.6s;\n  transition-property: padding-right;\n}\n:host-context([dir=rtl]) .item-sliding-active-swipe-start .item-options-start .item-option-expandable {\n  order: 1;\n}\n\n[dir=rtl] .item-sliding-active-swipe-start .item-options-start .item-option-expandable {\n  order: 1;\n}\n\n@supports selector(:dir(rtl)) {\n  .item-sliding-active-swipe-start .item-options-start .item-option-expandable:dir(rtl) {\n    order: 1;\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { findClosestIonContent, disableContentScrollY, resetContentScrollY } from \"../../utils/content/index\";\nimport { isEndSide } from \"../../utils/helpers\";\nimport { watchForOptions } from \"../../utils/watch-options\";\nimport { getIonMode } from \"../../global/ionic-global\";\nconst SWIPE_MARGIN = 30;\nconst ELASTIC_FACTOR = 0.55;\nlet openSlidingItem;\nexport class ItemSliding {\n    constructor() {\n        this.item = null;\n        this.openAmount = 0;\n        this.initialOpenAmount = 0;\n        this.optsWidthRightSide = 0;\n        this.optsWidthLeftSide = 0;\n        this.sides = 0 /* ItemSide.None */;\n        this.optsDirty = true;\n        this.contentEl = null;\n        this.initialContentScrollY = true;\n        this.state = 2 /* SlidingState.Disabled */;\n        this.disabled = false;\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.enable(!this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const { el } = this;\n        this.item = el.querySelector('ion-item');\n        this.contentEl = findClosestIonContent(el);\n        /**\n         * The MutationObserver needs to be added before we\n         * call updateOptions below otherwise we may miss\n         * ion-item-option elements that are added to the DOM\n         * while updateOptions is running and before the MutationObserver\n         * has been initialized.\n         */\n        this.mutationObserver = watchForOptions(el, 'ion-item-option', async () => {\n            await this.updateOptions();\n        });\n        await this.updateOptions();\n        this.gesture = (await import('../../utils/gesture')).createGesture({\n            el,\n            gestureName: 'item-swipe',\n            gesturePriority: 100,\n            threshold: 5,\n            canStart: (ev) => this.canStart(ev),\n            onStart: () => this.onStart(),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.item = null;\n        this.leftOptions = this.rightOptions = undefined;\n        if (openSlidingItem === this.el) {\n            openSlidingItem = undefined;\n        }\n        if (this.mutationObserver) {\n            this.mutationObserver.disconnect();\n            this.mutationObserver = undefined;\n        }\n    }\n    /**\n     * Get the amount the item is open in pixels.\n     */\n    getOpenAmount() {\n        return Promise.resolve(this.openAmount);\n    }\n    /**\n     * Get the ratio of the open amount of the item compared to the width of the options.\n     * If the number returned is positive, then the options on the right side are open.\n     * If the number returned is negative, then the options on the left side are open.\n     * If the absolute value of the number is greater than 1, the item is open more than\n     * the width of the options.\n     */\n    getSlidingRatio() {\n        return Promise.resolve(this.getSlidingRatioSync());\n    }\n    /**\n     * Open the sliding item.\n     *\n     * @param side The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\n     */\n    async open(side) {\n        var _a;\n        /**\n         * It is possible for the item to be added to the DOM\n         * after the item-sliding component was created. As a result,\n         * if this.item is null, then we should attempt to\n         * query for the ion-item again.\n         * However, if the item is already defined then\n         * we do not query for it again.\n         */\n        const item = (this.item = (_a = this.item) !== null && _a !== void 0 ? _a : this.el.querySelector('ion-item'));\n        if (item === null) {\n            return;\n        }\n        const optionsToOpen = this.getOptions(side);\n        if (!optionsToOpen) {\n            return;\n        }\n        /**\n         * If side is not set, we need to infer the side\n         * so we know which direction to move the options\n         */\n        if (side === undefined) {\n            side = optionsToOpen === this.leftOptions ? 'start' : 'end';\n        }\n        // In RTL we want to switch the sides\n        side = isEndSide(side) ? 'end' : 'start';\n        const isStartOpen = this.openAmount < 0;\n        const isEndOpen = this.openAmount > 0;\n        /**\n         * If a side is open and a user tries to\n         * re-open the same side, we should not do anything\n         */\n        if (isStartOpen && optionsToOpen === this.leftOptions) {\n            return;\n        }\n        if (isEndOpen && optionsToOpen === this.rightOptions) {\n            return;\n        }\n        this.closeOpened();\n        this.state = 4 /* SlidingState.Enabled */;\n        requestAnimationFrame(() => {\n            this.calculateOptsWidth();\n            const width = side === 'end' ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n            openSlidingItem = this.el;\n            this.setOpenAmount(width, false);\n            this.state = side === 'end' ? 8 /* SlidingState.End */ : 16 /* SlidingState.Start */;\n        });\n    }\n    /**\n     * Close the sliding item. Items can also be closed from the [List](./list).\n     */\n    async close() {\n        this.setOpenAmount(0, true);\n    }\n    /**\n     * Close all of the sliding items in the list. Items can also be closed from the [List](./list).\n     */\n    async closeOpened() {\n        if (openSlidingItem !== undefined) {\n            openSlidingItem.close();\n            openSlidingItem = undefined;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Given an optional side, return the ion-item-options element.\n     *\n     * @param side This side of the options to get. If a side is not provided it will\n     * return the first one available.\n     */\n    getOptions(side) {\n        if (side === undefined) {\n            return this.leftOptions || this.rightOptions;\n        }\n        else if (side === 'start') {\n            return this.leftOptions;\n        }\n        else {\n            return this.rightOptions;\n        }\n    }\n    async updateOptions() {\n        const options = this.el.querySelectorAll('ion-item-options');\n        let sides = 0;\n        // Reset left and right options in case they were removed\n        this.leftOptions = this.rightOptions = undefined;\n        for (let i = 0; i < options.length; i++) {\n            const item = options.item(i);\n            /**\n             * We cannot use the componentOnReady helper\n             * util here since we need to wait for all of these items\n             * to be ready before we set `this.sides` and `this.optsDirty`.\n             */\n            // eslint-disable-next-line custom-rules/no-component-on-ready-method\n            const option = item.componentOnReady !== undefined ? await item.componentOnReady() : item;\n            const side = isEndSide(option.side) ? 'end' : 'start';\n            if (side === 'start') {\n                this.leftOptions = option;\n                sides |= 1 /* ItemSide.Start */;\n            }\n            else {\n                this.rightOptions = option;\n                sides |= 2 /* ItemSide.End */;\n            }\n        }\n        this.optsDirty = true;\n        this.sides = sides;\n    }\n    canStart(gesture) {\n        /**\n         * If very close to start of the screen\n         * do not open left side so swipe to go\n         * back will still work.\n         */\n        const rtl = document.dir === 'rtl';\n        const atEdge = rtl ? window.innerWidth - gesture.startX < 15 : gesture.startX < 15;\n        if (atEdge) {\n            return false;\n        }\n        const selected = openSlidingItem;\n        if (selected && selected !== this.el) {\n            this.closeOpened();\n        }\n        return !!(this.rightOptions || this.leftOptions);\n    }\n    onStart() {\n        /**\n         * We need to query for the ion-item\n         * every time the gesture starts. Developers\n         * may toggle ion-item elements via *ngIf.\n         */\n        this.item = this.el.querySelector('ion-item');\n        const { contentEl } = this;\n        if (contentEl) {\n            this.initialContentScrollY = disableContentScrollY(contentEl);\n        }\n        openSlidingItem = this.el;\n        if (this.tmr !== undefined) {\n            clearTimeout(this.tmr);\n            this.tmr = undefined;\n        }\n        if (this.openAmount === 0) {\n            this.optsDirty = true;\n            this.state = 4 /* SlidingState.Enabled */;\n        }\n        this.initialOpenAmount = this.openAmount;\n        if (this.item) {\n            this.item.style.transition = 'none';\n        }\n    }\n    onMove(gesture) {\n        if (this.optsDirty) {\n            this.calculateOptsWidth();\n        }\n        let openAmount = this.initialOpenAmount - gesture.deltaX;\n        switch (this.sides) {\n            case 2 /* ItemSide.End */:\n                openAmount = Math.max(0, openAmount);\n                break;\n            case 1 /* ItemSide.Start */:\n                openAmount = Math.min(0, openAmount);\n                break;\n            case 3 /* ItemSide.Both */:\n                break;\n            case 0 /* ItemSide.None */:\n                return;\n            default:\n                console.warn('invalid ItemSideFlags value', this.sides);\n                break;\n        }\n        let optsWidth;\n        if (openAmount > this.optsWidthRightSide) {\n            optsWidth = this.optsWidthRightSide;\n            openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n        }\n        else if (openAmount < -this.optsWidthLeftSide) {\n            optsWidth = -this.optsWidthLeftSide;\n            openAmount = optsWidth + (openAmount - optsWidth) * ELASTIC_FACTOR;\n        }\n        this.setOpenAmount(openAmount, false);\n    }\n    onEnd(gesture) {\n        const { contentEl, initialContentScrollY } = this;\n        if (contentEl) {\n            resetContentScrollY(contentEl, initialContentScrollY);\n        }\n        const velocity = gesture.velocityX;\n        let restingPoint = this.openAmount > 0 ? this.optsWidthRightSide : -this.optsWidthLeftSide;\n        // Check if the drag didn't clear the buttons mid-point\n        // and we aren't moving fast enough to swipe open\n        const isResetDirection = this.openAmount > 0 === !(velocity < 0);\n        const isMovingFast = Math.abs(velocity) > 0.3;\n        const isOnCloseZone = Math.abs(this.openAmount) < Math.abs(restingPoint / 2);\n        if (swipeShouldReset(isResetDirection, isMovingFast, isOnCloseZone)) {\n            restingPoint = 0;\n        }\n        const state = this.state;\n        this.setOpenAmount(restingPoint, true);\n        if ((state & 32 /* SlidingState.SwipeEnd */) !== 0 && this.rightOptions) {\n            this.rightOptions.fireSwipeEvent();\n        }\n        else if ((state & 64 /* SlidingState.SwipeStart */) !== 0 && this.leftOptions) {\n            this.leftOptions.fireSwipeEvent();\n        }\n    }\n    calculateOptsWidth() {\n        this.optsWidthRightSide = 0;\n        if (this.rightOptions) {\n            this.rightOptions.style.display = 'flex';\n            this.optsWidthRightSide = this.rightOptions.offsetWidth;\n            this.rightOptions.style.display = '';\n        }\n        this.optsWidthLeftSide = 0;\n        if (this.leftOptions) {\n            this.leftOptions.style.display = 'flex';\n            this.optsWidthLeftSide = this.leftOptions.offsetWidth;\n            this.leftOptions.style.display = '';\n        }\n        this.optsDirty = false;\n    }\n    setOpenAmount(openAmount, isFinal) {\n        if (this.tmr !== undefined) {\n            clearTimeout(this.tmr);\n            this.tmr = undefined;\n        }\n        if (!this.item) {\n            return;\n        }\n        const { el } = this;\n        const style = this.item.style;\n        this.openAmount = openAmount;\n        if (isFinal) {\n            style.transition = '';\n        }\n        if (openAmount > 0) {\n            this.state =\n                openAmount >= this.optsWidthRightSide + SWIPE_MARGIN\n                    ? 8 /* SlidingState.End */ | 32 /* SlidingState.SwipeEnd */\n                    : 8 /* SlidingState.End */;\n        }\n        else if (openAmount < 0) {\n            this.state =\n                openAmount <= -this.optsWidthLeftSide - SWIPE_MARGIN\n                    ? 16 /* SlidingState.Start */ | 64 /* SlidingState.SwipeStart */\n                    : 16 /* SlidingState.Start */;\n        }\n        else {\n            /**\n             * The sliding options should not be\n             * clickable while the item is closing.\n             */\n            el.classList.add('item-sliding-closing');\n            /**\n             * Item sliding cannot be interrupted\n             * while closing the item. If it did,\n             * it would allow the item to get into an\n             * inconsistent state where multiple\n             * items are then open at the same time.\n             */\n            if (this.gesture) {\n                this.gesture.enable(false);\n            }\n            this.tmr = setTimeout(() => {\n                this.state = 2 /* SlidingState.Disabled */;\n                this.tmr = undefined;\n                if (this.gesture) {\n                    this.gesture.enable(!this.disabled);\n                }\n                el.classList.remove('item-sliding-closing');\n            }, 600);\n            openSlidingItem = undefined;\n            style.transform = '';\n            return;\n        }\n        style.transform = `translate3d(${-openAmount}px,0,0)`;\n        this.ionDrag.emit({\n            amount: openAmount,\n            ratio: this.getSlidingRatioSync(),\n        });\n    }\n    getSlidingRatioSync() {\n        if (this.openAmount > 0) {\n            return this.openAmount / this.optsWidthRightSide;\n        }\n        else if (this.openAmount < 0) {\n            return this.openAmount / this.optsWidthLeftSide;\n        }\n        else {\n            return 0;\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { key: '7f191e38bf717e6ccb246aa7b9fbd29d01e64677', class: {\n                [mode]: true,\n                'item-sliding-active-slide': this.state !== 2 /* SlidingState.Disabled */,\n                'item-sliding-active-options-end': (this.state & 8 /* SlidingState.End */) !== 0,\n                'item-sliding-active-options-start': (this.state & 16 /* SlidingState.Start */) !== 0,\n                'item-sliding-active-swipe-end': (this.state & 32 /* SlidingState.SwipeEnd */) !== 0,\n                'item-sliding-active-swipe-start': (this.state & 64 /* SlidingState.SwipeStart */) !== 0,\n            } }));\n    }\n    static get is() { return \"ion-item-sliding\"; }\n    static get originalStyleUrls() {\n        return {\n            \"$\": [\"item-sliding.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"$\": [\"item-sliding.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the sliding item.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            }\n        };\n    }\n    static get states() {\n        return {\n            \"state\": {}\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionDrag\",\n                \"name\": \"ionDrag\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the sliding position changes.\"\n                },\n                \"complexType\": {\n                    \"original\": \"any\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"getOpenAmount\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<number>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<number>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the amount the item is open in pixels.\",\n                    \"tags\": []\n                }\n            },\n            \"getSlidingRatio\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<number>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<number>\"\n                },\n                \"docs\": {\n                    \"text\": \"Get the ratio of the open amount of the item compared to the width of the options.\\nIf the number returned is positive, then the options on the right side are open.\\nIf the number returned is negative, then the options on the left side are open.\\nIf the absolute value of the number is greater than 1, the item is open more than\\nthe width of the options.\",\n                    \"tags\": []\n                }\n            },\n            \"open\": {\n                \"complexType\": {\n                    \"signature\": \"(side: Side | undefined) => Promise<void>\",\n                    \"parameters\": [{\n                            \"name\": \"side\",\n                            \"type\": \"Side | undefined\",\n                            \"docs\": \"The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"Side\": {\n                            \"location\": \"import\",\n                            \"path\": \"../menu/menu-interface\",\n                            \"id\": \"src/components/menu/menu-interface.ts::Side\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Open the sliding item.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"side The side of the options to open. If a side is not provided, it will open the first set of options it finds within the item.\"\n                        }]\n                }\n            },\n            \"close\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Close the sliding item. Items can also be closed from the [List](./list).\",\n                    \"tags\": []\n                }\n            },\n            \"closeOpened\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<boolean>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Close all of the sliding items in the list. Items can also be closed from the [List](./list).\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"disabled\",\n                \"methodName\": \"disabledChanged\"\n            }];\n    }\n}\nconst swipeShouldReset = (isResetDirection, isMovingFast, isOnResetZone) => {\n    // The logic required to know when the sliding item should close (openAmount=0)\n    // depends on three booleans (isResetDirection, isMovingFast, isOnResetZone)\n    // and it ended up being too complicated to be written manually without errors\n    // so the truth table is attached below: (0=false, 1=true)\n    // isResetDirection | isMovingFast | isOnResetZone || shouldClose\n    //         0        |       0      |       0       ||    0\n    //         0        |       0      |       1       ||    1\n    //         0        |       1      |       0       ||    0\n    //         0        |       1      |       1       ||    0\n    //         1        |       0      |       0       ||    0\n    //         1        |       0      |       1       ||    1\n    //         1        |       1      |       0       ||    1\n    //         1        |       1      |       1       ||    1\n    // The resulting expression was generated by resolving the K-map (Karnaugh map):\n    return (!isMovingFast && isOnResetZone) || (isResetDirection && isMovingFast);\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1]}