{"version":3,"names":["reorderIosCss","reorderMdCss","Reorder","onClick","ev","reorderGroup","this","el","closest","preventDefault","disabled","stopImmediatePropagation","render","mode","getIonMode","reorderIcon","reorderThreeOutline","reorderTwoSharp","h","Host","key","class","icon","lazy","part"],"sources":["node_modules/@ionic/core/dist/collection/components/reorder/reorder.ios.css?tag=ion-reorder&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/reorder/reorder.md.css?tag=ion-reorder&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/reorder/reorder.js"],"sourcesContent":[":host([slot]) {\n  display: none;\n  line-height: 0;\n  z-index: 100;\n}\n\n.reorder-icon {\n  display: block;\n}\n\n/**\n * This ensures that custom reorder\n * icons resize with Dynamic Type.\n */\n::slotted(ion-icon) {\n  font-size: dynamic-font(16px);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.reorder-icon {\n  font-size: 2.125rem;\n  opacity: 0.4;\n}",":host([slot]) {\n  display: none;\n  line-height: 0;\n  z-index: 100;\n}\n\n.reorder-icon {\n  display: block;\n}\n\n/**\n * This ensures that custom reorder\n * icons resize with Dynamic Type.\n */\n::slotted(ion-icon) {\n  font-size: dynamic-font(16px);\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.reorder-icon {\n  font-size: 1.9375rem;\n  opacity: 0.3;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { reorderThreeOutline, reorderTwoSharp } from \"ionicons/icons\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @part icon - The icon of the reorder handle (uses ion-icon).\n */\nexport class Reorder {\n    onClick(ev) {\n        const reorderGroup = this.el.closest('ion-reorder-group');\n        ev.preventDefault();\n        // Only stop event propagation if the reorder is inside of an enabled\n        // reorder group. This allows interaction with clickable children components.\n        if (!reorderGroup || !reorderGroup.disabled) {\n            ev.stopImmediatePropagation();\n        }\n    }\n    render() {\n        const mode = getIonMode(this);\n        const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n        return (h(Host, { key: '5747b63aa64b05bfed96bbce8087186c7e14c6d5', class: mode }, h(\"slot\", { key: 'a745f29a23c905cd0bff572acb755b597a3fb3c3' }, h(\"ion-icon\", { key: '48f433e85a3a68c16bc426623b2b74957b4b2eb7', icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\n    }\n    static get is() { return \"ion-reorder\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"reorder.ios.scss\"],\n            \"md\": [\"reorder.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"reorder.ios.css\"],\n            \"md\": [\"reorder.md.css\"]\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get listeners() {\n        return [{\n                \"name\": \"click\",\n                \"method\": \"onClick\",\n                \"target\": undefined,\n                \"capture\": true,\n                \"passive\": false\n            }];\n    }\n}\n"],"mappings":"mIAAA,MAAMA,EAAgB,kLCAtB,MAAMC,EAAe,mL,MCSRC,EAAO,M,yBAChB,OAAAC,CAAQC,GACJ,MAAMC,EAAeC,KAAKC,GAAGC,QAAQ,qBACrCJ,EAAGK,iBAGH,IAAKJ,IAAiBA,EAAaK,SAAU,CACzCN,EAAGO,0B,EAGX,MAAAC,GACI,MAAMC,EAAOC,EAAWR,MACxB,MAAMS,EAAcF,IAAS,MAAQG,EAAsBC,EAC3D,OAAQC,EAAEC,EAAM,CAAEC,IAAK,2CAA4CC,MAAOR,GAAQK,EAAE,OAAQ,CAAEE,IAAK,4CAA8CF,EAAE,WAAY,CAAEE,IAAK,2CAA4CE,KAAMP,EAAaQ,KAAM,MAAOF,MAAO,eAAgBG,KAAM,OAAQ,cAAe,U","ignoreList":[]}