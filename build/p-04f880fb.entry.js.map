{"version":3,"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","writeTask","classList","add","dispatchClick","remove","click","undefined","createGesture","gestureName","threshold","onStart","ev","currentX","currentY","hapticSelectionStart","onMove","hapticSelectionChanged","onEnd","hapticSelectionEnd","iosEnterAnimation","baseEl","baseAnimation","createAnimation","backdropAnimation","wrapperAnimation","addElement","querySelector","fromTo","beforeStyles","afterClearStyles","easing","duration","addAnimation","iosLeaveAnimation","mdEnterAnimation","mdLeaveAnimation","actionSheetIosCss","actionSheetMdCss","ActionSheet","constructor","hostRef","this","delegateController","createDelegateController","lockController","createLockController","triggerController","createTriggerController","presented","onBackdropTap","dismiss","BACKDROP","dispatchCancelHandler","role","detail","isCancel","cancelButton","getButtons","find","b","callButtonHandler","overlayIndex","delegate","hasController","keyboardClose","enterAnimation","leaveAnimation","buttons","cssClass","backdropDismiss","header","subHeader","translucent","animated","htmlAttributes","isOpen","trigger","onIsOpenChange","newValue","oldValue","present","triggerChanged","addClickListener","unlock","lock","attachViewToDom","data","dismissed","removeViewFromDom","onDidDismiss","eventMethod","onWillDismiss","buttonClick","shouldDismiss","Promise","resolve","rtn","safeCall","handler","map","text","connectedCallback","prepareOverlay","disconnectedCallback","gesture","destroy","removeClickListener","componentWillLoad","setOverlayId","componentDidLoad","groupEl","wrapperEl","getIonMode","readTask","isScrollable","scrollHeight","clientHeight","refEl","contains","enable","raf","render","mode","allButtons","filter","headerID","h","Host","Object","assign","key","tabindex","style","zIndex","class","getClassMap","onIonActionSheetWillDismiss","onIonBackdropTap","tappable","ref","id","type","buttonClass","onClick","icon","lazy","keyframes","offset","opacity","transform","alertIosCss","alertMdCss","Alert","customHTMLEnabled","config","get","ENABLE_HTML_CONTENT_DEFAULT","processedInputs","processedButtons","message","inputs","onKeydown","inputTypes","Set","i","has","preventDefault","query","querySelectorAll","radios","Array","from","radio","disabled","index","findIndex","nextEl","includes","length","nextProcessed","input","rbClick","focus","buttonsChanged","btn","toLowerCase","inputsChanged","first","checked","focusable","console","warn","values","join","inputType","next","value","_a","name","placeholder","label","min","max","attributes","selectedInput","activeId","forceUpdate","cbClick","getValues","returnData","checkedInput","forEach","renderAlertInputs","renderCheckbox","renderRadio","renderInput","tabIndex","_b","_c","_d","inputClass","onInput","e","renderAlertButtons","alertButtonGroupClass","renderAlertMessage","msgId","innerHTML","sanitizeDOMString","hdrId","subHdrId","ariaLabelledBy","onIonAlertWillDismiss","toString","checkboxIosCss","checkboxMdCss","Checkbox","inputId","checkboxIds","inheritedAttributes","hasLoggedDeprecationWarning","setChecked","state","isChecked","ionChange","emit","toggleChecked","setFocus","indeterminate","onFocus","ionFocus","onBlur","ionBlur","color","labelPlacement","justify","alignment","legacy","legacyFormController","createLegacyFormController","emitStyle","hasLegacyControl","inheritAriaAttributes","styleChanged","ionStyle","focusEl","renderLegacyCheckbox","getSVGPath","path","renderHiddenInput","createColorClasses","hostContext","interactive","onChange","textContent","part","viewBox","printIonWarning","labelId","labelText","getAriaLabel","htmlFor","d","selectPopoverIosCss","selectPopoverMdCss","SelectPopover","multiple","options","findOptionFromEvent","o","callOptionHandler","option","dismissParentPopover","popover","closest","renderOptions","renderCheckboxOptions","renderRadioOptions","onIonChange","onKeyUp","hasSubHeaderOrMessage"],"sources":["node_modules/@ionic/core/dist/collection/utils/gesture/button-active.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/action-sheet/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.ios.css?tag=ion-action-sheet&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.md.css?tag=ion-action-sheet&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/action-sheet/action-sheet.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/ios.leave.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.enter.js","node_modules/@ionic/core/dist/collection/components/alert/animations/md.leave.js","node_modules/@ionic/core/dist/collection/components/alert/alert.ios.css?tag=ion-alert&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.md.css?tag=ion-alert&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/alert/alert.js","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.ios.css?tag=ion-checkbox&mode=ios&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.md.css?tag=ion-checkbox&mode=md&encapsulation=shadow","node_modules/@ionic/core/dist/collection/components/checkbox/checkbox.js","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.ios.css?tag=ion-select-popover&mode=ios&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.md.css?tag=ion-select-popover&mode=md&encapsulation=scoped","node_modules/@ionic/core/dist/collection/components/select-popover/select-popover.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { writeTask } from \"@stencil/core\";\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from \"../native/haptic\";\nimport { createGesture } from \"./index\";\nexport const createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: (ev) => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        },\n    });\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Action Sheet Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(400)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * MD Action Sheet Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation\n        .addElement(baseEl.querySelector('.action-sheet-wrapper'))\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('cubic-bezier(.36,.66,.04,1)')\n        .duration(450)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, #f9f9f9));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.4);\n  --button-background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n  --button-background-activated: var(--ion-text-color, #000);\n  --button-background-activated-opacity: .08;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-background-selected: var(--ion-color-step-150, var(--ion-background-color, #fff));\n  --button-background-selected-opacity: 1;\n  --button-color: var(--ion-color-primary, #3880ff);\n  --color: var(--ion-color-step-400, #999999);\n  text-align: center;\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  /**\n   * Bottom safe area is applied as padding so that it impacts the bounding box.\n   * When the action sheet is shown/hidden, this element is transformed by translating\n   * 100% of its height. This translation needs to include the bottom safe area\n   * otherwise part of the action sheet will still be visible at the end of\n   * the show transition.\n   *\n   * If this code is changed, reviewers should verify that the action\n   * sheet still translates out of the viewport completely when the bottom\n   * safe area is a positive value.\n   */\n  padding-bottom: var(--ion-safe-area-bottom, 0);\n  box-sizing: content-box;\n}\n\n.action-sheet-container {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.action-sheet-group {\n  border-radius: 13px;\n  margin-bottom: 8px;\n}\n\n.action-sheet-group:first-child {\n  margin-top: 10px;\n}\n\n.action-sheet-group:last-child {\n  margin-bottom: 10px;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.action-sheet-translucent) .action-sheet-group {\n    background-color: transparent;\n    backdrop-filter: saturate(280%) blur(20px);\n  }\n  :host(.action-sheet-translucent) .action-sheet-title,\n  :host(.action-sheet-translucent) .action-sheet-button {\n    background-color: transparent;\n    background-image: linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 100%), linear-gradient(0deg, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4), rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.4) 50%, rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.8) 50%);\n    background-repeat: no-repeat;\n    /* stylelint-disable-next-line all */\n    background-position: top, bottom;\n    background-size: 100% calc(100% - 1px), 100% 1px;\n    backdrop-filter: saturate(120%);\n  }\n  :host(.action-sheet-translucent) .action-sheet-button.ion-activated {\n    background-color: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.7);\n    background-image: none;\n  }\n  :host(.action-sheet-translucent) .action-sheet-cancel {\n    background: var(--button-background-selected);\n  }\n}\n.action-sheet-title {\n  background: linear-gradient(0deg, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08), rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.08) 50%, transparent 50%) bottom/100% 1px no-repeat transparent;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 14px;\n  padding-bottom: 13px;\n  color: var(--color, var(--ion-color-step-400, #999999));\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n  text-align: center;\n}\n\n.action-sheet-title.action-sheet-has-sub-title {\n  font-weight: 600;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 6px;\n  padding-bottom: 0;\n  font-size: max(13px, 0.8125rem);\n  font-weight: 400;\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 14px;\n  padding-inline-start: 14px;\n  -webkit-padding-end: 14px;\n  padding-inline-end: 14px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  min-height: 56px;\n  font-size: max(20px, 1.25rem);\n  contain: content;\n}\n\n.action-sheet-button .action-sheet-icon {\n  -webkit-margin-end: 0.3em;\n  margin-inline-end: 0.3em;\n  font-size: max(28px, 1.75rem);\n  pointer-events: none;\n}\n\n.action-sheet-button:last-child {\n  background-image: none;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}\n\n.action-sheet-cancel {\n  font-weight: 600;\n}\n.action-sheet-cancel::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-destructive,\n.action-sheet-destructive.ion-activated,\n.action-sheet-destructive.ion-focused {\n  color: var(--ion-color-danger, #eb445a);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-destructive:hover {\n    color: var(--ion-color-danger, #eb445a);\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the action sheet group\n   * @prop --color: Color of the action sheet text\n   *\n   * @prop --min-width: Minimum width of the action sheet\n   * @prop --width: Width of the action sheet\n   * @prop --max-width: Maximum width of the action sheet\n   *\n   * @prop --min-height: Minimum height of the action sheet\n   * @prop --height: height of the action sheet\n   * @prop --max-height: Maximum height of the action sheet\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   *\n   * @prop --button-background: Background of the action sheet button\n   * @prop --button-background-activated: Background of the action sheet button when pressed. Note: setting this will interfere with the Material Design ripple.\n   * @prop --button-background-activated-opacity: Opacity of the action sheet button background when pressed\n   * @prop --button-background-hover: Background of the action sheet button on hover\n   * @prop --button-background-hover-opacity: Opacity of the action sheet button background on hover\n   * @prop --button-background-focused: Background of the action sheet button when tabbed to\n   * @prop --button-background-focused-opacity: Opacity of the action sheet button background when tabbed to\n   * @prop --button-background-selected: Background of the selected action sheet button\n   * @prop --button-background-selected-opacity: Opacity of the selected action sheet button background\n   *\n   * @prop --button-color: Color of the action sheet button\n   * @prop --button-color-activated: Color of the action sheet button when pressed\n   * @prop --button-color-hover: Color of the action sheet button on hover\n   * @prop --button-color-focused: Color of the action sheet button when tabbed to\n   * @prop --button-color-selected: Color of the selected action sheet button\n   */\n  --color: initial;\n  --button-color-activated: var(--button-color);\n  --button-color-focused: var(--button-color);\n  --button-color-hover: var(--button-color);\n  --button-color-selected: var(--button-color);\n  --min-width: auto;\n  --width: 100%;\n  --max-width: 500px;\n  --min-height: auto;\n  --height: auto;\n  --max-height: calc(100% - (var(--ion-safe-area-top) + var(--ion-safe-area-bottom)));\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: block;\n  position: fixed;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n.action-sheet-wrapper {\n  left: 0;\n  right: 0;\n  bottom: 0;\n  transform: translate3d(0,  100%,  0);\n  display: block;\n  position: absolute;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  z-index: 10;\n  pointer-events: none;\n}\n\n.action-sheet-button {\n  display: block;\n  position: relative;\n  width: 100%;\n  border: 0;\n  outline: none;\n  background: var(--button-background);\n  color: var(--button-color);\n  font-family: inherit;\n  overflow: hidden;\n}\n\n.action-sheet-button-inner {\n  display: flex;\n  position: relative;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n}\n\n.action-sheet-container {\n  display: flex;\n  flex-flow: column;\n  justify-content: flex-end;\n  height: 100%;\n  /* Fallback for browsers that do not support dvh */\n  max-height: calc(100vh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n  max-height: calc(100dvh - (var(--ion-safe-area-top, 0) + var(--ion-safe-area-bottom, 0)));\n}\n\n.action-sheet-group {\n  flex-shrink: 2;\n  overscroll-behavior-y: contain;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  pointer-events: all;\n  background: var(--background);\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .action-sheet-group::-webkit-scrollbar {\n    display: none;\n  }\n}\n.action-sheet-group-cancel {\n  flex-shrink: 0;\n  overflow: hidden;\n}\n\n.action-sheet-button::after {\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  position: absolute;\n  content: \"\";\n  opacity: 0;\n}\n\n.action-sheet-selected {\n  color: var(--button-color-selected);\n}\n.action-sheet-selected::after {\n  background: var(--button-background-selected);\n  opacity: var(--button-background-selected-opacity);\n}\n\n.action-sheet-button.ion-activated {\n  color: var(--button-color-activated);\n}\n.action-sheet-button.ion-activated::after {\n  background: var(--button-background-activated);\n  opacity: var(--button-background-activated-opacity);\n}\n\n.action-sheet-button.ion-focused {\n  color: var(--button-color-focused);\n}\n.action-sheet-button.ion-focused::after {\n  background: var(--button-background-focused);\n  opacity: var(--button-background-focused-opacity);\n}\n\n@media (any-hover: hover) {\n  .action-sheet-button:hover {\n    color: var(--button-color-hover);\n  }\n  .action-sheet-button:hover::after {\n    background: var(--button-background-hover);\n    opacity: var(--button-background-hover-opacity);\n  }\n}\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  --button-background: transparent;\n  --button-background-selected: currentColor;\n  --button-background-selected-opacity: 0;\n  --button-background-activated: transparent;\n  --button-background-activated-opacity: 0;\n  --button-background-hover: currentColor;\n  --button-background-hover-opacity: .04;\n  --button-background-focused: currentColor;\n  --button-background-focused-opacity: .12;\n  --button-color: var(--ion-color-step-850, #262626);\n  --color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54);\n}\n\n.action-sheet-wrapper {\n  -webkit-margin-start: auto;\n  margin-inline-start: auto;\n  -webkit-margin-end: auto;\n  margin-inline-end: auto;\n  margin-top: var(--ion-safe-area-top, 0);\n  margin-bottom: 0;\n}\n\n.action-sheet-title {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 20px;\n  padding-bottom: 17px;\n  min-height: 60px;\n  color: var(--color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.54));\n  font-size: 1rem;\n  text-align: start;\n}\n\n.action-sheet-sub-title {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 16px;\n  padding-bottom: 0;\n  font-size: 0.875rem;\n}\n\n.action-sheet-group:first-child {\n  padding-top: 0;\n}\n\n.action-sheet-group:last-child {\n  padding-bottom: var(--ion-safe-area-bottom);\n}\n\n.action-sheet-button {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  position: relative;\n  min-height: 52px;\n  font-size: 1rem;\n  text-align: start;\n  contain: content;\n  overflow: hidden;\n}\n\n.action-sheet-icon {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 32px;\n  margin-inline-end: 32px;\n  margin-top: 0;\n  margin-bottom: 0;\n  color: var(--color);\n  font-size: 1.5rem;\n}\n\n.action-sheet-button-inner {\n  justify-content: flex-start;\n}\n\n.action-sheet-selected {\n  font-weight: bold;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, readTask } from \"@stencil/core\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { BACKDROP, createDelegateController, createTriggerController, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class ActionSheet {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.getButtons().find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.buttons = [];\n        this.cssClass = undefined;\n        this.backdropDismiss = true;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    /**\n     * Present the action sheet overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'actionSheetEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the action sheet overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the action sheet.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the action sheet.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'actionSheetLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the action sheet did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionActionSheetDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the action sheet will dismiss.\n     *\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionActionSheetWillDismiss');\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        if (isCancel(role)) {\n            return this.dismiss(button.data, role);\n        }\n        const shouldDismiss = await this.callButtonHandler(button);\n        if (shouldDismiss) {\n            return this.dismiss(button.data, button.role);\n        }\n        return Promise.resolve();\n    }\n    async callButtonHandler(button) {\n        if (button) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const rtn = await safeCall(button.handler);\n            if (rtn === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n        }\n        return true;\n    }\n    getButtons() {\n        return this.buttons.map((b) => {\n            return typeof b === 'string' ? { text: b } : b;\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    disconnectedCallback() {\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n        this.triggerController.removeClickListener();\n    }\n    componentWillLoad() {\n        setOverlayId(this.el);\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         * 4. A group ref exists\n         */\n        const { groupEl, wrapperEl } = this;\n        if (!this.gesture && getIonMode(this) === 'ios' && wrapperEl && groupEl) {\n            readTask(() => {\n                const isScrollable = groupEl.scrollHeight > groupEl.clientHeight;\n                if (!isScrollable) {\n                    this.gesture = createButtonActiveGesture(wrapperEl, (refEl) => refEl.classList.contains('action-sheet-button'));\n                    this.gesture.enable(true);\n                }\n            });\n        }\n        /**\n         * If action sheet was rendered with isOpen=\"true\"\n         * then we should open action sheet immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    render() {\n        const { header, htmlAttributes, overlayIndex } = this;\n        const mode = getIonMode(this);\n        const allButtons = this.getButtons();\n        const cancelButton = allButtons.find((b) => b.role === 'cancel');\n        const buttons = allButtons.filter((b) => b.role !== 'cancel');\n        const headerID = `action-sheet-${overlayIndex}-header`;\n        return (h(Host, Object.assign({ key: '49c8b5b3412b5688e44f3e3fa18abcc01c75a770', role: \"dialog\", \"aria-modal\": \"true\", \"aria-labelledby\": header !== undefined ? headerID : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + this.overlayIndex}`,\n            }, class: Object.assign(Object.assign({ [mode]: true }, getClassMap(this.cssClass)), { 'overlay-hidden': true, 'action-sheet-translucent': this.translucent }), onIonActionSheetWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: '80b4c279fca194c6d65bbdb8128956641387bb05', tappable: this.backdropDismiss }), h(\"div\", { key: '245cde1873c07ef09267de8ab1a4d6ee51c0a83c', tabindex: \"0\" }), h(\"div\", { key: '045109bb2118decbe633f45aa3d71b824d37c0fd', class: \"action-sheet-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: 'b053f3a177b6ac7f2f76f5470f7023389f06cfd8', class: \"action-sheet-container\" }, h(\"div\", { key: '88287aa180c22389747c9fec702112e29f4ec039', class: \"action-sheet-group\", ref: (el) => (this.groupEl = el) }, header !== undefined && (h(\"div\", { key: '693e67af994a0018508a6deb867937916913eaa6', id: headerID, class: {\n                'action-sheet-title': true,\n                'action-sheet-has-sub-title': this.subHeader !== undefined,\n            } }, header, this.subHeader && h(\"div\", { key: '813cbb8d66e46d5a55a6c8bf52c5689882dc7002', class: \"action-sheet-sub-title\" }, this.subHeader))), buttons.map((b) => (h(\"button\", Object.assign({}, b.htmlAttributes, { type: \"button\", id: b.id, class: buttonClass(b), onClick: () => this.buttonClick(b) }), h(\"span\", { class: \"action-sheet-button-inner\" }, b.icon && h(\"ion-icon\", { icon: b.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" }), b.text), mode === 'md' && h(\"ion-ripple-effect\", null))))), cancelButton && (h(\"div\", { key: 'f99cd10e7d91d3014edac6109c3e6dc128737f7c', class: \"action-sheet-group action-sheet-group-cancel\" }, h(\"button\", Object.assign({ key: '595c6a39ba04185e80cc3b0705536f93b4f1ebf4' }, cancelButton.htmlAttributes, { type: \"button\", class: buttonClass(cancelButton), onClick: () => this.buttonClick(cancelButton) }), h(\"span\", { key: '1f40403b907c6e925405a8b405ede9f7f9885611', class: \"action-sheet-button-inner\" }, cancelButton.icon && (h(\"ion-icon\", { key: '75d5398d889fa70b514843b9cc73b2087a0bf1a0', icon: cancelButton.icon, \"aria-hidden\": \"true\", lazy: false, class: \"action-sheet-icon\" })), cancelButton.text), mode === 'md' && h(\"ion-ripple-effect\", { key: 'cda40def00755c69da9f6a67494eee4dc79550fc' })))))), h(\"div\", { key: '4d9432bae550ef618ba762857144f1558e3e29e7', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-action-sheet\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.scss\"],\n            \"md\": [\"action-sheet.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"action-sheet.ios.css\"],\n            \"md\": [\"action-sheet.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the action sheet is dismissed.\"\n                }\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(ActionSheetButton | string)[]\",\n                    \"resolved\": \"(string | ActionSheetButton<any>)[]\",\n                    \"references\": {\n                        \"ActionSheetButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./action-sheet-interface\",\n                            \"id\": \"src/components/action-sheet/action-sheet-interface.ts::ActionSheetButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of buttons for the action sheet.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Title for the action sheet.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Subtitle for the action sheet.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the action sheet.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the action sheet will open. If `false`, the action sheet will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the actionSheetController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe action sheet dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the action sheet to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionActionSheetDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionActionSheetWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionActionSheetWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionActionSheetDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has presented.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has presented.\\nShorthand for ionActionSheetWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the action sheet has dismissed.\\nShorthand for ionActionSheetWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the action sheet has dismissed.\\nShorthand for ionActionSheetDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the action sheet overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the action sheet overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the action sheet.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the action sheet.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the action sheet will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }];\n    }\n}\nconst buttonClass = (button) => {\n    return Object.assign({ 'action-sheet-button': true, 'ion-activatable': true, 'ion-focusable': true, [`action-sheet-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Enter Animation\n */\nexport const iosEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(1.1)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * iOS Alert Leave Animation\n */\nexport const iosLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: 0.99, transform: 'scale(1)' },\n        { offset: 1, opacity: 0, transform: 'scale(0.9)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(200)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Enter Animation\n */\nexport const mdEnterAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation\n        .addElement(baseEl.querySelector('ion-backdrop'))\n        .fromTo('opacity', 0.01, 'var(--backdrop-opacity)')\n        .beforeStyles({\n        'pointer-events': 'none',\n    })\n        .afterClearStyles(['pointer-events']);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).keyframes([\n        { offset: 0, opacity: '0.01', transform: 'scale(0.9)' },\n        { offset: 1, opacity: '1', transform: 'scale(1)' },\n    ]);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { createAnimation } from \"../../../utils/animation/animation\";\n/**\n * Md Alert Leave Animation\n */\nexport const mdLeaveAnimation = (baseEl) => {\n    const baseAnimation = createAnimation();\n    const backdropAnimation = createAnimation();\n    const wrapperAnimation = createAnimation();\n    backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 'var(--backdrop-opacity)', 0);\n    wrapperAnimation.addElement(baseEl.querySelector('.alert-wrapper')).fromTo('opacity', 0.99, 0);\n    return baseAnimation\n        .addElement(baseEl)\n        .easing('ease-in-out')\n        .duration(150)\n        .addAnimation([backdropAnimation, wrapperAnimation]);\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, #e6e6e6);\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * We want the height of the button to\n * scale with the text so the next never runs\n * into the edge of the button. We change the height\n * instead of adding padding because we would need to offset\n * the height the padding and the border. Since the border uses\n * a hairline (<1px) width, this will cause subpixel rendering\n * differences across browsers.\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-color-step-100, #f9f9f9));\n  --max-width: clamp(270px, 16.875rem, 324px);\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.3);\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-wrapper {\n  border-radius: 13px;\n  box-shadow: none;\n  overflow: hidden;\n}\n\n.alert-button .alert-button-inner {\n  pointer-events: none;\n}\n\n@supports (backdrop-filter: blur(0)) {\n  :host(.alert-translucent) .alert-wrapper {\n    background: rgba(var(--ion-background-color-rgb, 255, 255, 255), 0.9);\n    backdrop-filter: saturate(180%) blur(20px);\n  }\n}\n.alert-head {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 12px;\n  padding-bottom: 7px;\n  text-align: center;\n}\n\n.alert-title {\n  margin-top: 8px;\n  color: var(--ion-text-color, #000);\n  font-size: max(17px, 1.0625rem);\n  font-weight: 600;\n}\n\n.alert-sub-title {\n  color: var(--ion-color-step-600, #666666);\n  font-size: max(14px, 0.875rem);\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 16px;\n  padding-inline-start: 16px;\n  -webkit-padding-end: 16px;\n  padding-inline-end: 16px;\n  padding-top: 0;\n  padding-bottom: 21px;\n  color: var(--ion-text-color, #000);\n  font-size: max(13px, 0.8125rem);\n  text-align: center;\n}\n\n.alert-message {\n  max-height: 240px;\n}\n\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 12px;\n}\n\n.alert-input {\n  border-radius: 4px;\n  margin-top: 10px;\n  -webkit-padding-start: 6px;\n  padding-inline-start: 6px;\n  -webkit-padding-end: 6px;\n  padding-inline-end: 6px;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  border: 0.55px solid var(--ion-color-step-250, #bfbfbf);\n  background-color: var(--ion-background-color, #fff);\n  appearance: none;\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, #999999));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n.alert-input::-webkit-date-and-time-value {\n  /**\n   * The -webkit-date-and-time-value pseudo element is used \n   * to style the date/time input on iOS/Mobile Safari.\n   * To avoid layout shift between an empty state and a selected state,\n   * we set the height `18px` to match the native input height for \n   * date/time inputs on iOS/Mobile Safari.\n   */\n  height: 18px;\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  overscroll-behavior: contain;\n  max-height: 240px;\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n.alert-tappable {\n  min-height: 44px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  order: 0;\n  color: var(--ion-text-color, #000);\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-primary, #3880ff);\n}\n\n.alert-radio-icon {\n  position: relative;\n  order: 1;\n  min-width: 30px;\n}\n\n[aria-checked=true] .alert-radio-inner {\n  top: -7px;\n  position: absolute;\n  width: 6px;\n  height: 12px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary, #3880ff);\n}\n@supports (inset-inline-start: 0) {\n  [aria-checked=true] .alert-radio-inner {\n    inset-inline-start: 7px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  [aria-checked=true] .alert-radio-inner {\n    left: 7px;\n  }\n  :host-context([dir=rtl]) [aria-checked=true] .alert-radio-inner {\n    left: unset;\n    right: unset;\n    right: 7px;\n  }\n  [dir=rtl] [aria-checked=true] .alert-radio-inner {\n    left: unset;\n    right: unset;\n    right: 7px;\n  }\n  @supports selector(:dir(rtl)) {\n    [aria-checked=true] .alert-radio-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 7px;\n    }\n  }\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 13px;\n  padding-inline-start: 13px;\n  -webkit-padding-end: 13px;\n  padding-inline-end: 13px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-text-color, #000);\n}\n\n.alert-checkbox-icon {\n  border-radius: 50%;\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 6px;\n  margin-inline-end: 6px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  position: relative;\n  width: min(1.5rem, 66px);\n  height: min(1.5rem, 66px);\n  border-width: 0.0625rem;\n  border-style: solid;\n  border-color: var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));\n  background-color: var(--ion-item-background, var(--ion-background-color, #fff));\n  contain: strict;\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #3880ff);\n  background-color: var(--ion-color-primary, #3880ff);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: calc(min(1.5rem, 66px) / 6);\n  position: absolute;\n  width: calc(min(1.5rem, 66px) / 6 + 1px);\n  height: calc(min(1.5rem, 66px) * 0.5);\n  transform: rotate(45deg);\n  border-width: 0.0625rem;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-background-color, #fff);\n}\n@supports (inset-inline-start: 0) {\n  [aria-checked=true] .alert-checkbox-inner {\n    inset-inline-start: calc(min(1.5rem, 66px) / 3 + 1px);\n  }\n}\n@supports not (inset-inline-start: 0) {\n  [aria-checked=true] .alert-checkbox-inner {\n    left: calc(min(1.5rem, 66px) / 3 + 1px);\n  }\n  :host-context([dir=rtl]) [aria-checked=true] .alert-checkbox-inner {\n    left: unset;\n    right: unset;\n    right: calc(min(1.5rem, 66px) / 3 + 1px);\n  }\n  [dir=rtl] [aria-checked=true] .alert-checkbox-inner {\n    left: unset;\n    right: unset;\n    right: calc(min(1.5rem, 66px) / 3 + 1px);\n  }\n  @supports selector(:dir(rtl)) {\n    [aria-checked=true] .alert-checkbox-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: calc(min(1.5rem, 66px) / 3 + 1px);\n    }\n  }\n}\n\n.alert-button-group {\n  -webkit-margin-end: -0.55px;\n  margin-inline-end: -0.55px;\n  flex-wrap: wrap;\n}\n\n/**\n  * The right border should only be applied to the first button\n  * when the group has 2 or less buttons (horizontal).\n  * Otherwise, the right border should not be applied\n  * when the group has 3 or more buttons (vertical).\n  */\n.alert-button-group-vertical .alert-button {\n  border-right: none;\n}\n:host-context([dir=rtl]) .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n[dir=rtl] .alert-button-group-vertical .alert-button:last-child {\n  border-right: none;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button-group-vertical .alert-button:last-child:dir(rtl) {\n    border-right: none;\n  }\n}\n\n.alert-button {\n  /**\n   * This padding ensures that alerts\n   * with multiple buttons render on separate lines\n   * so the text does not run up against the edge of the button.\n   */\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border-radius: 0;\n  flex: 1 1 auto;\n  min-width: 50%;\n  height: max(44px, 2.75rem);\n  border-top: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  background-color: transparent;\n  color: var(--ion-color-primary, #3880ff);\n  font-size: max(17px, 1.0625rem);\n  overflow: hidden;\n}\n\n:host-context([dir=rtl]) .alert-button:first-child {\n  border-right: 0;\n}\n\n[dir=rtl] .alert-button:first-child {\n  border-right: 0;\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:first-child:dir(rtl) {\n    border-right: 0;\n  }\n}\n\n.alert-button:last-child {\n  border-right: 0;\n  font-weight: bold;\n}\n:host-context([dir=rtl]) .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n[dir=rtl] .alert-button:last-child {\n  border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n}\n\n@supports selector(:dir(rtl)) {\n  .alert-button:last-child:dir(rtl) {\n    border-right: 0.55px solid rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.2);\n  }\n}\n\n.alert-button.ion-activated {\n  background-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.1);\n}\n\n.alert-button-role-destructive,\n.alert-button-role-destructive.ion-activated,\n.alert-button-role-destructive.ion-focused {\n  color: var(--ion-color-danger, #eb445a);\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --background: Background of the alert\n   *\n   * @prop --min-width: Minimum width of the alert\n   * @prop --width: Width of the alert\n   * @prop --max-width: Maximum width of the alert\n   *\n   * @prop --min-height: Minimum height of the alert\n   * @prop --height: Height of the alert\n   * @prop --max-height: Maximum height of the alert\n   *\n   * @prop --backdrop-opacity: Opacity of the backdrop\n   */\n  --min-width: 250px;\n  --width: auto;\n  --min-height: auto;\n  --height: auto;\n  --max-height: 90%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  font-family: var(--ion-font-family, inherit);\n  contain: strict;\n  touch-action: none;\n  user-select: none;\n  z-index: 1001;\n}\n\n:host(.overlay-hidden) {\n  display: none;\n}\n\n:host(.alert-top) {\n  padding-top: 50px;\n  align-items: flex-start;\n}\n\n.alert-wrapper {\n  display: flex;\n  flex-direction: column;\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  background: var(--background);\n  contain: content;\n  opacity: 0;\n  z-index: 10;\n}\n\n.alert-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-sub-title {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  font-weight: normal;\n}\n\n/**\n * Alert has a maximum height in scenarios\n * such as the MD alert on tablet devices.\n * As a result, we need to make sure the inner\n * containers can scroll otherwise content\n * may be cut off.\n */\n.alert-message,\n.alert-input-group {\n  box-sizing: border-box;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  overscroll-behavior-y: contain;\n}\n\n.alert-checkbox-label,\n.alert-radio-label {\n  /**\n   * This allows long words to wrap to the next line\n   * instead of flowing outside of the container.\n   *\n   * The \"anywhere\" keyword should be used instead\n   * of the \"break-word\" keyword since the parent\n   * container is using flexbox. Flex relies on min-content and\n   * max-content intrinsic sizes to structure the layout. Flex will\n   * wrap content only until it reaches its min-content intrinsic size\n   * which in this case is equal to the longest word in this container.\n   * \"break-word\" does not shrink the min-content intrinsic size\n   * of the flex item which causes the long word to still overflow.\n   * \"anywhere\" on the other hand does shrink the min-content\n   * intrinsic size which allows the long word to wrap to the next line.\n   */\n  overflow-wrap: anywhere;\n}\n\n/**\n  * Scrollbars on mobile devices will be hidden.\n  * Users can still scroll the content by swiping.\n  * If a user has a fine pointing device, such as a\n  * mouse or trackpad, then scrollbars will be\n  * visible. This allows users to scroll the\n  * content with their pointing device.\n  * Otherwise, the user would have to use the\n  * keyboard to navigate through the options.\n  * This may not be intuitive for users who\n  * are not familiar with keyboard navigation.\n  */\n@media (any-pointer: coarse) {\n  .alert-checkbox-group::-webkit-scrollbar,\n  .alert-radio-group::-webkit-scrollbar,\n  .alert-message::-webkit-scrollbar {\n    display: none;\n  }\n}\n.alert-input {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  width: 100%;\n  border: 0;\n  background: inherit;\n  font: inherit;\n  box-sizing: border-box;\n}\n\n.alert-button-group {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n}\n\n.alert-button-group-vertical {\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n.alert-button {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  display: block;\n  border: 0;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  z-index: 0;\n}\n\n.alert-button.ion-focused,\n.alert-tappable.ion-focused {\n  background: var(--ion-color-step-100, #e6e6e6);\n}\n\n.alert-button-inner {\n  display: flex;\n  flex-flow: row nowrap;\n  flex-shrink: 0;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  min-height: inherit;\n}\n\n.alert-input-disabled,\n.alert-checkbox-button-disabled .alert-button-inner,\n.alert-radio-button-disabled .alert-button-inner {\n  cursor: default;\n  opacity: 0.5;\n  pointer-events: none;\n}\n\n.alert-tappable {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  display: flex;\n  width: 100%;\n  border: 0;\n  background: transparent;\n  font-size: inherit;\n  line-height: initial;\n  text-align: start;\n  appearance: none;\n  contain: content;\n}\n\n.alert-button,\n.alert-checkbox,\n.alert-input,\n.alert-radio {\n  outline: none;\n}\n\n.alert-radio-icon,\n.alert-checkbox-icon,\n.alert-checkbox-inner {\n  box-sizing: border-box;\n}\n\ntextarea.alert-input {\n  min-height: 37px;\n  resize: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Large display requirements for MD Alert:\n * 1. Maintain a minimum of 48px distance from the leading and\n * trailing edges of the screen. (48px * 2 = 96px)\n * 2. The width can increase up to 560px.\n * 3. The height can increase up to 560px.\n * Source: https://m2.material.io/components/dialogs#behavior\n */\n:host {\n  --background: var(--ion-overlay-background-color, var(--ion-background-color, #fff));\n  --max-width: 280px;\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n  font-size: 0.875rem;\n}\n\n.alert-wrapper {\n  border-radius: 4px;\n  box-shadow: 0 11px 15px -7px rgba(0, 0, 0, 0.2), 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.alert-head {\n  -webkit-padding-start: 23px;\n  padding-inline-start: 23px;\n  -webkit-padding-end: 23px;\n  padding-inline-end: 23px;\n  padding-top: 20px;\n  padding-bottom: 15px;\n  text-align: start;\n}\n\n.alert-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1.25rem;\n  font-weight: 500;\n}\n\n.alert-sub-title {\n  color: var(--ion-text-color, #000);\n  font-size: 1rem;\n}\n\n.alert-message,\n.alert-input-group {\n  -webkit-padding-start: 24px;\n  padding-inline-start: 24px;\n  -webkit-padding-end: 24px;\n  padding-inline-end: 24px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: var(--ion-color-step-550, #737373);\n}\n\n.alert-message {\n  font-size: 1rem;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-message {\n    max-height: 266px;\n  }\n}\n.alert-message:empty {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.alert-head + .alert-message {\n  padding-top: 0;\n}\n\n.alert-input {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border-bottom: 1px solid var(--ion-color-step-150, #d9d9d9);\n  color: var(--ion-text-color, #000);\n}\n.alert-input::placeholder {\n  color: var(--ion-placeholder-color, var(--ion-color-step-400, #999999));\n  font-family: inherit;\n  font-weight: inherit;\n}\n.alert-input::-ms-clear {\n  display: none;\n}\n\n.alert-input:focus {\n  margin-bottom: 4px;\n  border-bottom: 2px solid var(--ion-color-primary, #3880ff);\n}\n\n.alert-radio-group,\n.alert-checkbox-group {\n  position: relative;\n  border-top: 1px solid var(--ion-color-step-150, #d9d9d9);\n  border-bottom: 1px solid var(--ion-color-step-150, #d9d9d9);\n  overflow: auto;\n}\n\n/**\n * MD Alerts on tablets can expand vertically up to\n * a total maximum height. We only want to set a max-height\n * on mobile phones.\n */\n@media screen and (max-width: 767px) {\n  .alert-radio-group,\n  .alert-checkbox-group {\n    max-height: 266px;\n  }\n}\n.alert-tappable {\n  position: relative;\n  min-height: 48px;\n}\n\n.alert-radio-label {\n  -webkit-padding-start: 52px;\n  padding-inline-start: 52px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  color: var(--ion-color-step-850, #262626);\n  font-size: 1rem;\n}\n\n.alert-radio-icon {\n  top: 0;\n  border-radius: 50%;\n  display: block;\n  position: relative;\n  width: 20px;\n  height: 20px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, #737373);\n}\n@supports (inset-inline-start: 0) {\n  .alert-radio-icon {\n    inset-inline-start: 26px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .alert-radio-icon {\n    left: 26px;\n  }\n  :host-context([dir=rtl]) .alert-radio-icon {\n    left: unset;\n    right: unset;\n    right: 26px;\n  }\n  [dir=rtl] .alert-radio-icon {\n    left: unset;\n    right: unset;\n    right: 26px;\n  }\n  @supports selector(:dir(rtl)) {\n    .alert-radio-icon:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 26px;\n    }\n  }\n}\n\n.alert-radio-inner {\n  top: 3px;\n  border-radius: 50%;\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  transform: scale3d(0, 0, 0);\n  transition: transform 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-color: var(--ion-color-primary, #3880ff);\n}\n@supports (inset-inline-start: 0) {\n  .alert-radio-inner {\n    inset-inline-start: 3px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .alert-radio-inner {\n    left: 3px;\n  }\n  :host-context([dir=rtl]) .alert-radio-inner {\n    left: unset;\n    right: unset;\n    right: 3px;\n  }\n  [dir=rtl] .alert-radio-inner {\n    left: unset;\n    right: unset;\n    right: 3px;\n  }\n  @supports selector(:dir(rtl)) {\n    .alert-radio-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 3px;\n    }\n  }\n}\n\n[aria-checked=true] .alert-radio-label {\n  color: var(--ion-color-step-850, #262626);\n}\n\n[aria-checked=true] .alert-radio-icon {\n  border-color: var(--ion-color-primary, #3880ff);\n}\n\n[aria-checked=true] .alert-radio-inner {\n  transform: scale3d(1, 1, 1);\n}\n\n.alert-checkbox-label {\n  -webkit-padding-start: 53px;\n  padding-inline-start: 53px;\n  -webkit-padding-end: 26px;\n  padding-inline-end: 26px;\n  padding-top: 13px;\n  padding-bottom: 13px;\n  flex: 1;\n  width: calc(100% - 53px);\n  color: var(--ion-color-step-850, #262626);\n  font-size: 1rem;\n}\n\n.alert-checkbox-icon {\n  top: 0;\n  border-radius: 2px;\n  position: relative;\n  width: 16px;\n  height: 16px;\n  border-width: 2px;\n  border-style: solid;\n  border-color: var(--ion-color-step-550, #737373);\n  contain: strict;\n}\n@supports (inset-inline-start: 0) {\n  .alert-checkbox-icon {\n    inset-inline-start: 26px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .alert-checkbox-icon {\n    left: 26px;\n  }\n  :host-context([dir=rtl]) .alert-checkbox-icon {\n    left: unset;\n    right: unset;\n    right: 26px;\n  }\n  [dir=rtl] .alert-checkbox-icon {\n    left: unset;\n    right: unset;\n    right: 26px;\n  }\n  @supports selector(:dir(rtl)) {\n    .alert-checkbox-icon:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 26px;\n    }\n  }\n}\n\n[aria-checked=true] .alert-checkbox-icon {\n  border-color: var(--ion-color-primary, #3880ff);\n  background-color: var(--ion-color-primary, #3880ff);\n}\n\n[aria-checked=true] .alert-checkbox-inner {\n  top: 0;\n  position: absolute;\n  width: 6px;\n  height: 10px;\n  transform: rotate(45deg);\n  border-width: 2px;\n  border-top-width: 0;\n  border-left-width: 0;\n  border-style: solid;\n  border-color: var(--ion-color-primary-contrast, #fff);\n}\n@supports (inset-inline-start: 0) {\n  [aria-checked=true] .alert-checkbox-inner {\n    inset-inline-start: 3px;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  [aria-checked=true] .alert-checkbox-inner {\n    left: 3px;\n  }\n  :host-context([dir=rtl]) [aria-checked=true] .alert-checkbox-inner {\n    left: unset;\n    right: unset;\n    right: 3px;\n  }\n  [dir=rtl] [aria-checked=true] .alert-checkbox-inner {\n    left: unset;\n    right: unset;\n    right: 3px;\n  }\n  @supports selector(:dir(rtl)) {\n    [aria-checked=true] .alert-checkbox-inner:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 3px;\n    }\n  }\n}\n\n.alert-button-group {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  box-sizing: border-box;\n  flex-wrap: wrap-reverse;\n  justify-content: flex-end;\n}\n\n.alert-button {\n  border-radius: 2px;\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 0;\n  margin-bottom: 0;\n  -webkit-padding-start: 10px;\n  padding-inline-start: 10px;\n  -webkit-padding-end: 10px;\n  padding-inline-end: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n  background-color: transparent;\n  color: var(--ion-color-primary, #3880ff);\n  font-weight: 500;\n  text-align: end;\n  text-transform: uppercase;\n  overflow: hidden;\n}\n\n.alert-button-inner {\n  justify-content: flex-end;\n}\n\n/**\n * MD alerts should scale up to 560px x 560px\n * on tablet dimensions.\n */\n@media screen and (min-width: 768px) {\n  :host {\n    --max-width: min(100vw - 96px, 560px);\n    --max-height: min(100vh - 96px, 560px);\n  }\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, forceUpdate, h } from \"@stencil/core\";\nimport { ENABLE_HTML_CONTENT_DEFAULT } from \"../../utils/config\";\nimport { createButtonActiveGesture } from \"../../utils/gesture/button-active\";\nimport { raf } from \"../../utils/helpers\";\nimport { createLockController } from \"../../utils/lock-controller\";\nimport { createDelegateController, createTriggerController, BACKDROP, dismiss, eventMethod, isCancel, prepareOverlay, present, safeCall, setOverlayId, } from \"../../utils/overlays\";\nimport { sanitizeDOMString } from \"../../utils/sanitization/index\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { config } from \"../../global/config\";\nimport { getIonMode } from \"../../global/ionic-global\";\nimport { iosEnterAnimation } from \"./animations/ios.enter\";\nimport { iosLeaveAnimation } from \"./animations/ios.leave\";\nimport { mdEnterAnimation } from \"./animations/md.enter\";\nimport { mdLeaveAnimation } from \"./animations/md.leave\";\n// TODO(FW-2832): types\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n */\nexport class Alert {\n    constructor() {\n        this.delegateController = createDelegateController(this);\n        this.lockController = createLockController();\n        this.triggerController = createTriggerController();\n        this.customHTMLEnabled = config.get('innerHTMLTemplatesEnabled', ENABLE_HTML_CONTENT_DEFAULT);\n        this.processedInputs = [];\n        this.processedButtons = [];\n        this.presented = false;\n        this.onBackdropTap = () => {\n            this.dismiss(undefined, BACKDROP);\n        };\n        this.dispatchCancelHandler = (ev) => {\n            const role = ev.detail.role;\n            if (isCancel(role)) {\n                const cancelButton = this.processedButtons.find((b) => b.role === 'cancel');\n                this.callButtonHandler(cancelButton);\n            }\n        };\n        this.overlayIndex = undefined;\n        this.delegate = undefined;\n        this.hasController = false;\n        this.keyboardClose = true;\n        this.enterAnimation = undefined;\n        this.leaveAnimation = undefined;\n        this.cssClass = undefined;\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.buttons = [];\n        this.inputs = [];\n        this.backdropDismiss = true;\n        this.translucent = false;\n        this.animated = true;\n        this.htmlAttributes = undefined;\n        this.isOpen = false;\n        this.trigger = undefined;\n    }\n    onIsOpenChange(newValue, oldValue) {\n        if (newValue === true && oldValue === false) {\n            this.present();\n        }\n        else if (newValue === false && oldValue === true) {\n            this.dismiss();\n        }\n    }\n    triggerChanged() {\n        const { trigger, el, triggerController } = this;\n        if (trigger) {\n            triggerController.addClickListener(el, trigger);\n        }\n    }\n    onKeydown(ev) {\n        const inputTypes = new Set(this.processedInputs.map((i) => i.type));\n        /**\n         * Based on keyboard navigation requirements, the\n         * checkbox should not respond to the enter keydown event.\n         */\n        if (inputTypes.has('checkbox') && ev.key === 'Enter') {\n            ev.preventDefault();\n            return;\n        }\n        // The only inputs we want to navigate between using arrow keys are the radios\n        // ignore the keydown event if it is not on a radio button\n        if (!inputTypes.has('radio') ||\n            (ev.target && !this.el.contains(ev.target)) ||\n            ev.target.classList.contains('alert-button')) {\n            return;\n        }\n        // Get all radios inside of the radio group and then\n        // filter out disabled radios since we need to skip those\n        const query = this.el.querySelectorAll('.alert-radio');\n        const radios = Array.from(query).filter((radio) => !radio.disabled);\n        // The focused radio is the one that shares the same id as\n        // the event target\n        const index = radios.findIndex((radio) => radio.id === ev.target.id);\n        // We need to know what the next radio element should\n        // be in order to change the focus\n        let nextEl;\n        // If hitting arrow down or arrow right, move to the next radio\n        // If we're on the last radio, move to the first radio\n        if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n            nextEl = index === radios.length - 1 ? radios[0] : radios[index + 1];\n        }\n        // If hitting arrow up or arrow left, move to the previous radio\n        // If we're on the first radio, move to the last radio\n        if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n            nextEl = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n        }\n        if (nextEl && radios.includes(nextEl)) {\n            const nextProcessed = this.processedInputs.find((input) => input.id === (nextEl === null || nextEl === void 0 ? void 0 : nextEl.id));\n            if (nextProcessed) {\n                this.rbClick(nextProcessed);\n                nextEl.focus();\n            }\n        }\n    }\n    buttonsChanged() {\n        const buttons = this.buttons;\n        this.processedButtons = buttons.map((btn) => {\n            return typeof btn === 'string' ? { text: btn, role: btn.toLowerCase() === 'cancel' ? 'cancel' : undefined } : btn;\n        });\n    }\n    inputsChanged() {\n        const inputs = this.inputs;\n        // Get the first input that is not disabled and the checked one\n        // If an enabled checked input exists, set it to be the focusable input\n        // otherwise we default to focus the first input\n        // This will only be used when the input is type radio\n        const first = inputs.find((input) => !input.disabled);\n        const checked = inputs.find((input) => input.checked && !input.disabled);\n        const focusable = checked || first;\n        // An alert can be created with several different inputs. Radios,\n        // checkboxes and inputs are all accepted, but they cannot be mixed.\n        const inputTypes = new Set(inputs.map((i) => i.type));\n        if (inputTypes.has('checkbox') && inputTypes.has('radio')) {\n            console.warn(`Alert cannot mix input types: ${Array.from(inputTypes.values()).join('/')}. Please see alert docs for more info.`);\n        }\n        this.inputType = inputTypes.values().next().value;\n        this.processedInputs = inputs.map((i, index) => {\n            var _a;\n            return ({\n                type: i.type || 'text',\n                name: i.name || `${index}`,\n                placeholder: i.placeholder || '',\n                value: i.value,\n                label: i.label,\n                checked: !!i.checked,\n                disabled: !!i.disabled,\n                id: i.id || `alert-input-${this.overlayIndex}-${index}`,\n                handler: i.handler,\n                min: i.min,\n                max: i.max,\n                cssClass: (_a = i.cssClass) !== null && _a !== void 0 ? _a : '',\n                attributes: i.attributes || {},\n                tabindex: i.type === 'radio' && i !== focusable ? -1 : 0,\n            });\n        });\n    }\n    connectedCallback() {\n        prepareOverlay(this.el);\n        this.triggerChanged();\n    }\n    componentWillLoad() {\n        setOverlayId(this.el);\n        this.inputsChanged();\n        this.buttonsChanged();\n    }\n    disconnectedCallback() {\n        this.triggerController.removeClickListener();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    componentDidLoad() {\n        /**\n         * Only create gesture if:\n         * 1. A gesture does not already exist\n         * 2. App is running in iOS mode\n         * 3. A wrapper ref exists\n         */\n        if (!this.gesture && getIonMode(this) === 'ios' && this.wrapperEl) {\n            this.gesture = createButtonActiveGesture(this.wrapperEl, (refEl) => refEl.classList.contains('alert-button'));\n            this.gesture.enable(true);\n        }\n        /**\n         * If alert was rendered with isOpen=\"true\"\n         * then we should open alert immediately.\n         */\n        if (this.isOpen === true) {\n            raf(() => this.present());\n        }\n        /**\n         * When binding values in frameworks such as Angular\n         * it is possible for the value to be set after the Web Component\n         * initializes but before the value watcher is set up in Stencil.\n         * As a result, the watcher callback may not be fired.\n         * We work around this by manually calling the watcher\n         * callback when the component has loaded and the watcher\n         * is configured.\n         */\n        this.triggerChanged();\n    }\n    /**\n     * Present the alert overlay after it has been created.\n     */\n    async present() {\n        const unlock = await this.lockController.lock();\n        await this.delegateController.attachViewToDom();\n        await present(this, 'alertEnter', iosEnterAnimation, mdEnterAnimation);\n        unlock();\n    }\n    /**\n     * Dismiss the alert overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the alert.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the alert.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     *\n     * This is a no-op if the overlay has not been presented yet. If you want\n     * to remove an overlay from the DOM that was never presented, use the\n     * [remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\n     */\n    async dismiss(data, role) {\n        const unlock = await this.lockController.lock();\n        const dismissed = await dismiss(this, data, role, 'alertLeave', iosLeaveAnimation, mdLeaveAnimation);\n        if (dismissed) {\n            this.delegateController.removeViewFromDom();\n        }\n        unlock();\n        return dismissed;\n    }\n    /**\n     * Returns a promise that resolves when the alert did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionAlertDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the alert will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionAlertWillDismiss');\n    }\n    rbClick(selectedInput) {\n        for (const input of this.processedInputs) {\n            input.checked = input === selectedInput;\n            input.tabindex = input === selectedInput ? 0 : -1;\n        }\n        this.activeId = selectedInput.id;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    cbClick(selectedInput) {\n        selectedInput.checked = !selectedInput.checked;\n        safeCall(selectedInput.handler, selectedInput);\n        forceUpdate(this);\n    }\n    async buttonClick(button) {\n        const role = button.role;\n        const values = this.getValues();\n        if (isCancel(role)) {\n            return this.dismiss({ values }, role);\n        }\n        const returnData = await this.callButtonHandler(button, values);\n        if (returnData !== false) {\n            return this.dismiss(Object.assign({ values }, returnData), button.role);\n        }\n        return false;\n    }\n    async callButtonHandler(button, data) {\n        if (button === null || button === void 0 ? void 0 : button.handler) {\n            // a handler has been provided, execute it\n            // pass the handler the values from the inputs\n            const returnData = await safeCall(button.handler, data);\n            if (returnData === false) {\n                // if the return value of the handler is false then do not dismiss\n                return false;\n            }\n            if (typeof returnData === 'object') {\n                return returnData;\n            }\n        }\n        return {};\n    }\n    getValues() {\n        if (this.processedInputs.length === 0) {\n            // this is an alert without any options/inputs at all\n            return undefined;\n        }\n        if (this.inputType === 'radio') {\n            // this is an alert with radio buttons (single value select)\n            // return the one value which is checked, otherwise undefined\n            const checkedInput = this.processedInputs.find((i) => !!i.checked);\n            return checkedInput ? checkedInput.value : undefined;\n        }\n        if (this.inputType === 'checkbox') {\n            // this is an alert with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return this.processedInputs.filter((i) => i.checked).map((i) => i.value);\n        }\n        // this is an alert with text inputs\n        // return an object of all the values with the input name as the key\n        const values = {};\n        this.processedInputs.forEach((i) => {\n            values[i.name] = i.value || '';\n        });\n        return values;\n    }\n    renderAlertInputs() {\n        switch (this.inputType) {\n            case 'checkbox':\n                return this.renderCheckbox();\n            case 'radio':\n                return this.renderRadio();\n            default:\n                return this.renderInput();\n        }\n    }\n    renderCheckbox() {\n        const inputs = this.processedInputs;\n        const mode = getIonMode(this);\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-checkbox-group\" }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.cbClick(i), \"aria-checked\": `${i.checked}`, id: i.id, disabled: i.disabled, tabIndex: i.tabindex, role: \"checkbox\", class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-tappable': true, 'alert-checkbox': true, 'alert-checkbox-button': true, 'ion-focusable': true, 'alert-checkbox-button-disabled': i.disabled || false }) }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-checkbox-icon\" }, h(\"div\", { class: \"alert-checkbox-inner\" })), h(\"div\", { class: \"alert-checkbox-label\" }, i.label)), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderRadio() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-radio-group\", role: \"radiogroup\", \"aria-activedescendant\": this.activeId }, inputs.map((i) => (h(\"button\", { type: \"button\", onClick: () => this.rbClick(i), \"aria-checked\": `${i.checked}`, disabled: i.disabled, id: i.id, tabIndex: i.tabindex, class: Object.assign(Object.assign({}, getClassMap(i.cssClass)), { 'alert-radio-button': true, 'alert-tappable': true, 'alert-radio': true, 'ion-focusable': true, 'alert-radio-button-disabled': i.disabled || false }), role: \"radio\" }, h(\"div\", { class: \"alert-button-inner\" }, h(\"div\", { class: \"alert-radio-icon\" }, h(\"div\", { class: \"alert-radio-inner\" })), h(\"div\", { class: \"alert-radio-label\" }, i.label)))))));\n    }\n    renderInput() {\n        const inputs = this.processedInputs;\n        if (inputs.length === 0) {\n            return null;\n        }\n        return (h(\"div\", { class: \"alert-input-group\" }, inputs.map((i) => {\n            var _a, _b, _c, _d;\n            if (i.type === 'textarea') {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"textarea\", Object.assign({ placeholder: i.placeholder, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_b = (_a = i.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n            else {\n                return (h(\"div\", { class: \"alert-input-wrapper\" }, h(\"input\", Object.assign({ placeholder: i.placeholder, type: i.type, min: i.min, max: i.max, value: i.value, id: i.id, tabIndex: i.tabindex }, i.attributes, { disabled: (_d = (_c = i.attributes) === null || _c === void 0 ? void 0 : _c.disabled) !== null && _d !== void 0 ? _d : i.disabled, class: inputClass(i), onInput: (e) => {\n                        var _a;\n                        i.value = e.target.value;\n                        if ((_a = i.attributes) === null || _a === void 0 ? void 0 : _a.onInput) {\n                            i.attributes.onInput(e);\n                        }\n                    } }))));\n            }\n        })));\n    }\n    renderAlertButtons() {\n        const buttons = this.processedButtons;\n        const mode = getIonMode(this);\n        const alertButtonGroupClass = {\n            'alert-button-group': true,\n            'alert-button-group-vertical': buttons.length > 2,\n        };\n        return (h(\"div\", { class: alertButtonGroupClass }, buttons.map((button) => (h(\"button\", Object.assign({}, button.htmlAttributes, { type: \"button\", id: button.id, class: buttonClass(button), tabIndex: 0, onClick: () => this.buttonClick(button) }), h(\"span\", { class: \"alert-button-inner\" }, button.text), mode === 'md' && h(\"ion-ripple-effect\", null))))));\n    }\n    renderAlertMessage(msgId) {\n        const { customHTMLEnabled, message } = this;\n        if (customHTMLEnabled) {\n            return h(\"div\", { id: msgId, class: \"alert-message\", innerHTML: sanitizeDOMString(message) });\n        }\n        return (h(\"div\", { id: msgId, class: \"alert-message\" }, message));\n    }\n    render() {\n        const { overlayIndex, header, subHeader, message, htmlAttributes } = this;\n        const mode = getIonMode(this);\n        const hdrId = `alert-${overlayIndex}-hdr`;\n        const subHdrId = `alert-${overlayIndex}-sub-hdr`;\n        const msgId = `alert-${overlayIndex}-msg`;\n        const role = this.inputs.length > 0 || this.buttons.length > 0 ? 'alertdialog' : 'alert';\n        /**\n         * If the header is defined, use that. Otherwise, fall back to the subHeader.\n         * If neither is defined, don't set aria-labelledby.\n         */\n        const ariaLabelledBy = header ? hdrId : subHeader ? subHdrId : null;\n        return (h(Host, Object.assign({ key: 'd623baf94bddc6b1932f128f6a605c6232b37fb5', role: role, \"aria-modal\": \"true\", \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": message !== undefined ? msgId : null, tabindex: \"-1\" }, htmlAttributes, { style: {\n                zIndex: `${20000 + overlayIndex}`,\n            }, class: Object.assign(Object.assign({}, getClassMap(this.cssClass)), { [mode]: true, 'overlay-hidden': true, 'alert-translucent': this.translucent }), onIonAlertWillDismiss: this.dispatchCancelHandler, onIonBackdropTap: this.onBackdropTap }), h(\"ion-backdrop\", { key: 'a594ba787a73a33ba10e7a32ca863bd610730cb6', tappable: this.backdropDismiss }), h(\"div\", { key: 'c95ef8332f46ce93fb8d3b7f0168ae5b939c52fd', tabindex: \"0\" }), h(\"div\", { key: '1895ea338a8e446d01c6151552af658e1e1c841d', class: \"alert-wrapper ion-overlay-wrapper\", ref: (el) => (this.wrapperEl = el) }, h(\"div\", { key: '5156393eb8a8f3e60e7d4bce20b0b85196141b0e', class: \"alert-head\" }, header && (h(\"h2\", { key: '72ba8253644adfeeb8472531234d3572af28b473', id: hdrId, class: \"alert-title\" }, header)), subHeader && (h(\"h2\", { key: 'eb8d2443170fbea182199bb3b3f5446c98f1c17e', id: subHdrId, class: \"alert-sub-title\" }, subHeader))), this.renderAlertMessage(msgId), this.renderAlertInputs(), this.renderAlertButtons()), h(\"div\", { key: '13c6fac1a58574156951ae2dfdd24790c0812e11', tabindex: \"0\" })));\n    }\n    static get is() { return \"ion-alert\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"alert.ios.scss\"],\n            \"md\": [\"alert.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"alert.ios.css\"],\n            \"md\": [\"alert.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"overlayIndex\": {\n                \"type\": \"number\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"number\",\n                    \"resolved\": \"number\",\n                    \"references\": {}\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"overlay-index\",\n                \"reflect\": false\n            },\n            \"delegate\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"FrameworkDelegate\",\n                    \"resolved\": \"FrameworkDelegate | undefined\",\n                    \"references\": {\n                        \"FrameworkDelegate\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::FrameworkDelegate\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                }\n            },\n            \"hasController\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"\"\n                },\n                \"attribute\": \"has-controller\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"keyboardClose\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the keyboard will be automatically dismissed when the overlay is presented.\"\n                },\n                \"attribute\": \"keyboard-close\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"enterAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is presented.\"\n                }\n            },\n            \"leaveAnimation\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"AnimationBuilder\",\n                    \"resolved\": \"((baseEl: any, opts?: any) => Animation) | undefined\",\n                    \"references\": {\n                        \"AnimationBuilder\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::AnimationBuilder\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Animation to use when the alert is dismissed.\"\n                }\n            },\n            \"cssClass\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | string[]\",\n                    \"resolved\": \"string | string[] | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional classes to apply for custom CSS. If multiple classes are\\nprovided they should be separated by spaces.\"\n                },\n                \"attribute\": \"css-class\",\n                \"reflect\": false\n            },\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main title in the heading of the alert.\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subtitle in the heading of the alert. Displayed under the title.\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | IonicSafeString\",\n                    \"resolved\": \"IonicSafeString | string | undefined\",\n                    \"references\": {\n                        \"IonicSafeString\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/sanitization\",\n                            \"id\": \"src/utils/sanitization/index.ts::IonicSafeString\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The main message to be displayed in the alert.\\n`message` can accept either plaintext or HTML as a string.\\nTo display characters normally reserved for HTML, they\\nmust be escaped. For example `<Ionic>` would become\\n`&lt;Ionic&gt;`\\n\\nFor more information: [Security Documentation](https://ionicframework.com/docs/faq/security)\\n\\nThis property accepts custom HTML as a string.\\nContent is parsed as plaintext by default.\\n`innerHTMLTemplatesEnabled` must be set to `true` in the Ionic config\\nbefore custom HTML can be used.\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"buttons\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"(AlertButton | string)[]\",\n                    \"resolved\": \"(string | AlertButton)[]\",\n                    \"references\": {\n                        \"AlertButton\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertButton\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of buttons to be added to the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"inputs\": {\n                \"type\": \"unknown\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"AlertInput[]\",\n                    \"resolved\": \"AlertInput[]\",\n                    \"references\": {\n                        \"AlertInput\": {\n                            \"location\": \"import\",\n                            \"path\": \"./alert-interface\",\n                            \"id\": \"src/components/alert/alert-interface.ts::AlertInput\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Array of input to show in the alert.\"\n                },\n                \"defaultValue\": \"[]\"\n            },\n            \"backdropDismiss\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be dismissed when the backdrop is clicked.\"\n                },\n                \"attribute\": \"backdrop-dismiss\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"translucent\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will be translucent.\\nOnly applies when the mode is `\\\"ios\\\"` and the device supports\\n[`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\"\n                },\n                \"attribute\": \"translucent\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"animated\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will animate.\"\n                },\n                \"attribute\": \"animated\",\n                \"reflect\": false,\n                \"defaultValue\": \"true\"\n            },\n            \"htmlAttributes\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"{ [key: string]: any }\",\n                    \"resolved\": \"undefined | { [key: string]: any; }\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Additional attributes to pass to the alert.\"\n                }\n            },\n            \"isOpen\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the alert will open. If `false`, the alert will close.\\nUse this if you need finer grained control over presentation, otherwise\\njust use the alertController or the `trigger` property.\\nNote: `isOpen` will not automatically be set back to `false` when\\nthe alert dismisses. You will need to do that in your code.\"\n                },\n                \"attribute\": \"is-open\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"trigger\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string | undefined\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An ID corresponding to the trigger element that\\ncauses the alert to open when clicked.\"\n                },\n                \"attribute\": \"trigger\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"didPresent\",\n                \"name\": \"ionAlertDidPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresent\",\n                \"name\": \"ionAlertWillPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismiss\",\n                \"name\": \"ionAlertWillDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismiss\",\n                \"name\": \"ionAlertDidDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didPresentShorthand\",\n                \"name\": \"didPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has presented.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willPresentShorthand\",\n                \"name\": \"willPresent\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has presented.\\nShorthand for ionAlertWillPresent.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"willDismissShorthand\",\n                \"name\": \"willDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted before the alert has dismissed.\\nShorthand for ionAlertWillDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"didDismissShorthand\",\n                \"name\": \"didDismiss\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted after the alert has dismissed.\\nShorthand for ionAlertDidDismiss.\"\n                },\n                \"complexType\": {\n                    \"original\": \"OverlayEventDetail\",\n                    \"resolved\": \"OverlayEventDetail<any>\",\n                    \"references\": {\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get methods() {\n        return {\n            \"present\": {\n                \"complexType\": {\n                    \"signature\": \"() => Promise<void>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<void>\"\n                },\n                \"docs\": {\n                    \"text\": \"Present the alert overlay after it has been created.\",\n                    \"tags\": []\n                }\n            },\n            \"dismiss\": {\n                \"complexType\": {\n                    \"signature\": \"(data?: any, role?: string) => Promise<boolean>\",\n                    \"parameters\": [{\n                            \"name\": \"data\",\n                            \"type\": \"any\",\n                            \"docs\": \"Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"role\",\n                            \"type\": \"string | undefined\",\n                            \"docs\": \"The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        }\n                    },\n                    \"return\": \"Promise<boolean>\"\n                },\n                \"docs\": {\n                    \"text\": \"Dismiss the alert overlay after it has been presented.\",\n                    \"tags\": [{\n                            \"name\": \"param\",\n                            \"text\": \"data Any data to emit in the dismiss events.\"\n                        }, {\n                            \"name\": \"param\",\n                            \"text\": \"role The role of the element that is dismissing the alert.\\nThis can be useful in a button handler for determining which button was\\nclicked to dismiss the alert.\\nSome examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n\\nThis is a no-op if the overlay has not been presented yet. If you want\\nto remove an overlay from the DOM that was never presented, use the\\n[remove](https://developer.mozilla.org/en-US/docs/Web/API/Element/remove) method.\"\n                        }]\n                }\n            },\n            \"onDidDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert did dismiss.\",\n                    \"tags\": []\n                }\n            },\n            \"onWillDismiss\": {\n                \"complexType\": {\n                    \"signature\": \"<T = any>() => Promise<OverlayEventDetail<T>>\",\n                    \"parameters\": [],\n                    \"references\": {\n                        \"Promise\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::Promise\"\n                        },\n                        \"OverlayEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../utils/overlays-interface\",\n                            \"id\": \"src/utils/overlays-interface.ts::OverlayEventDetail\"\n                        },\n                        \"T\": {\n                            \"location\": \"global\",\n                            \"id\": \"global::T\"\n                        }\n                    },\n                    \"return\": \"Promise<OverlayEventDetail<T>>\"\n                },\n                \"docs\": {\n                    \"text\": \"Returns a promise that resolves when the alert will dismiss.\",\n                    \"tags\": []\n                }\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"isOpen\",\n                \"methodName\": \"onIsOpenChange\"\n            }, {\n                \"propName\": \"trigger\",\n                \"methodName\": \"triggerChanged\"\n            }, {\n                \"propName\": \"buttons\",\n                \"methodName\": \"buttonsChanged\"\n            }, {\n                \"propName\": \"inputs\",\n                \"methodName\": \"inputsChanged\"\n            }];\n    }\n    static get listeners() {\n        return [{\n                \"name\": \"keydown\",\n                \"method\": \"onKeydown\",\n                \"target\": \"document\",\n                \"capture\": false,\n                \"passive\": false\n            }];\n    }\n}\nconst inputClass = (input) => {\n    var _a, _b, _c;\n    return Object.assign(Object.assign({ 'alert-input': true, 'alert-input-disabled': ((_b = (_a = input.attributes) === null || _a === void 0 ? void 0 : _a.disabled) !== null && _b !== void 0 ? _b : input.disabled) || false }, getClassMap(input.cssClass)), getClassMap(input.attributes ? (_c = input.attributes.class) === null || _c === void 0 ? void 0 : _c.toString() : ''));\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'alert-button': true, 'ion-focusable': true, 'ion-activatable': true, [`alert-button-role-${button.role}`]: button.role !== undefined }, getClassMap(button.cssClass));\n};\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --size: Size of the checkbox icon\n   *\n   * @prop --checkbox-background: Background of the checkbox icon\n   * @prop --checkbox-background-checked: Background of the checkbox icon when checked\n   *\n   * @prop --border-color: Border color of the checkbox icon\n   * @prop --border-radius: Border radius of the checkbox icon\n   * @prop --border-width: Border width of the checkbox icon\n   * @prop --border-style: Border style of the checkbox icon\n   * @prop --border-color-checked: Border color of the checkbox icon when checked\n   *\n   * @prop --transition: Transition of the checkbox icon\n   *\n   * @prop --checkmark-color: Color of the checkbox checkmark when checked\n   * @prop --checkmark-width: Stroke width of the checkbox checkmark\n   */\n  --checkbox-background-checked: var(--ion-color-primary, #3880ff);\n  --border-color-checked: var(--ion-color-primary, #3880ff);\n  --checkmark-color: var(--ion-color-primary-contrast, #fff);\n  --checkmark-width: 1;\n  --transition: none;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Checkbox can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]:not(.legacy-checkbox)),\n:host([slot=end]:not(.legacy-checkbox)) {\n  width: auto;\n}\n\n:host(.legacy-checkbox) {\n  width: var(--size);\n  height: var(--size);\n}\n\n:host(.ion-color) {\n  --checkbox-background-checked: var(--ion-color-base);\n  --border-color-checked: var(--ion-color-base);\n  --checkmark-color: var(--ion-color-contrast);\n}\n\n:host(.legacy-checkbox) label {\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.legacy-checkbox) label {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.legacy-checkbox) label {\n    left: 0;\n  }\n  :host-context([dir=rtl]):host(.legacy-checkbox) label, :host-context([dir=rtl]).legacy-checkbox label {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.legacy-checkbox:dir(rtl)) label {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n:host(.legacy-checkbox) label::-moz-focus-inner {\n  border: 0;\n}\n\n.checkbox-wrapper {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item:not(.legacy-checkbox)) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox-icon {\n  border-radius: var(--border-radius);\n  position: relative;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--checkbox-background);\n  box-sizing: border-box;\n}\n\n:host(.legacy-checkbox) .checkbox-icon {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n:host(:not(.legacy-checkbox)) .checkbox-icon {\n  width: var(--size);\n  height: var(--size);\n}\n\n.checkbox-icon path {\n  fill: none;\n  stroke: var(--checkmark-color);\n  stroke-width: var(--checkmark-width);\n  opacity: 0;\n}\n\n:host(.checkbox-justify-space-between) .checkbox-wrapper {\n  justify-content: space-between;\n}\n\n:host(.checkbox-justify-start) .checkbox-wrapper {\n  justify-content: start;\n}\n\n:host(.checkbox-justify-end) .checkbox-wrapper {\n  justify-content: end;\n}\n\n:host(.checkbox-alignment-start) .checkbox-wrapper {\n  align-items: start;\n}\n\n:host(.checkbox-alignment-center) .checkbox-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL.\n */\n:host(.checkbox-label-placement-start) .checkbox-wrapper {\n  flex-direction: row;\n}\n\n:host(.checkbox-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the checkbox in LTR and\n * on the left in RTL.\n */\n:host(.checkbox-label-placement-end) .checkbox-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the checkbox should be on the start\n * when the label sits at the end.\n */\n:host(.checkbox-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the checkbox.\n */\n:host(.checkbox-label-placement-stacked) .checkbox-wrapper {\n  flex-direction: column;\n}\n\n:host(.checkbox-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the checkbox should be on the bottom\n   * when the label sits at the top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the checkbox.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n:host(.checkbox-checked) .checkbox-icon,\n:host(.checkbox-indeterminate) .checkbox-icon {\n  border-color: var(--border-color-checked);\n  background: var(--checkbox-background-checked);\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  opacity: 1;\n}\n\n:host(.checkbox-disabled) {\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: 50%;\n  --border-width: 0.0625rem;\n  --border-style: solid;\n  --border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);\n  --checkbox-background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --size: min(1.625rem, 65.988px);\n}\n\n:host(.checkbox-disabled) {\n  opacity: 0.3;\n}\n\n:host(.in-item.legacy-checkbox) {\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 8px;\n  margin-inline-end: 8px;\n  margin-top: 10px;\n  margin-bottom: 9px;\n  display: block;\n  position: static;\n}\n\n:host(.in-item.legacy-checkbox[slot=start]) {\n  -webkit-margin-start: 2px;\n  margin-inline-start: 2px;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n  margin-top: 8px;\n  margin-bottom: 8px;\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  /**\n   * @prop --size: Size of the checkbox icon\n   *\n   * @prop --checkbox-background: Background of the checkbox icon\n   * @prop --checkbox-background-checked: Background of the checkbox icon when checked\n   *\n   * @prop --border-color: Border color of the checkbox icon\n   * @prop --border-radius: Border radius of the checkbox icon\n   * @prop --border-width: Border width of the checkbox icon\n   * @prop --border-style: Border style of the checkbox icon\n   * @prop --border-color-checked: Border color of the checkbox icon when checked\n   *\n   * @prop --transition: Transition of the checkbox icon\n   *\n   * @prop --checkmark-color: Color of the checkbox checkmark when checked\n   * @prop --checkmark-width: Stroke width of the checkbox checkmark\n   */\n  --checkbox-background-checked: var(--ion-color-primary, #3880ff);\n  --border-color-checked: var(--ion-color-primary, #3880ff);\n  --checkmark-color: var(--ion-color-primary-contrast, #fff);\n  --checkmark-width: 1;\n  --transition: none;\n  display: inline-block;\n  position: relative;\n  cursor: pointer;\n  user-select: none;\n  z-index: 2;\n}\n\n:host(.in-item) {\n  width: 100%;\n  height: 100%;\n}\n\n/**\n * Checkbox can be slotted\n * in components such as item and\n * toolbar which is why we do not\n * limit the below behavior to just ion-item.\n */\n:host([slot=start]:not(.legacy-checkbox)),\n:host([slot=end]:not(.legacy-checkbox)) {\n  width: auto;\n}\n\n:host(.legacy-checkbox) {\n  width: var(--size);\n  height: var(--size);\n}\n\n:host(.ion-color) {\n  --checkbox-background-checked: var(--ion-color-base);\n  --border-color-checked: var(--ion-color-base);\n  --checkmark-color: var(--ion-color-contrast);\n}\n\n:host(.legacy-checkbox) label {\n  top: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n  appearance: none;\n  outline: none;\n  display: flex;\n  align-items: center;\n  opacity: 0;\n}\n@supports (inset-inline-start: 0) {\n  :host(.legacy-checkbox) label {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  :host(.legacy-checkbox) label {\n    left: 0;\n  }\n  :host-context([dir=rtl]):host(.legacy-checkbox) label, :host-context([dir=rtl]).legacy-checkbox label {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    :host(.legacy-checkbox:dir(rtl)) label {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n:host(.legacy-checkbox) label::-moz-focus-inner {\n  border: 0;\n}\n\n.checkbox-wrapper {\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  height: inherit;\n  cursor: inherit;\n}\n\n.label-text-wrapper {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n}\n\n:host(.in-item:not(.legacy-checkbox)) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper {\n  margin-top: 10px;\n  margin-bottom: 16px;\n}\n\n:host(.in-item.checkbox-label-placement-stacked) .native-wrapper {\n  margin-bottom: 10px;\n}\n\n/**\n * If no label text is placed into the slot\n * then the element should be hidden otherwise\n * there will be additional margins added.\n */\n.label-text-wrapper-hidden {\n  display: none;\n}\n\ninput {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: 0;\n  clip: rect(0 0 0 0);\n  opacity: 0;\n  overflow: hidden;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\n.native-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.checkbox-icon {\n  border-radius: var(--border-radius);\n  position: relative;\n  transition: var(--transition);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--checkbox-background);\n  box-sizing: border-box;\n}\n\n:host(.legacy-checkbox) .checkbox-icon {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n\n:host(:not(.legacy-checkbox)) .checkbox-icon {\n  width: var(--size);\n  height: var(--size);\n}\n\n.checkbox-icon path {\n  fill: none;\n  stroke: var(--checkmark-color);\n  stroke-width: var(--checkmark-width);\n  opacity: 0;\n}\n\n:host(.checkbox-justify-space-between) .checkbox-wrapper {\n  justify-content: space-between;\n}\n\n:host(.checkbox-justify-start) .checkbox-wrapper {\n  justify-content: start;\n}\n\n:host(.checkbox-justify-end) .checkbox-wrapper {\n  justify-content: end;\n}\n\n:host(.checkbox-alignment-start) .checkbox-wrapper {\n  align-items: start;\n}\n\n:host(.checkbox-alignment-center) .checkbox-wrapper {\n  align-items: center;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL.\n */\n:host(.checkbox-label-placement-start) .checkbox-wrapper {\n  flex-direction: row;\n}\n\n:host(.checkbox-label-placement-start) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the right of the checkbox in LTR and\n * on the left in RTL.\n */\n:host(.checkbox-label-placement-end) .checkbox-wrapper {\n  flex-direction: row-reverse;\n}\n\n/**\n * The margin between the label and\n * the checkbox should be on the start\n * when the label sits at the end.\n */\n:host(.checkbox-label-placement-end) .label-text-wrapper {\n  -webkit-margin-start: 16px;\n  margin-inline-start: 16px;\n  -webkit-margin-end: 0;\n  margin-inline-end: 0;\n}\n\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  /**\n   * The margin between the label and\n   * the checkbox should be on the end\n   * when the label sits at the start.\n   */\n  -webkit-margin-start: 0;\n  margin-inline-start: 0;\n  -webkit-margin-end: 16px;\n  margin-inline-end: 16px;\n}\n\n/**\n * Label is on the left of the checkbox in LTR and\n * on the right in RTL. Label also has a fixed width.\n */\n:host(.checkbox-label-placement-fixed) .label-text-wrapper {\n  flex: 0 0 100px;\n  width: 100px;\n  min-width: 100px;\n  max-width: 200px;\n}\n\n/**\n * Label is on top of the checkbox.\n */\n:host(.checkbox-label-placement-stacked) .checkbox-wrapper {\n  flex-direction: column;\n}\n\n:host(.checkbox-label-placement-stacked) .label-text-wrapper {\n  transform: scale(0.75);\n  /**\n   * The margin between the label and\n   * the checkbox should be on the bottom\n   * when the label sits at the top.\n   */\n  margin-left: 0;\n  margin-right: 0;\n  margin-bottom: 16px;\n  /**\n   * Label text should not extend\n   * beyond the bounds of the checkbox.\n   */\n  max-width: calc(100% / 0.75);\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper {\n  transform-origin: left top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper {\n  transform-origin: right top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper {\n    transform-origin: right top;\n  }\n}\n\n:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper {\n  transform-origin: center top;\n}\n:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper, :host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper {\n  transform-origin: calc(100% - center) top;\n}\n\n@supports selector(:dir(rtl)) {\n  :host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper {\n    transform-origin: calc(100% - center) top;\n  }\n}\n\n:host(.checkbox-checked) .checkbox-icon,\n:host(.checkbox-indeterminate) .checkbox-icon {\n  border-color: var(--border-color-checked);\n  background: var(--checkbox-background-checked);\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  opacity: 1;\n}\n\n:host(.checkbox-disabled) {\n  pointer-events: none;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host {\n  --border-radius: calc(var(--size) * .125);\n  --border-width: 2px;\n  --border-style: solid;\n  --border-color: rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);\n  --checkmark-width: 3;\n  --checkbox-background: var(--ion-item-background, var(--ion-background-color, #fff));\n  --transition: background 180ms cubic-bezier(0.4, 0, 0.2, 1);\n  --size: 18px;\n}\n\n.checkbox-icon path {\n  stroke-dasharray: 30;\n  stroke-dashoffset: 30;\n}\n\n:host(.checkbox-checked) .checkbox-icon path,\n:host(.checkbox-indeterminate) .checkbox-icon path {\n  stroke-dashoffset: 0;\n  transition: stroke-dashoffset 90ms linear 90ms;\n}\n\n:host(.legacy-checkbox.checkbox-disabled),\n:host(.checkbox-disabled) .label-text-wrapper {\n  opacity: 0.38;\n}\n\n:host(.checkbox-disabled) .native-wrapper {\n  opacity: 0.63;\n}\n\n:host(.in-item.legacy-checkbox) {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 18px;\n  margin-bottom: 18px;\n  display: block;\n  position: static;\n}\n\n:host(.in-item.legacy-checkbox[slot=start]) {\n  -webkit-margin-start: 4px;\n  margin-inline-start: 4px;\n  -webkit-margin-end: 36px;\n  margin-inline-end: 36px;\n  margin-top: 18px;\n  margin-bottom: 18px;\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { createLegacyFormController } from \"../../utils/forms/index\";\nimport { getAriaLabel, inheritAriaAttributes, renderHiddenInput } from \"../../utils/helpers\";\nimport { printIonWarning } from \"../../utils/logging/index\";\nimport { createColorClasses, hostContext } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @slot - The label text to associate with the checkbox. Use the \"labelPlacement\" property to control where the label is placed relative to the checkbox.\n *\n * @part container - The container for the checkbox mark.\n * @part label - The label text describing the checkbox.\n * @part mark - The checkmark used to indicate the checked state.\n */\nexport class Checkbox {\n    constructor() {\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        this.inheritedAttributes = {};\n        // TODO(FW-3100): remove this\n        // This flag ensures we log the deprecation warning at most once.\n        this.hasLoggedDeprecationWarning = false;\n        /**\n         * Sets the checked property and emits\n         * the ionChange event. Use this to update the\n         * checked state in response to user-generated\n         * actions such as a click.\n         */\n        this.setChecked = (state) => {\n            const isChecked = (this.checked = state);\n            this.ionChange.emit({\n                checked: isChecked,\n                value: this.value,\n            });\n        };\n        this.toggleChecked = (ev) => {\n            ev.preventDefault();\n            this.setFocus();\n            this.setChecked(!this.checked);\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = (ev) => {\n            if (this.disabled) {\n                return;\n            }\n            this.toggleChecked(ev);\n        };\n        this.color = undefined;\n        this.name = this.inputId;\n        this.checked = false;\n        this.indeterminate = false;\n        this.disabled = false;\n        this.value = 'on';\n        this.labelPlacement = 'start';\n        this.justify = 'space-between';\n        this.alignment = 'center';\n        this.legacy = undefined;\n    }\n    connectedCallback() {\n        this.legacyFormController = createLegacyFormController(this.el); // TODO(FW-3100): remove this\n    }\n    componentWillLoad() {\n        this.emitStyle();\n        // TODO(FW-3100): remove check\n        if (!this.legacyFormController.hasLegacyControl()) {\n            this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n        }\n    }\n    styleChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        const style = {\n            'interactive-disabled': this.disabled,\n            // TODO(FW-3100): remove this\n            legacy: !!this.legacy,\n        };\n        // TODO(FW-3100): remove this\n        if (this.legacyFormController.hasLegacyControl()) {\n            style['checkbox-checked'] = this.checked;\n        }\n        this.ionStyle.emit(style);\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    // TODO(FW-3100): run contents of renderCheckbox directly instead\n    render() {\n        const { legacyFormController } = this;\n        return legacyFormController.hasLegacyControl() ? this.renderLegacyCheckbox() : this.renderCheckbox();\n    }\n    renderCheckbox() {\n        const { color, checked, disabled, el, getSVGPath, indeterminate, inheritedAttributes, inputId, justify, labelPlacement, name, value, alignment, } = this;\n        const mode = getIonMode(this);\n        const path = getSVGPath(mode, indeterminate);\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        return (h(Host, { \"aria-checked\": indeterminate ? 'mixed' : `${checked}`, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'checkbox-checked': checked,\n                'checkbox-disabled': disabled,\n                'checkbox-indeterminate': indeterminate,\n                interactive: true,\n                [`checkbox-justify-${justify}`]: true,\n                [`checkbox-alignment-${alignment}`]: true,\n                [`checkbox-label-placement-${labelPlacement}`]: true,\n            }), onClick: this.onClick }, h(\"label\", { class: \"checkbox-wrapper\" }, h(\"input\", Object.assign({ type: \"checkbox\", checked: checked ? true : undefined, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) }, inheritedAttributes)), h(\"div\", { class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': el.textContent === '',\n            }, part: \"label\" }, h(\"slot\", null)), h(\"div\", { class: \"native-wrapper\" }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path)))));\n    }\n    // TODO(FW-3100): remove this\n    renderLegacyCheckbox() {\n        if (!this.hasLoggedDeprecationWarning) {\n            printIonWarning(`ion-checkbox now requires providing a label with either the default slot or the \"aria-label\" attribute. To migrate, remove any usage of \"ion-label\" and pass the label text to either the component or the \"aria-label\" attribute.\n\nExample: <ion-checkbox>Label</ion-checkbox>\nExample with aria-label: <ion-checkbox aria-label=\"Label\"></ion-checkbox>\n\nDevelopers can use the \"legacy\" property to continue using the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.`, this.el);\n            if (this.legacy) {\n                printIonWarning(`ion-checkbox is being used with the \"legacy\" property enabled which will forcibly enable the legacy form markup. This property will be removed in an upcoming major release of Ionic where this form control will use the modern form markup.\nDevelopers can dismiss this warning by removing their usage of the \"legacy\" property and using the new checkbox syntax.`, this.el);\n            }\n            this.hasLoggedDeprecationWarning = true;\n        }\n        const { color, checked, disabled, el, getSVGPath, indeterminate, inputId, name, value } = this;\n        const mode = getIonMode(this);\n        const { label, labelId, labelText } = getAriaLabel(el, inputId);\n        const path = getSVGPath(mode, indeterminate);\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        return (h(Host, { \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'checkbox-checked': checked,\n                'checkbox-disabled': disabled,\n                'checkbox-indeterminate': indeterminate,\n                'legacy-checkbox': true,\n                interactive: true,\n            }), onClick: this.onClick }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) })));\n    }\n    getSVGPath(mode, indeterminate) {\n        let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n        if (mode === 'md') {\n            path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n        }\n        return path;\n    }\n    static get is() { return \"ion-checkbox\"; }\n    static get encapsulation() { return \"shadow\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"checkbox.ios.scss\"],\n            \"md\": [\"checkbox.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"checkbox.ios.css\"],\n            \"md\": [\"checkbox.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"color\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"Color\",\n                    \"resolved\": \"\\\"danger\\\" | \\\"dark\\\" | \\\"light\\\" | \\\"medium\\\" | \\\"primary\\\" | \\\"secondary\\\" | \\\"success\\\" | \\\"tertiary\\\" | \\\"warning\\\" | string & Record<never, never> | undefined\",\n                    \"references\": {\n                        \"Color\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::Color\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The color to use from your application's color palette.\\nDefault options are: `\\\"primary\\\"`, `\\\"secondary\\\"`, `\\\"tertiary\\\"`, `\\\"success\\\"`, `\\\"warning\\\"`, `\\\"danger\\\"`, `\\\"light\\\"`, `\\\"medium\\\"`, and `\\\"dark\\\"`.\\nFor more information on colors, see [theming](/docs/theming/basics).\"\n                },\n                \"attribute\": \"color\",\n                \"reflect\": true\n            },\n            \"name\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The name of the control, which is submitted with the form data.\"\n                },\n                \"attribute\": \"name\",\n                \"reflect\": false,\n                \"defaultValue\": \"this.inputId\"\n            },\n            \"checked\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the checkbox is selected.\"\n                },\n                \"attribute\": \"checked\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"indeterminate\": {\n                \"type\": \"boolean\",\n                \"mutable\": true,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the checkbox will visually appear as indeterminate.\"\n                },\n                \"attribute\": \"indeterminate\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"disabled\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If `true`, the user cannot interact with the checkbox.\"\n                },\n                \"attribute\": \"disabled\",\n                \"reflect\": false,\n                \"defaultValue\": \"false\"\n            },\n            \"value\": {\n                \"type\": \"any\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"any | null\",\n                    \"resolved\": \"any\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The value of the checkbox does not mean if it's checked or not, use the `checked`\\nproperty for that.\\n\\nThe value of a checkbox is analogous to the value of an `<input type=\\\"checkbox\\\">`,\\nit's only used when the checkbox participates in a native `<form>`.\"\n                },\n                \"attribute\": \"value\",\n                \"reflect\": false,\n                \"defaultValue\": \"'on'\"\n            },\n            \"labelPlacement\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'fixed' | 'stacked'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"fixed\\\" | \\\"stacked\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Where to place the label relative to the checkbox.\\n`\\\"start\\\"`: The label will appear to the left of the checkbox in LTR and to the right in RTL.\\n`\\\"end\\\"`: The label will appear to the right of the checkbox in LTR and to the left in RTL.\\n`\\\"fixed\\\"`: The label has the same behavior as `\\\"start\\\"` except it also has a fixed width. Long text will be truncated with ellipses (\\\"...\\\").\\n`\\\"stacked\\\"`: The label will appear above the checkbox regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\"\n                },\n                \"attribute\": \"label-placement\",\n                \"reflect\": false,\n                \"defaultValue\": \"'start'\"\n            },\n            \"justify\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'end' | 'space-between'\",\n                    \"resolved\": \"\\\"end\\\" | \\\"space-between\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to pack the label and checkbox within a line.\\n`\\\"start\\\"`: The label and checkbox will appear on the left in LTR and\\non the right in RTL.\\n`\\\"end\\\"`: The label and checkbox will appear on the right in LTR and\\non the left in RTL.\\n`\\\"space-between\\\"`: The label and checkbox will appear on opposite\\nends of the line with space between the two elements.\"\n                },\n                \"attribute\": \"justify\",\n                \"reflect\": false,\n                \"defaultValue\": \"'space-between'\"\n            },\n            \"alignment\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"'start' | 'center'\",\n                    \"resolved\": \"\\\"center\\\" | \\\"start\\\"\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"How to control the alignment of the checkbox and label on the cross axis.\\n`\\\"start\\\"`: The label and control will appear on the left of the cross axis in LTR, and on the right side in RTL.\\n`\\\"center\\\"`: The label and control will appear at the center of the cross axis in both LTR and RTL.\"\n                },\n                \"attribute\": \"alignment\",\n                \"reflect\": false,\n                \"defaultValue\": \"'center'\"\n            },\n            \"legacy\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Set the `legacy` property to `true` to forcibly use the legacy form control markup.\\nIonic will only opt checkboxes in to the modern form markup when they are\\nusing either the `aria-label` attribute or have text in the default slot. As a result,\\nthe `legacy` property should only be used as an escape hatch when you want to\\navoid this automatic opt-in behavior.\\n\\nNote that this property will be removed in an upcoming major release\\nof Ionic, and all form components will be opted-in to using the modern form markup.\"\n                },\n                \"attribute\": \"legacy\",\n                \"reflect\": false\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionChange\",\n                \"name\": \"ionChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checked property has changed\\nas a result of a user action such as a click.\\nThis event will not emit when programmatically\\nsetting the checked property.\"\n                },\n                \"complexType\": {\n                    \"original\": \"CheckboxChangeEventDetail\",\n                    \"resolved\": \"CheckboxChangeEventDetail<any>\",\n                    \"references\": {\n                        \"CheckboxChangeEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"./checkbox-interface\",\n                            \"id\": \"src/components/checkbox/checkbox-interface.ts::CheckboxChangeEventDetail\"\n                        }\n                    }\n                }\n            }, {\n                \"method\": \"ionFocus\",\n                \"name\": \"ionFocus\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checkbox has focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionBlur\",\n                \"name\": \"ionBlur\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Emitted when the checkbox loses focus.\"\n                },\n                \"complexType\": {\n                    \"original\": \"void\",\n                    \"resolved\": \"void\",\n                    \"references\": {}\n                }\n            }, {\n                \"method\": \"ionStyle\",\n                \"name\": \"ionStyle\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the styles change.\"\n                },\n                \"complexType\": {\n                    \"original\": \"StyleEventDetail\",\n                    \"resolved\": \"StyleEventDetail\",\n                    \"references\": {\n                        \"StyleEventDetail\": {\n                            \"location\": \"import\",\n                            \"path\": \"../../interface\",\n                            \"id\": \"src/interface.d.ts::StyleEventDetail\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"checked\",\n                \"methodName\": \"styleChanged\"\n            }, {\n                \"propName\": \"disabled\",\n                \"methodName\": \"styleChanged\"\n            }];\n    }\n}\nlet checkboxIds = 0;\n","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n:host ion-list {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\nion-list-header,\nion-label {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n/**\n * The main content inside of a popover has overflow: hidden\n * so that a descendant ion-content can be scrolled.\n * However, select-popover does not use ion-content so we need\n * to explicitly make this container scrollable.\n */\n:host {\n  overflow-y: auto;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\nion-list ion-radio::part(container) {\n  opacity: 0;\n}\n\nion-item {\n  --inner-border-width: 0;\n}\n\n.item-radio-checked {\n  --background: rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.08);\n  --background-focused: var(--ion-color-primary, #3880ff);\n  --background-focused-opacity: 0.2;\n  --background-hover: var(--ion-color-primary, #3880ff);\n  --background-hover-opacity: 0.12;\n}\n\n.item-checkbox-checked {\n  --background-activated: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-focused: var(--ion-item-color, var(--ion-text-color, #000));\n  --background-hover: var(--ion-item-color, var(--ion-text-color, #000));\n  --color: var(--ion-color-primary, #3880ff);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h, forceUpdate } from \"@stencil/core\";\nimport { safeCall } from \"../../utils/overlays\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @internal\n */\nexport class SelectPopover {\n    constructor() {\n        this.header = undefined;\n        this.subHeader = undefined;\n        this.message = undefined;\n        this.multiple = undefined;\n        this.options = [];\n    }\n    findOptionFromEvent(ev) {\n        const { options } = this;\n        return options.find((o) => o.value === ev.target.value);\n    }\n    /**\n     * When an option is selected we need to get the value(s)\n     * of the selected option(s) and return it in the option\n     * handler\n     */\n    callOptionHandler(ev) {\n        const option = this.findOptionFromEvent(ev);\n        const values = this.getValues(ev);\n        if (option === null || option === void 0 ? void 0 : option.handler) {\n            safeCall(option.handler, values);\n        }\n    }\n    /**\n     * Dismisses the host popover that the `ion-select-popover`\n     * is rendered within.\n     */\n    dismissParentPopover() {\n        const popover = this.el.closest('ion-popover');\n        if (popover) {\n            popover.dismiss();\n        }\n    }\n    setChecked(ev) {\n        const { multiple } = this;\n        const option = this.findOptionFromEvent(ev);\n        // this is a popover with checkboxes (multiple value select)\n        // we need to set the checked value for this option\n        if (multiple && option) {\n            option.checked = ev.detail.checked;\n        }\n    }\n    getValues(ev) {\n        const { multiple, options } = this;\n        if (multiple) {\n            // this is a popover with checkboxes (multiple value select)\n            // return an array of all the checked values\n            return options.filter((o) => o.checked).map((o) => o.value);\n        }\n        // this is a popover with radio buttons (single value select)\n        // return the value that was clicked, otherwise undefined\n        const option = this.findOptionFromEvent(ev);\n        return option ? option.value : undefined;\n    }\n    renderOptions(options) {\n        const { multiple } = this;\n        switch (multiple) {\n            case true:\n                return this.renderCheckboxOptions(options);\n            default:\n                return this.renderRadioOptions(options);\n        }\n    }\n    renderCheckboxOptions(options) {\n        return options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-checkbox-checked': option.checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-checkbox\", { value: option.value, disabled: option.disabled, checked: option.checked, justify: \"start\", labelPlacement: \"end\", onIonChange: (ev) => {\n                this.setChecked(ev);\n                this.callOptionHandler(ev);\n                // TODO FW-4784\n                forceUpdate(this);\n            } }, option.text))));\n    }\n    renderRadioOptions(options) {\n        const checked = options.filter((o) => o.checked).map((o) => o.value)[0];\n        return (h(\"ion-radio-group\", { value: checked, onIonChange: (ev) => this.callOptionHandler(ev) }, options.map((option) => (h(\"ion-item\", { class: Object.assign({\n                // TODO FW-4784\n                'item-radio-checked': option.value === checked\n            }, getClassMap(option.cssClass)) }, h(\"ion-radio\", { value: option.value, disabled: option.disabled, onClick: () => this.dismissParentPopover(), onKeyUp: (ev) => {\n                if (ev.key === ' ') {\n                    /**\n                     * Selecting a radio option with keyboard navigation,\n                     * either through the Enter or Space keys, should\n                     * dismiss the popover.\n                     */\n                    this.dismissParentPopover();\n                }\n            } }, option.text))))));\n    }\n    render() {\n        const { header, message, options, subHeader } = this;\n        const hasSubHeaderOrMessage = subHeader !== undefined || message !== undefined;\n        return (h(Host, { key: 'ddf45e058c75aae175f8589e3539ff152a5b47ad', class: getIonMode(this) }, h(\"ion-list\", { key: '52dbf712bf6cbdcb9d2e6223b99c67ecc90977ff' }, header !== undefined && h(\"ion-list-header\", { key: '692fc85c97591f09a2a9b0bccc8f71e97681cc09' }, header), hasSubHeaderOrMessage && (h(\"ion-item\", { key: 'ecab23444eaadc3ed21e7053d50890db1012475f' }, h(\"ion-label\", { key: '639f08137d7066fd79316f63e850ddcc6a3b54a7', class: \"ion-text-wrap\" }, subHeader !== undefined && h(\"h3\", { key: 'dc501101ac9d68b1d0ce80679b339a2b132d1ae9' }, subHeader), message !== undefined && h(\"p\", { key: '5ead8c1a2e90d29fe0f05e04a9fa65c7e9e62ca5' }, message)))), this.renderOptions(options))));\n    }\n    static get is() { return \"ion-select-popover\"; }\n    static get encapsulation() { return \"scoped\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.scss\"],\n            \"md\": [\"select-popover.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"select-popover.ios.css\"],\n            \"md\": [\"select-popover.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"header\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The header text of the popover\"\n                },\n                \"attribute\": \"header\",\n                \"reflect\": false\n            },\n            \"subHeader\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The subheader text of the popover\"\n                },\n                \"attribute\": \"sub-header\",\n                \"reflect\": false\n            },\n            \"message\": {\n                \"type\": \"string\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"string\",\n                    \"resolved\": \"string | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"The text content of the popover body\"\n                },\n                \"attribute\": \"message\",\n                \"reflect\": false\n            },\n            \"multiple\": {\n                \"type\": \"boolean\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"boolean\",\n                    \"resolved\": \"boolean | undefined\",\n                    \"references\": {}\n                },\n                \"required\": false,\n                \"optional\": true,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"If true, the select accepts multiple values\"\n                },\n                \"attribute\": \"multiple\",\n                \"reflect\": false\n            },\n            \"options\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"SelectPopoverOption[]\",\n                    \"resolved\": \"SelectPopoverOption[]\",\n                    \"references\": {\n                        \"SelectPopoverOption\": {\n                            \"location\": \"import\",\n                            \"path\": \"./select-popover-interface\",\n                            \"id\": \"src/components/select-popover/select-popover-interface.ts::SelectPopoverOption\"\n                        }\n                    }\n                },\n                \"required\": false,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"An array of options for the popover\"\n                },\n                \"defaultValue\": \"[]\"\n            }\n        };\n    }\n    static get elementRef() { return \"el\"; }\n}\n"],"mappings":"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","ignoreList":[]}