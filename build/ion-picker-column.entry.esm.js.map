{"version":3,"file":"ion-picker-column.entry.esm.js","sources":["node_modules/@ionic/core/dist/collection/components/picker-column/picker-column.ios.css?tag=ion-picker-column&mode=ios","node_modules/@ionic/core/dist/collection/components/picker-column/picker-column.md.css?tag=ion-picker-column&mode=md","node_modules/@ionic/core/dist/collection/components/picker-column/picker-column.js"],"sourcesContent":["/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.picker-col {\n  display: flex;\n  position: relative;\n  flex: 1;\n  justify-content: center;\n  height: 100%;\n  box-sizing: content-box;\n  contain: content;\n}\n\n.picker-opts {\n  position: relative;\n  flex: 1;\n  max-width: 100%;\n}\n\n.picker-opt {\n  top: 0;\n  display: block;\n  position: absolute;\n  width: 100%;\n  border: 0;\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  contain: strict;\n  overflow: hidden;\n  will-change: transform;\n}\n@supports (inset-inline-start: 0) {\n  .picker-opt {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .picker-opt {\n    left: 0;\n  }\n  :host-context([dir=rtl]) .picker-opt {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  [dir=rtl] .picker-opt {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    .picker-opt:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n\n.picker-opt.picker-opt-disabled {\n  pointer-events: none;\n}\n\n.picker-opt-disabled {\n  opacity: 0;\n}\n\n.picker-opts-left {\n  justify-content: flex-start;\n}\n\n.picker-opts-right {\n  justify-content: flex-end;\n}\n\n.picker-opt:active, .picker-opt:focus {\n  outline: none;\n}\n\n.picker-prefix {\n  position: relative;\n  flex: 1;\n  text-align: end;\n  white-space: nowrap;\n}\n\n.picker-suffix {\n  position: relative;\n  flex: 1;\n  text-align: start;\n  white-space: nowrap;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.picker-col {\n  -webkit-padding-start: 4px;\n  padding-inline-start: 4px;\n  -webkit-padding-end: 4px;\n  padding-inline-end: 4px;\n  padding-top: 0;\n  padding-bottom: 0;\n  transform-style: preserve-3d;\n}\n\n.picker-prefix,\n.picker-suffix,\n.picker-opts {\n  top: 77px;\n  transform-style: preserve-3d;\n  color: inherit;\n  font-size: 20px;\n  line-height: 42px;\n  pointer-events: none;\n}\n\n.picker-opt {\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  transform-origin: center center;\n  height: 46px;\n  transform-style: preserve-3d;\n  transition-timing-function: ease-out;\n  background: transparent;\n  color: inherit;\n  font-size: 20px;\n  line-height: 42px;\n  backface-visibility: hidden;\n  pointer-events: auto;\n}\n:host-context([dir=rtl]) .picker-opt {\n  transform-origin: calc(100% - center) center;\n}\n\n[dir=rtl] .picker-opt {\n  transform-origin: calc(100% - center) center;\n}\n\n@supports selector(:dir(rtl)) {\n  .picker-opt:dir(rtl) {\n    transform-origin: calc(100% - center) center;\n  }\n}","/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.picker-col {\n  display: flex;\n  position: relative;\n  flex: 1;\n  justify-content: center;\n  height: 100%;\n  box-sizing: content-box;\n  contain: content;\n}\n\n.picker-opts {\n  position: relative;\n  flex: 1;\n  max-width: 100%;\n}\n\n.picker-opt {\n  top: 0;\n  display: block;\n  position: absolute;\n  width: 100%;\n  border: 0;\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  contain: strict;\n  overflow: hidden;\n  will-change: transform;\n}\n@supports (inset-inline-start: 0) {\n  .picker-opt {\n    inset-inline-start: 0;\n  }\n}\n@supports not (inset-inline-start: 0) {\n  .picker-opt {\n    left: 0;\n  }\n  :host-context([dir=rtl]) .picker-opt {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  [dir=rtl] .picker-opt {\n    left: unset;\n    right: unset;\n    right: 0;\n  }\n  @supports selector(:dir(rtl)) {\n    .picker-opt:dir(rtl) {\n      left: unset;\n      right: unset;\n      right: 0;\n    }\n  }\n}\n\n.picker-opt.picker-opt-disabled {\n  pointer-events: none;\n}\n\n.picker-opt-disabled {\n  opacity: 0;\n}\n\n.picker-opts-left {\n  justify-content: flex-start;\n}\n\n.picker-opts-right {\n  justify-content: flex-end;\n}\n\n.picker-opt:active, .picker-opt:focus {\n  outline: none;\n}\n\n.picker-prefix {\n  position: relative;\n  flex: 1;\n  text-align: end;\n  white-space: nowrap;\n}\n\n.picker-suffix {\n  position: relative;\n  flex: 1;\n  text-align: start;\n  white-space: nowrap;\n}\n\n/**\n * Convert a font size to a dynamic font size.\n * Fonts that participate in Dynamic Type should use\n * dynamic font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param unit (optional) - The unit to convert to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a maximum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * a minimum font size.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * Convert a font size to a dynamic font size but impose\n * maximum and minimum font sizes.\n * @param size - The initial font size including the unit (i.e. px or pt)\n * @param minScale - The minimum scale of the font (i.e. 0.8 for a minimum 80% scale).\n * @param maxScale - The maximum scale of the font (i.e. 2.5 for a maximum 250% scale).\n * @param unit (optional) - The unit to convert the initial font size to. Use this if you want to\n * convert to a unit other than $baselineUnit.\n */\n/**\n * A heuristic that applies CSS to tablet\n * viewports.\n *\n * Usage:\n * @include tablet-viewport() {\n *   :host {\n *     background-color: green;\n *   }\n * }\n */\n/**\n * A heuristic that applies CSS to mobile\n * viewports (i.e. phones, not tablets).\n *\n * Usage:\n * @include mobile-viewport() {\n *   :host {\n *     background-color: blue;\n *   }\n * }\n */\n.picker-col {\n  -webkit-padding-start: 8px;\n  padding-inline-start: 8px;\n  -webkit-padding-end: 8px;\n  padding-inline-end: 8px;\n  padding-top: 0;\n  padding-bottom: 0;\n  transform-style: preserve-3d;\n}\n\n.picker-prefix,\n.picker-suffix,\n.picker-opts {\n  top: 77px;\n  transform-style: preserve-3d;\n  color: inherit;\n  font-size: 22px;\n  line-height: 42px;\n  pointer-events: none;\n}\n\n.picker-opt {\n  margin-left: 0;\n  margin-right: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding-left: 0;\n  padding-right: 0;\n  padding-top: 0;\n  padding-bottom: 0;\n  height: 43px;\n  transition-timing-function: ease-out;\n  background: transparent;\n  color: inherit;\n  font-size: 22px;\n  line-height: 42px;\n  backface-visibility: hidden;\n  pointer-events: auto;\n}\n\n.picker-prefix,\n.picker-suffix,\n.picker-opt.picker-opt-selected {\n  color: var(--ion-color-primary, #3880ff);\n}","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { Host, h } from \"@stencil/core\";\nimport { clamp } from \"../../utils/helpers\";\nimport { hapticSelectionChanged, hapticSelectionEnd, hapticSelectionStart } from \"../../utils/native/haptic\";\nimport { getClassMap } from \"../../utils/theme\";\nimport { getIonMode } from \"../../global/ionic-global\";\n/**\n * @internal\n */\nexport class PickerColumnCmp {\n    constructor() {\n        this.optHeight = 0;\n        this.rotateFactor = 0;\n        this.scaleFactor = 1;\n        this.velocity = 0;\n        this.y = 0;\n        this.noAnimate = true;\n        // `colDidChange` is a flag that gets set when the column is changed\n        // dynamically. When this flag is set, the column will refresh\n        // after the component re-renders to incorporate the new column data.\n        // This is necessary because `this.refresh` queries for the option elements,\n        // so it needs to wait for the latest elements to be available in the DOM.\n        // Ex: column is created with 3 options. User updates the column data\n        // to have 5 options. The column will still think it only has 3 options.\n        this.colDidChange = false;\n        this.col = undefined;\n    }\n    colChanged() {\n        this.colDidChange = true;\n    }\n    async connectedCallback() {\n        let pickerRotateFactor = 0;\n        let pickerScaleFactor = 0.81;\n        const mode = getIonMode(this);\n        if (mode === 'ios') {\n            pickerRotateFactor = -0.46;\n            pickerScaleFactor = 1;\n        }\n        this.rotateFactor = pickerRotateFactor;\n        this.scaleFactor = pickerScaleFactor;\n        this.gesture = (await import('../../utils/gesture')).createGesture({\n            el: this.el,\n            gestureName: 'picker-swipe',\n            gesturePriority: 100,\n            threshold: 0,\n            passive: false,\n            onStart: (ev) => this.onStart(ev),\n            onMove: (ev) => this.onMove(ev),\n            onEnd: (ev) => this.onEnd(ev),\n        });\n        this.gesture.enable();\n        // Options have not been initialized yet\n        // Animation must be disabled through the `noAnimate` flag\n        // Otherwise, the options will render\n        // at the top of the column and transition down\n        this.tmrId = setTimeout(() => {\n            this.noAnimate = false;\n            // After initialization, `refresh()` will be called\n            // At this point, animation will be enabled. The options will\n            // animate as they are being selected.\n            this.refresh(true);\n        }, 250);\n    }\n    componentDidLoad() {\n        this.onDomChange();\n    }\n    componentDidUpdate() {\n        // Options may have changed since last update.\n        if (this.colDidChange) {\n            // Animation must be disabled through the `onDomChange` parameter.\n            // Otherwise, the recently added options will render\n            // at the top of the column and transition down\n            this.onDomChange(true, false);\n            this.colDidChange = false;\n        }\n    }\n    disconnectedCallback() {\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        if (this.tmrId)\n            clearTimeout(this.tmrId);\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    emitColChange() {\n        this.ionPickerColChange.emit(this.col);\n    }\n    setSelected(selectedIndex, duration) {\n        // if there is a selected index, then figure out it's y position\n        // if there isn't a selected index, then just use the top y position\n        const y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;\n        this.velocity = 0;\n        // set what y position we're at\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        this.update(y, duration, true);\n        this.emitColChange();\n    }\n    update(y, duration, saveY) {\n        if (!this.optsEl) {\n            return;\n        }\n        // ensure we've got a good round number :)\n        let translateY = 0;\n        let translateZ = 0;\n        const { col, rotateFactor } = this;\n        const prevSelected = col.selectedIndex;\n        const selectedIndex = (col.selectedIndex = this.indexForY(-y));\n        const durationStr = duration === 0 ? '' : duration + 'ms';\n        const scaleStr = `scale(${this.scaleFactor})`;\n        const children = this.optsEl.children;\n        for (let i = 0; i < children.length; i++) {\n            const button = children[i];\n            const opt = col.options[i];\n            const optOffset = i * this.optHeight + y;\n            let transform = '';\n            if (rotateFactor !== 0) {\n                const rotateX = optOffset * rotateFactor;\n                if (Math.abs(rotateX) <= 90) {\n                    translateY = 0;\n                    translateZ = 90;\n                    transform = `rotateX(${rotateX}deg) `;\n                }\n                else {\n                    translateY = -9999;\n                }\n            }\n            else {\n                translateZ = 0;\n                translateY = optOffset;\n            }\n            const selected = selectedIndex === i;\n            transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n            if (this.scaleFactor !== 1 && !selected) {\n                transform += scaleStr;\n            }\n            // Update transition duration\n            if (this.noAnimate) {\n                opt.duration = 0;\n                button.style.transitionDuration = '';\n            }\n            else if (duration !== opt.duration) {\n                opt.duration = duration;\n                button.style.transitionDuration = durationStr;\n            }\n            // Update transform\n            if (transform !== opt.transform) {\n                opt.transform = transform;\n            }\n            button.style.transform = transform;\n            /**\n             * Ensure that the select column\n             * item has the selected class\n             */\n            opt.selected = selected;\n            if (selected) {\n                button.classList.add(PICKER_OPT_SELECTED);\n            }\n            else {\n                button.classList.remove(PICKER_OPT_SELECTED);\n            }\n        }\n        this.col.prevSelected = prevSelected;\n        if (saveY) {\n            this.y = y;\n        }\n        if (this.lastIndex !== selectedIndex) {\n            // have not set a last index yet\n            hapticSelectionChanged();\n            this.lastIndex = selectedIndex;\n        }\n    }\n    decelerate() {\n        if (this.velocity !== 0) {\n            // still decelerating\n            this.velocity *= DECELERATION_FRICTION;\n            // do not let it go slower than a velocity of 1\n            this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);\n            let y = this.y + this.velocity;\n            if (y > this.minY) {\n                // whoops, it's trying to scroll up farther than the options we have!\n                y = this.minY;\n                this.velocity = 0;\n            }\n            else if (y < this.maxY) {\n                // gahh, it's trying to scroll down farther than we can!\n                y = this.maxY;\n                this.velocity = 0;\n            }\n            this.update(y, 0, true);\n            const notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;\n            if (notLockedIn) {\n                // isn't locked in yet, keep decelerating until it is\n                this.rafId = requestAnimationFrame(() => this.decelerate());\n            }\n            else {\n                this.velocity = 0;\n                this.emitColChange();\n                hapticSelectionEnd();\n            }\n        }\n        else if (this.y % this.optHeight !== 0) {\n            // needs to still get locked into a position so options line up\n            const currentPos = Math.abs(this.y % this.optHeight);\n            // create a velocity in the direction it needs to scroll\n            this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;\n            this.decelerate();\n        }\n    }\n    indexForY(y) {\n        return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n    }\n    onStart(detail) {\n        // We have to prevent default in order to block scrolling under the picker\n        // but we DO NOT have to stop propagation, since we still want\n        // some \"click\" events to capture\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        hapticSelectionStart();\n        // reset everything\n        if (this.rafId !== undefined)\n            cancelAnimationFrame(this.rafId);\n        const options = this.col.options;\n        let minY = options.length - 1;\n        let maxY = 0;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                minY = Math.min(minY, i);\n                maxY = Math.max(maxY, i);\n            }\n        }\n        this.minY = -(minY * this.optHeight);\n        this.maxY = -(maxY * this.optHeight);\n    }\n    onMove(detail) {\n        if (detail.event.cancelable) {\n            detail.event.preventDefault();\n        }\n        detail.event.stopPropagation();\n        // update the scroll position relative to pointer start position\n        let y = this.y + detail.deltaY;\n        if (y > this.minY) {\n            // scrolling up higher than scroll area\n            y = Math.pow(y, 0.8);\n            this.bounceFrom = y;\n        }\n        else if (y < this.maxY) {\n            // scrolling down below scroll area\n            y += Math.pow(this.maxY - y, 0.9);\n            this.bounceFrom = y;\n        }\n        else {\n            this.bounceFrom = 0;\n        }\n        this.update(y, 0, false);\n    }\n    onEnd(detail) {\n        if (this.bounceFrom > 0) {\n            // bounce back up\n            this.update(this.minY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        else if (this.bounceFrom < 0) {\n            // bounce back down\n            this.update(this.maxY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n        if (this.velocity === 0 && detail.deltaY === 0) {\n            const opt = detail.event.target.closest('.picker-opt');\n            if (opt === null || opt === void 0 ? void 0 : opt.hasAttribute('opt-index')) {\n                this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n            }\n        }\n        else {\n            this.y += detail.deltaY;\n            if (Math.abs(detail.velocityY) < 0.05) {\n                const isScrollingUp = detail.deltaY > 0;\n                const optHeightFraction = (Math.abs(this.y) % this.optHeight) / this.optHeight;\n                if (isScrollingUp && optHeightFraction > 0.5) {\n                    this.velocity = Math.abs(this.velocity) * -1;\n                }\n                else if (!isScrollingUp && optHeightFraction <= 0.5) {\n                    this.velocity = Math.abs(this.velocity);\n                }\n            }\n            this.decelerate();\n        }\n    }\n    refresh(forceRefresh, animated) {\n        var _a;\n        let min = this.col.options.length - 1;\n        let max = 0;\n        const options = this.col.options;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                min = Math.min(min, i);\n                max = Math.max(max, i);\n            }\n        }\n        /**\n         * Only update selected value if column has a\n         * velocity of 0. If it does not, then the\n         * column is animating might land on\n         * a value different than the value at\n         * selectedIndex\n         */\n        if (this.velocity !== 0) {\n            return;\n        }\n        const selectedIndex = clamp(min, (_a = this.col.selectedIndex) !== null && _a !== void 0 ? _a : 0, max);\n        if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n            const y = selectedIndex * this.optHeight * -1;\n            const duration = animated ? TRANSITION_DURATION : 0;\n            this.velocity = 0;\n            this.update(y, duration, true);\n        }\n    }\n    onDomChange(forceRefresh, animated) {\n        const colEl = this.optsEl;\n        if (colEl) {\n            // DOM READ\n            // We perfom a DOM read over a rendered item, this needs to happen after the first render or after the the column has changed\n            this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;\n        }\n        this.refresh(forceRefresh, animated);\n    }\n    render() {\n        const col = this.col;\n        const mode = getIonMode(this);\n        return (h(Host, { key: '49bb4c67a67c7318d4c305df78ceabae36355112', class: Object.assign({ [mode]: true, 'picker-col': true, 'picker-opts-left': this.col.align === 'left', 'picker-opts-right': this.col.align === 'right' }, getClassMap(col.cssClass)), style: {\n                'max-width': this.col.columnWidth,\n            } }, col.prefix && (h(\"div\", { key: '7e65761d24473e4ba0ce2d4fc707a5c5e8127903', class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { key: '65c3aea609401e8ae4ea6d363a1b9436796c0a86', class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: (el) => (this.optsEl = el) }, col.options.map((o, index) => (h(\"button\", { \"aria-label\": o.ariaLabel, class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text)))), col.suffix && (h(\"div\", { key: 'c2e5a324ba95dd8832d3eb81b139e1f674d74a35', class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n    }\n    static get is() { return \"ion-picker-column\"; }\n    static get originalStyleUrls() {\n        return {\n            \"ios\": [\"picker-column.ios.scss\"],\n            \"md\": [\"picker-column.md.scss\"]\n        };\n    }\n    static get styleUrls() {\n        return {\n            \"ios\": [\"picker-column.ios.css\"],\n            \"md\": [\"picker-column.md.css\"]\n        };\n    }\n    static get properties() {\n        return {\n            \"col\": {\n                \"type\": \"unknown\",\n                \"mutable\": false,\n                \"complexType\": {\n                    \"original\": \"PickerColumn\",\n                    \"resolved\": \"PickerColumn\",\n                    \"references\": {\n                        \"PickerColumn\": {\n                            \"location\": \"import\",\n                            \"path\": \"../picker/picker-interface\",\n                            \"id\": \"src/components/picker/picker-interface.ts::PickerColumn\"\n                        }\n                    }\n                },\n                \"required\": true,\n                \"optional\": false,\n                \"docs\": {\n                    \"tags\": [],\n                    \"text\": \"Picker column data\"\n                }\n            }\n        };\n    }\n    static get events() {\n        return [{\n                \"method\": \"ionPickerColChange\",\n                \"name\": \"ionPickerColChange\",\n                \"bubbles\": true,\n                \"cancelable\": true,\n                \"composed\": true,\n                \"docs\": {\n                    \"tags\": [{\n                            \"name\": \"internal\",\n                            \"text\": undefined\n                        }],\n                    \"text\": \"Emitted when the selected value has changed\"\n                },\n                \"complexType\": {\n                    \"original\": \"PickerColumn\",\n                    \"resolved\": \"PickerColumn\",\n                    \"references\": {\n                        \"PickerColumn\": {\n                            \"location\": \"import\",\n                            \"path\": \"../picker/picker-interface\",\n                            \"id\": \"src/components/picker/picker-interface.ts::PickerColumn\"\n                        }\n                    }\n                }\n            }];\n    }\n    static get elementRef() { return \"el\"; }\n    static get watchers() {\n        return [{\n                \"propName\": \"col\",\n                \"methodName\": \"colChanged\"\n            }];\n    }\n}\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\n"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,kBAAkB,GAAG,y7DAAy7D;;ACAp9D,MAAM,iBAAiB,GAAG,ivDAAivD;;MCW9vD,eAAe,GAAA,MAAA;AACxB,IAAA,WAAA,CAAA,OAAA,EAAA;;;AACI,QAAA,IAAI,CAAC,SAAS,GAAG,CAAC;AAClB,QAAA,IAAI,CAAC,YAAY,GAAG,CAAC;AACrB,QAAA,IAAI,CAAC,WAAW,GAAG,CAAC;AACpB,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;AACjB,QAAA,IAAI,CAAC,CAAC,GAAG,CAAC;AACV,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;;;;;;;;AAQrB,QAAA,IAAI,CAAC,YAAY,GAAG,KAAK;AACzB,QAAA,IAAI,CAAC,GAAG,GAAG,SAAS;AACvB;IACD,UAAU,GAAA;AACN,QAAA,IAAI,CAAC,YAAY,GAAG,IAAI;;AAE5B,IAAA,MAAM,iBAAiB,GAAA;QACnB,IAAI,kBAAkB,GAAG,CAAC;QAC1B,IAAI,iBAAiB,GAAG,IAAI;AAC5B,QAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;AAC7B,QAAA,IAAI,IAAI,KAAK,KAAK,EAAE;YAChB,kBAAkB,GAAG,KAAK;YAC1B,iBAAiB,GAAG,CAAC;;AAEzB,QAAA,IAAI,CAAC,YAAY,GAAG,kBAAkB;AACtC,QAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB;AACpC,QAAA,IAAI,CAAC,OAAO,GAAG,CAAC,MAAM,OAAO,iBAAqB,CAAC,EAAE,aAAa,CAAC;YAC/D,EAAE,EAAE,IAAI,CAAC,EAAE;AACX,YAAA,WAAW,EAAE,cAAc;AAC3B,YAAA,eAAe,EAAE,GAAG;AACpB,YAAA,SAAS,EAAE,CAAC;AACZ,YAAA,OAAO,EAAE,KAAK;YACd,OAAO,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;YACjC,MAAM,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AAChC,SAAA,CAAC;AACF,QAAA,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;;;;;AAKrB,QAAA,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,MAAK;AACzB,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK;;;;AAItB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACrB,EAAE,GAAG,CAAC;;IAEX,gBAAgB,GAAA;QACZ,IAAI,CAAC,WAAW,EAAE;;IAEtB,kBAAkB,GAAA;;AAEd,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE;;;;AAInB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC;AAC7B,YAAA,IAAI,CAAC,YAAY,GAAG,KAAK;;;IAGjC,oBAAoB,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AACxB,YAAA,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,IAAI,IAAI,CAAC,KAAK;AACV,YAAA,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;AAC5B,QAAA,IAAI,IAAI,CAAC,OAAO,EAAE;AACd,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,SAAS;;;IAGhC,aAAa,GAAA;QACT,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;;IAE1C,WAAW,CAAC,aAAa,EAAE,QAAQ,EAAA;;;QAG/B,MAAM,CAAC,GAAG,aAAa,GAAG,EAAE,GAAG,EAAE,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AACpE,QAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;;AAEjB,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AACxB,YAAA,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC;QAC9B,IAAI,CAAC,aAAa,EAAE;;AAExB,IAAA,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAA;AACrB,QAAA,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;YACd;;;QAGJ,IAAI,UAAU,GAAG,CAAC;QAClB,IAAI,UAAU,GAAG,CAAC;AAClB,QAAA,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,IAAI;AAClC,QAAA,MAAM,YAAY,GAAG,GAAG,CAAC,aAAa;AACtC,QAAA,MAAM,aAAa,IAAI,GAAG,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,QAAA,MAAM,WAAW,GAAG,QAAQ,KAAK,CAAC,GAAG,EAAE,GAAG,QAAQ,GAAG,IAAI;AACzD,QAAA,MAAM,QAAQ,GAAG,CAAA,MAAA,EAAS,IAAI,CAAC,WAAW,GAAG;AAC7C,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ;AACrC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAA,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC;YAC1B,MAAM,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC;YACxC,IAAI,SAAS,GAAG,EAAE;AAClB,YAAA,IAAI,YAAY,KAAK,CAAC,EAAE;AACpB,gBAAA,MAAM,OAAO,GAAG,SAAS,GAAG,YAAY;gBACxC,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;oBACzB,UAAU,GAAG,CAAC;oBACd,UAAU,GAAG,EAAE;AACf,oBAAA,SAAS,GAAG,CAAA,QAAA,EAAW,OAAO,CAAA,KAAA,CAAO;;qBAEpC;oBACD,UAAU,GAAG,KAAK;;;iBAGrB;gBACD,UAAU,GAAG,CAAC;gBACd,UAAU,GAAG,SAAS;;AAE1B,YAAA,MAAM,QAAQ,GAAG,aAAa,KAAK,CAAC;AACpC,YAAA,SAAS,IAAI,CAAmB,gBAAA,EAAA,UAAU,CAAM,GAAA,EAAA,UAAU,MAAM;YAChE,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACrC,SAAS,IAAI,QAAQ;;;AAGzB,YAAA,IAAI,IAAI,CAAC,SAAS,EAAE;AAChB,gBAAA,GAAG,CAAC,QAAQ,GAAG,CAAC;AAChB,gBAAA,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,EAAE;;AAEnC,iBAAA,IAAI,QAAQ,KAAK,GAAG,CAAC,QAAQ,EAAE;AAChC,gBAAA,GAAG,CAAC,QAAQ,GAAG,QAAQ;AACvB,gBAAA,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,WAAW;;;AAGjD,YAAA,IAAI,SAAS,KAAK,GAAG,CAAC,SAAS,EAAE;AAC7B,gBAAA,GAAG,CAAC,SAAS,GAAG,SAAS;;AAE7B,YAAA,MAAM,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS;AAClC;;;AAGG;AACH,YAAA,GAAG,CAAC,QAAQ,GAAG,QAAQ;YACvB,IAAI,QAAQ,EAAE;AACV,gBAAA,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC;;iBAExC;AACD,gBAAA,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC;;;AAGpD,QAAA,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,YAAY;QACpC,IAAI,KAAK,EAAE;AACP,YAAA,IAAI,CAAC,CAAC,GAAG,CAAC;;AAEd,QAAA,IAAI,IAAI,CAAC,SAAS,KAAK,aAAa,EAAE;;AAElC,YAAA,sBAAsB,EAAE;AACxB,YAAA,IAAI,CAAC,SAAS,GAAG,aAAa;;;IAGtC,UAAU,GAAA;AACN,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;;AAErB,YAAA,IAAI,CAAC,QAAQ,IAAI,qBAAqB;;AAEtC,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YAC5F,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ;AAC9B,YAAA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;;AAEf,gBAAA,CAAC,GAAG,IAAI,CAAC,IAAI;AACb,gBAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;;AAEhB,iBAAA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;;AAEpB,gBAAA,CAAC,GAAG,IAAI,CAAC,IAAI;AACb,gBAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;;YAErB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;YACvB,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;YACvF,IAAI,WAAW,EAAE;;AAEb,gBAAA,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC;;iBAE1D;AACD,gBAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;gBACjB,IAAI,CAAC,aAAa,EAAE;AACpB,gBAAA,kBAAkB,EAAE;;;aAGvB,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;;AAEpC,YAAA,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;;AAEpD,YAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;YACxD,IAAI,CAAC,UAAU,EAAE;;;AAGzB,IAAA,SAAS,CAAC,CAAC,EAAA;AACP,QAAA,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEvG,IAAA,OAAO,CAAC,MAAM,EAAA;;;;AAIV,QAAA,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE;AACzB,YAAA,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;;AAEjC,QAAA,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE;AAC9B,QAAA,oBAAoB,EAAE;;AAEtB,QAAA,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS;AACxB,YAAA,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC;AACpC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO;AAChC,QAAA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,GAAG,CAAC;QAC7B,IAAI,IAAI,GAAG,CAAC;AACZ,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACtB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gBACxB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;;;QAGhC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;QACpC,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;;AAExC,IAAA,MAAM,CAAC,MAAM,EAAA;AACT,QAAA,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE;AACzB,YAAA,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE;;AAEjC,QAAA,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE;;QAE9B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM;AAC9B,QAAA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;;YAEf,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;AACpB,YAAA,IAAI,CAAC,UAAU,GAAG,CAAC;;AAElB,aAAA,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;;AAEpB,YAAA,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC;AACjC,YAAA,IAAI,CAAC,UAAU,GAAG,CAAC;;aAElB;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,CAAC;;QAEvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;;AAE5B,IAAA,KAAK,CAAC,MAAM,EAAA;AACR,QAAA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;;YAErB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;YACjC,IAAI,CAAC,aAAa,EAAE;YACpB;;AAEC,aAAA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;;YAE1B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC;YACjC,IAAI,CAAC,aAAa,EAAE;YACpB;;AAEJ,QAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,GAAiB,EAAE,MAAM,CAAC,SAAS,GAAG,EAAE,EAAE,gBAAgB,CAAC;AACjF,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5C,YAAA,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC;YACtD,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,MAAM,GAAG,MAAM,GAAG,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE;AACzE,gBAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,EAAE,CAAC,EAAE,mBAAmB,CAAC;;;aAGrF;AACD,YAAA,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM;YACvB,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,EAAE;AACnC,gBAAA,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC;gBACvC,MAAM,iBAAiB,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS;AAC9E,gBAAA,IAAI,aAAa,IAAI,iBAAiB,GAAG,GAAG,EAAE;AAC1C,oBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE;;AAE3C,qBAAA,IAAI,CAAC,aAAa,IAAI,iBAAiB,IAAI,GAAG,EAAE;oBACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;;;YAG/C,IAAI,CAAC,UAAU,EAAE;;;IAGzB,OAAO,CAAC,YAAY,EAAE,QAAQ,EAAA;AAC1B,QAAA,IAAI,EAAE;QACN,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;QACrC,IAAI,GAAG,GAAG,CAAC;AACX,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO;AAChC,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACtB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;gBACtB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;;;AAG9B;;;;;;AAMG;AACH,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACrB;;AAEJ,QAAA,MAAM,aAAa,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,MAAM,IAAI,IAAI,EAAE,KAAK,MAAM,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;QACvG,IAAI,IAAI,CAAC,GAAG,CAAC,YAAY,KAAK,aAAa,IAAI,YAAY,EAAE;YACzD,MAAM,CAAC,GAAG,aAAa,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE;YAC7C,MAAM,QAAQ,GAAG,QAAQ,GAAG,mBAAmB,GAAG,CAAC;AACnD,YAAA,IAAI,CAAC,QAAQ,GAAG,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC;;;IAGtC,WAAW,CAAC,YAAY,EAAE,QAAQ,EAAA;AAC9B,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;QACzB,IAAI,KAAK,EAAE;;;AAGP,YAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC,YAAY,GAAG,CAAC;;AAEvF,QAAA,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,QAAQ,CAAC;;IAExC,MAAM,GAAA;AACF,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG;AACpB,QAAA,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC7B,QAAQ,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,MAAM,EAAE,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,OAAO,EAAE,EAAE,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;AACzP,gBAAA,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW;AACpC,aAAA,EAAE,EAAE,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,WAAW,EAAE,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,GAAG,CAAC,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC,QAAQ,EAAE,EAAE,YAAY,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,qBAAqB,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,0CAA0C,EAAE,KAAK,EAAE,eAAe,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,CAAC,WAAW,EAAE,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;;;;;;;AA2EtoB,MAAM,mBAAmB,GAAG,qBAAqB;AACjD,MAAM,qBAAqB,GAAG,IAAI;AAClC,MAAM,gBAAgB,GAAG,EAAE;AAC3B,MAAM,mBAAmB,GAAG,GAAG;;;;;;;;","x_google_ignoreList":[0,1,2]}